{"version":3,"sources":["utils/storageUtils.js","api/ajax.js","api/index.js","config/menuConfig.js","components/LeftNav/NavMenu.jsx","redux/action.js","redux/action-types.js","components/LeftNav/index.jsx","components/Header/DropDown.jsx","components/Header/index.jsx","pages/Home/Home.jsx","pages/Category/AddCategory.jsx","pages/Category/UpdateCategory.jsx","utils/tablePagination.js","pages/Category/Category.jsx","utils/constants.js","pages/Product/Index.jsx","pages/Product/Details.jsx","components/UploadImg.jsx","components/RichText.jsx","pages/Product/ProductEdit.jsx","pages/Product/Product.jsx","pages/Role/AddRole.jsx","pages/Role/RoleAuth.jsx","pages/Role/Role.jsx","utils/validate.js","pages/User/UserForm.jsx","pages/User/User.jsx","pages/Graph/Bar.jsx","pages/Graph/Line.jsx","pages/Graph/PieChart.jsx","pages/NotFound/index.jsx","pages/Guide/guide.jsx","pages/Guide/index.jsx","utils/excel.js","pages/Excel/ExcelInOut.jsx","pages/Excel/index.jsx","pages/Componment/SecurityValidation.jsx","components/Slider/SliderDots.jsx","components/Slider/index.jsx","pages/Componment/Slider.jsx","pages/Componment/UploadImg.jsx","pages/Componment/Magnifier.jsx","pages/Componment/index.jsx","pages/Admin/Admin.jsx","pages/Login/Login.jsx","App.js","redux/reducer.js","redux/store.js","index.js","assets/img/logo.jpg","assets/img/404.jpg","components/Slider/img/wf1.jpg","components/Slider/img/wf2.jpg","components/Slider/img/wf3.jpg","components/Slider/img/wf4.jpg","components/Slider/img/wf5.jpg","assets/img/magnifier-big.jpg","assets/img/magnifier-small.jpg"],"names":["setUser","user","store","set","getUser","get","removeUser","remove","ajax","url","data","type","console","log","Promise","resolve","reject","axios","params","post","then","response","catch","err","message","error","fastMock","baseApi","reqAddCategory","categoryName","parentId","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqCategory","categoryId","reqUpdateStatus","productId","status","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUsers","userId","reqAddOrUpdateUsers","reqLogin","username","password","reqCategorys","reqUpdateCategory","menuList","title","key","icon","isPublic","children","SubMenu","NavMenu","state","openKeys","selectedKeys","getOpenKeys","string","newStr","newArr","arr","split","map","i","length","push","onOpenChange","setState","latestOpenKey","includes","getMenuNodes","item","hasAuth","Item","to","onClick","props","setHeadTitle","getMenuNodes_2","path","location","pathname","reduce","pre","find","cItem","JSON","parse","React","$storage_utils","menus","indexOf","child","this","collapsed","defaultProps","style","width","mode","theme","Component","connect","headTitle","withRouter","LeftNav","className","id","src","logoImg","size","DropDown","menu","loginOut","overlay","bind","href","e","preventDefault","Header","currentTime","moment","format","toggleCollapsed","getCurrentTime","timer","setInterval","getWeather","componentWillUnmount","clearInterval","headetitle","memo","Home","Option","AddCategory","setForm","form","categorysList","getFieldDecorator","onSubmit","handleSubmit","label","initialValue","rules","required","placeholder","value","res","min","max","add_category","create","UpdateCategory","labelCol","span","wrapperCol","propType","PropType","isRequired","func","update_category","pagations","defaultPageSize","showQuickJumper","Category","categorys","loading","parentName","subCategory","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategory","getCategorys","a","showCategory","showAdd","edit_category","addCategory","validateFields","errors","values","resetFields","updateCategory","getFieldValue","handleCancel","selectedId","left_title","marginRight","marginLeft","extra","rowKey","dataSource","bordered","pagination","visible","onOk","onCancel","cancelText","okText","BASE_URL","BASE_IMG_URL","UPLOAD_IMG","ProductIndex","productList","total","text","price","textAlign","color","productStatus","record","history","getProducts","list","success","cardTit","onChange","margin","event","target","current","defaultCurrent","ProductDetail","cName1","cName2","pCategoryId","res1","all","desc","detail","imgs","goBack","img","alt","dangerouslySetInnerHTML","__html","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","UploadImg","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","fileList","getImgs","index","uid","uploadButton","action","accept","listType","onPreview","footer","RichText","onEditorStateChange","editorState","getEditorText","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","responseText","link","EditorState","createEmpty","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","padding","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductEdit","options","validatePrice","rule","callback","submit","categorysId","uploadimg","richtext","isUpdate","loadData","selectedOptions","targetOption","subCategories","cOptions","c","isLeaf","initOptions","childOption","option","createRef","autoSize","minRows","maxRows","validator","addonAfter","onChangeSelect","ref","htmlType","WrapProductEdit","Product","component","exact","AddRole","TreeNode","RoleAuth","onCheck","checkedKeys","getTreeNodes","getMenus","treeNodes","nextProps","disabled","checkable","defaultExpandAll","Role","roleList","isShowAdd","isShowAuth","initColunms","create_time","auth_time","getRoleList","addRole","updateRoleAuth","menuKeys","userinfo","Date","now","auth_name","role_id","replace","rowSelection","hideDefaultSelections","onSelect","validatePsw","test","validateTel","validateEmail","UserForm","roles","formItemLayout","Password","phone","email","PureComponent","User","users","userEditorModal","roleNames","editUser","delUser","getUserList","initRoleName","confirm","addOrEditUser","localuser","Bar","sales","chartOption","show","tooltip","trigger","axisPointer","grid","left","right","bottom","containLabel","xAxis","axisTick","alignWithLabel","yAxis","boundaryGap","series","barWidth","update","spinning","tip","height","Line","PieChart","NotFound","notFound","steps","element","popover","description","position","stageBackground","Guide","driver","guide","defineSteps","start","showDriver","nativeEvent","stopImmediatePropagation","Driver","opacity","importsExcel","files","fileReader","workbook","XLSX","read","sheet","Sheets","hasOwnProperty","concat","utils","sheet_to_json","readAsBinaryString","exportExcel","headers","fileName","_headers","Object","assign","String","fromCharCode","prev","next","v","_data","j","content","output","outputPos","keys","wb","SheetNames","mySheet","wpx","writeFile","ExcelOut","lists","age","sex","excelIn_flag","excelName","excelIn","persist","currentTarget","downloadExcel","initForm","Index","ExcelInOut","SecurityValidation","SliderDots","liList","num","li","olLiClick","serialNumClick","serialNumChecked","serialNum","refs","serial_ol","currentIndex","liArr","Slider","getDom","sliderBox","slider","sliderWidth","offsetWidth","ul","arrow","liLen","parentDom","firstLi","appendChild","cloneNode","autoPlay","moveSlider","mouseEnter","display","stopautoPlay","mouseeave","preBtn","setTimeout","nextBtn","autoplaySpeed","timerId","step","offsetLeft","Math","abs","moveLen","onMouseEnter","onMouseLeave","sliderImg1","sliderImg2","sliderImg3","sliderImg4","sliderImg5","SliderPage","sliderConfig","init","box","smallBox","mask","bigBox","bigBoxImg","onmouseenter","onmouseleave","onmousemove","maskX","window","pageX","maskY","pageY","offsetTop","offsetHeight","maskMaxX","maskMaxY","top","bigImgX","bigImgY","MaginfierSmall","MaginfierBig","Magnifier","Footer","Sider","Content","Admin","storageUtils","from","Excel","Com","Login","enterLoading","stringify","msg","validatePwd","notification","duration","destroy","clearTimeout","whitespace","pattern","prefix","UserOutlined","LockOutlined","WrapLogin","loginFunc","dispatch","App","initUser","storageUtil","combineReducers","errorMsg","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDom","document","getElementById","module","exports"],"mappings":"6WAOe,GAKbA,QALa,SAKLC,GACNC,IAAMC,IAZS,aAYOF,IAKxBG,QAXa,WAYX,OAAOF,IAAMG,IAlBE,eAkBiB,MAElCC,WAda,WAeXJ,IAAMK,OArBS,gB,0NCQJ,SAASC,EAAKC,GAAyB,IAArBC,EAAoB,uDAAf,GAAGC,EAAY,uDAAP,MAO1C,OANAC,QAAQC,IAAI,SAASJ,EAAIC,EAAKC,GAMvB,IAAIG,SAAQ,SAACC,EAAQC,IAEZ,QAATL,EACWM,IAAMZ,IAAII,EAAI,CACpBS,OAAQR,IAGFO,IAAME,KAAKV,EAAIC,IAErBU,MAAK,SAAAC,GACTN,EAAQM,EAASX,SAClBY,OAAM,SAAAC,GACLC,EAAA,EAAQC,MAAM,2BAAOF,SCrBjC,IAAMG,EAAW,sEACXC,EAAU,6BAqBHC,EAAiB,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,SAAhB,OAA8BtB,EAAK,GAAD,OAAImB,EAAJ,wBAAkC,CAACG,WAASD,gBAAc,SAK7GE,EAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,SAAX,OAAyBzB,EAAK,GAAD,OAAImB,EAAJ,wBAAmC,CAACK,UAASC,cAOxFC,EAAoB,SAAC,GAAD,IAAEF,EAAF,EAAEA,QAASC,EAAX,EAAWA,SAASE,EAApB,EAAoBA,WAAWC,EAA/B,EAA+BA,WAA/B,OAA+C5B,EAAK,GAAD,OAAImB,EAAJ,uCAAsCK,UAASC,YAAUG,EAAYD,KAK5IE,EAAc,SAACC,GAAD,OAAgB9B,EAAK,GAAD,OAAImB,EAAJ,yBAAmC,CAACW,gBAMtEC,EAAkB,SAACC,EAAWC,GAAZ,OAAuBjC,EAAK,GAAD,OAAImB,EAAJ,gCAA2C,CAACa,YAAWC,UAAS,SAM7GC,EAAe,SAACC,GAAD,OAAUnC,EAAK,GAAD,OAAImB,EAAJ,sBAAgC,CAACgB,QAAM,SAEpEC,EAAwB,SAACC,GAAD,OAAarC,EAAK,GAAD,OAAImB,EAAJ,2BAA8BkB,EAAQC,IAAI,SAAS,OAASD,EAAS,SAQ9GE,EAAa,SAACC,GAAD,OAAaxC,EAAK,GAAD,OAAImB,EAAJ,oBAA8B,CAACqB,YAAU,SAGvEC,EAAgB,SAACC,GAAD,OAAS1C,EAAK,GAAD,OAAImB,EAAJ,uBAAiCuB,EAAK,SAGnEC,EAAW,kBAAM3C,EAAK,GAAD,OAAImB,EAAJ,uBAErByB,EAAiB,SAACC,GAAD,OAAY7C,EAAK,GAAD,OAAImB,EAAJ,uBAAiC,CAAC0B,UAAQ,SAG3EC,EAAsB,SAACrD,GAAD,OAAUO,EAAK,GAAD,OAAImB,EAAJ,wBAA2B1B,EAAK6C,IAAI,SAAS,OAAQ7C,EAAK,SAM9FsD,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAASC,EAAX,EAAWA,SAAX,OAAyBjD,EAAK,GAAD,OAAIkB,EAAJ,UAAqB,CAAC8B,WAASC,YAAU,SAGjFC,EAAe,SAAA5B,GAAQ,OAAItB,EAAK,GAAD,OAAIkB,EAAJ,kBAA6B,CAACI,cAE7D6B,EAAoB,SAAC,GAAD,IAAErB,EAAF,EAAEA,WAAWT,EAAb,EAAaA,aAAb,OAA+BrB,EAAK,GAAD,OAAIkB,EAAJ,oBAA+B,CAACY,aAAWT,gBAAc,SCL9G+B,EArFE,CACf,CACEC,MAAM,eACNC,IAAI,QACJC,KAAK,OACLC,UAAS,GAEX,CACEH,MAAM,eACNC,IAAI,OACJC,KAAK,WACLE,SAAS,CAAC,CACRJ,MAAM,2BACNC,IAAI,gBACJC,KAAK,kBACL,CACAF,MAAM,2BACNC,IAAI,eACJC,KAAK,cAEP,CACAF,MAAM,2BACNC,IAAI,QACJC,KAAK,QACL,CACAF,MAAM,2BACNC,IAAI,QACJC,KAAK,QACL,CACAF,MAAM,2BACNC,IAAI,SACJC,KAAK,aACLE,SAAS,CAAC,CACRJ,MAAM,qBACNC,IAAI,aACJC,KAAK,aACL,CACAF,MAAM,qBACNC,IAAI,cACJC,KAAK,SACL,CACAF,MAAM,eACNC,IAAI,aACJC,KAAK,eAEP,CACAF,MAAM,QACNC,IAAI,SACJC,KAAK,aACLE,SAAS,CAAC,CACRJ,MAAM,gCACNC,IAAI,iBACJC,KAAK,gBAEP,CACAF,MAAM,2BACNC,IAAI,OACJC,KAAK,OACLE,SAAS,CAAC,CACRJ,MAAM,2BACNC,IAAI,gBACJC,KAAK,iBACL,CACAF,MAAM,2BACNC,IAAI,cACJC,KAAK,WACL,CACAF,MAAM,2BACNC,IAAI,kBACJC,KAAK,gBACL,CACAF,MAAM,iCACNC,IAAI,iBACJC,KAAK,kBAEP,CACAF,MAAM,uCACNC,IAAI,QACJC,KAAK,cACL,CACAF,MAAM,2BACNC,IAAI,SACJC,KAAK,iB,SC3EDG,E,IAAAA,QAEFC,E,4MAKJC,MAAQ,CACNC,SAAU,GACVC,aAAc,I,EAGhBC,YAAc,SAAAC,GAIZ,IAHA,IAAIC,EAAS,GACXC,EAAS,GACTC,EAAMH,EAAOI,MAAM,KAAKC,KAAI,SAAAC,GAAC,MAAI,IAAMA,KAChCA,EAAI,EAAGA,EAAIH,EAAII,OAAS,EAAGD,IAClCL,GAAUE,EAAIG,GACdJ,EAAOM,KAAKP,GAEd,OAAOC,G,EA0BTO,aAAe,SAAAZ,GAEb,GADAzD,QAAQC,IAAI,cACY,IAApBwD,EAASU,QAAoC,IAApBV,EAASU,OAKpC,OAJA,EAAKG,SAAS,CACZb,kBAEFzD,QAAQC,IAAI,gBAAiBwD,GAK/B,IAAMc,EAAgBd,EAASA,EAASU,OAAS,GAG7CI,EAAcC,SAASf,EAAS,IAClC,EAAKa,SAAS,CACZb,aAGF,EAAKa,SAAS,CACZb,SAAU,CAACc,M,EAOjBE,aAAe,SAAAzB,GACb,OAAOA,EAASiB,KAAI,SAAAS,GAClB,GAAI,EAAKC,QAAQD,GACf,OAAKA,EAAKrB,SAQN,kBAACC,EAAD,CACEJ,IAAKwB,EAAKxB,IACVD,MACE,8BACE,uBAAMlD,KAAM2E,EAAKvB,OACjB,8BAAOuB,EAAKzB,SAIf,EAAKwB,aAAaC,EAAKrB,WAf1B,sBAAMuB,KAAN,CAAW1B,IAAKwB,EAAKxB,KACnB,kBAAC,IAAD,CAAM2B,GAAIH,EAAKxB,IAAK4B,QAAS,WAAQ,EAAKC,MAAMC,aAAaN,EAAKzB,SAAW,uBAAMlD,KAAM2E,EAAKvB,OAAQ,8BAAOuB,EAAKzB,a,EAyB9HgC,eAAiB,SAACjC,GAChB,IAAMkC,EAAO,EAAKH,MAAMI,SAASC,SACjC,OAAOpC,EAASqC,QAAO,SAACC,EAAKZ,GAEvB,EAAKC,QAAQD,KAEVA,EAAKrB,UAQMqB,EAAKrB,SAASkC,MAAK,SAAAC,GAAK,OAAIA,EAAMtC,MAAQgC,MAItD,EAAKZ,SAAS,IAIhBgB,EAAIlB,KACF,kBAACd,EAAD,CACEJ,IAAKwB,EAAKxB,IACVD,MACE,8BACE,uBAAMlD,KAAM2E,EAAKvB,OACjB,8BAAOuB,EAAKzB,SAIf,EAAKgC,eAAeP,EAAKrB,aAzB9BiC,EAAIlB,KACF,sBAAMQ,KAAN,CAAW1B,IAAKwB,EAAKxB,KACnB,kBAAC,IAAD,CAAM2B,GAAIH,EAAKxB,KAAK,uBAAMnD,KAAM2E,EAAKvB,OAASuB,EAAKzB,UA4B3D,OAAOqC,IACN,K,EAILX,QAAU,SAACD,GAAS,IAMVxB,EAAkBwB,EAAlBxB,IAAKE,EAAasB,EAAbtB,SACP/D,EAAOoG,KAAKC,MAAMC,IAAMC,eAAepG,WACvCqG,EAAQxG,EAAKiD,KAAKuD,MAExB,QAAiB,UADAxG,EAAKuD,WACMQ,IAAoC,IAAxByC,EAAMC,QAAQ5C,OAE5CwB,EAAKrB,YACJqB,EAAKrB,SAASkC,MAAK,SAAAQ,GAAK,OAAkC,IAA9BF,EAAMC,QAAQC,EAAM7C,S,kEAvIxC,IACbkC,EAAaY,KAAKjB,MAAMI,SAAxBC,SAOFY,KAAKrC,YAAYyB,GAAUjB,OAAS,EACtC6B,KAAK1B,SAAS,CACZZ,aAAcsC,KAAKrC,YAAYyB,GAAU,GACzC3B,SAAUuC,KAAKrC,YAAYyB,GAAU,KAGvCY,KAAK1B,SAAS,CACZZ,aAAc,CAAC0B,GACf3B,SAAUuC,KAAKrC,YAAYyB,O,+BA8HvB,IAAD,SAEyBY,KAAKjB,MAA7B/B,EAFD,EAECA,SAAUiD,EAFX,EAEWA,UAFX,EAG0BD,KAAKxC,MAAhCC,EAHC,EAGDA,SAAUC,EAHT,EAGSA,aACVwC,EAAeD,EAAY,GAAKxC,EACtC,OACE,yBAAK0C,MAAO,CAAEC,MAAO,SACnB,uBACEC,KAAK,SACLC,MAAM,OACN5C,aAAcA,EACdoB,QAAS,gBAAG5B,EAAH,EAAGA,IAAH,OAAa,EAAKoB,SAAS,CAAEZ,aAAc,CAACR,MACrDmB,aAAc2B,KAAK3B,aACnBZ,SAAUyC,GAETF,KAAKvB,aAAazB,S,GAnLPuD,aAmMPC,eACb,SAAAhD,GAAK,MAAK,KACV,CAACwB,aCrMyB,SAACyB,GAAD,MAAgB,CAAC1G,KCRf,iBDQmCD,KAAK2G,KDmMvDD,CAGbE,YAAWnD,I,kBGnLEoD,G,uKAdX,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,kBAAkBC,GAAG,YAClC,uBAAQC,IAAKC,IAASC,KAAK,UAC3B,qEAEF,yBAAKJ,UAAU,iBACb,kBAAC,EAAD,CAAS5D,SAAUA,EAAUiD,UAAWD,KAAKjB,MAAMkB,kB,GAZvCM,a,mBCoBPU,G,4MAxBbC,KAAO,WACL,OACE,2BACE,sBAAMtC,KAAN,CAAW1B,IAAI,KAAI,uBAAMnD,KAAK,SAAS,2DACvC,sBAAM6E,KAAN,CAAW1B,IAAI,KAAI,uBAAMnD,KAAK,YAA9B,4BACA,sBAAM6E,KAAN,CAAW1B,IAAI,KAAI,0BAAM4B,QAAS,EAAKC,MAAMoC,UAAU,uBAAMpH,KAAK,WAA/C,+B,uDAOvB,OACE,6BACE,wBAAUqH,QAASpB,KAAKkB,KAAKG,KAAKrB,OAChC,0BAAMY,UAAU,oBAAoBU,KAAK,IAAIxC,QAAS,SAAAyC,GAAC,OAAIA,EAAEC,mBAA7D,kC,GAjBajB,a,8BCKjBkB,G,4MAOJjE,MAAQ,CACNkE,YAAaC,OAASC,OAAO,wB,EAE/BC,gBAAkB,WAChB,EAAK9C,MAAM8C,mB,EAEbC,eAAiB,WACf,EAAKC,MAAQC,aAAY,WACvB,IAAMN,EAAcC,OAASC,OAAO,uBACpC,EAAKtD,SAAS,CAACoD,kBACf,M,EAEJO,WAAa,a,EA0BbC,qBAAuB,WACrBC,cAAc,EAAKJ,Q,kEAJnB/B,KAAK8B,iBACL9B,KAAKiC,e,+BAKG,IAAD,EACmCjC,KAAKjB,MAAvCkB,EADD,EACCA,UAAUkB,EADX,EACWA,SAASiB,EADpB,EACoBA,WACvB/I,EAAOoG,KAAKC,MAAMC,IAAMC,eAAepG,WAG3C,OACE,yBAAKoH,UAAU,aACb,yBAAKA,UAAU,aAAa9B,QAASkB,KAAK6B,gBAAiBhB,GAAG,eAC5D,uBAAM9G,KAAMkG,EAAY,cAAgB,eAE1C,yBAAKW,UAAU,cAAcwB,GAC7B,yBAAKxB,UAAU,eACb,yBAAKA,UAAU,WACb,uBAAGC,GAAG,eAAeb,KAAKxC,MAAMkE,aADlC,eAEI,8BAAOrI,EAAKuD,WAEhB,yBAAKiE,GAAG,cACN,kBAAC,GAAD,CAAUM,SAAUA,W,GAjEXZ,aA6ENC,gBACb,SAAAhD,GAAK,MAAK,CAAC4E,WAAW5E,EAAM4E,cAC5B,GAFa5B,CAGbb,IAAM0C,KAAKZ,KC3EEa,G,kDAXb,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IACDvB,MAAQ,GAFI,E,qDAKjB,OACE,yBAAKoD,UAAU,kBAAf,oB,GAPaL,a,iHCGXgC,G,KAAAA,OACF3D,GAAO,KAAKA,KAEZ4D,G,mLAQFxC,KAAKjB,MAAM0D,QAAQzC,KAAKjB,MAAM2D,Q,+BAEtB,IAAD,EAC6B1C,KAAKjB,MAAjC4D,EADD,EACCA,cAAezH,EADhB,EACgBA,SACf0H,EAAsB5C,KAAKjB,MAAM2D,KAAjCE,kBACR,OACE,yBAAKhC,UAAU,iBACb,wBAAMiC,SAAU7C,KAAK8C,cACnB,kBAAClE,GAAD,CAAMmE,MAAM,kCACTH,EAAkB,WAAY,CAC7BI,aAAc9H,EACd+H,MAAO,CAAC,CAAEC,UAAU,EAAMtI,QAAS,sDAFpCgI,CAIC,wBACEzC,MAAO,CAAEC,MAAO,QAChB+C,YAAY,oDAEd,kBAACZ,GAAD,CAAQa,MAAM,KAAd,4BACCT,EAAc1E,KAAI,SAAAoF,GACjB,OAAQ,kBAACd,GAAD,CAAQa,MAAOC,EAAInH,IAAKgB,IAAKmG,EAAInH,KAAMmH,EAAItH,YAKzD,kBAAC6C,GAAD,CAAMmE,MAAM,kCACTH,EAAkB,eAAgB,CACjCK,MAAO,CACL,CAAEC,UAAU,EAAMtI,QAAS,8CAC3B,CAAE0I,IAAK,EAAG1I,QAAS,6EACnB,CAAE2I,IAAK,GAAI3I,QAAS,0EAJvBgI,CAME,wBAAOO,YAAY,uD,GAvCR5C,aAqDXiD,GADM,KAAKC,QAAL,CAAcjB,I,mBCvD7B5D,GAAO,KAAKA,KAEZ8E,G,mLAOF1D,KAAKjB,MAAM0D,QAAQzC,KAAKjB,MAAM2D,Q,+BAEtB,IACAE,EAAsB5C,KAAKjB,MAAM2D,KAAjCE,kBACD3H,EAAgB+E,KAAKjB,MAArB9D,aACP,OACE,yBAAK2F,UAAU,iBACb,4BACE,kBAAC,GAAD,CAAMmC,MAAM,iCAAQY,SAAU,CAAEC,KAAM,GAAKC,WAAY,CAAED,KAAM,KAC5DhB,EAAkB,eAAgB,CACjCK,MAAO,CACL,CAAEC,UAAU,EAAMtI,QAAS,8CAC3B,CAAE0I,IAAK,EAAG1I,QAAS,6EACnB,CAAE2I,IAAK,GAAI3I,QAAS,yEAEtBoI,aAAa/H,GANd2H,CAOE,wBAAOO,YAAY,uD,GAvBL5C,aAAvBmD,GACGI,SAAW,CAChB7I,aAAc8I,KAASnG,OAAOoG,WAC9BvB,QAASsB,KAASE,KAAKD,YAiC3B,IACeE,GADS,KAAKT,QAAL,CAAcC,IC1CzBS,GAAY,CACvBC,gBAAgB,EAChBC,iBAAgB,GCgOHC,G,4MA1Nb9G,MAAQ,CACN+G,UAAW,GACXC,SAAS,EACTtJ,SAAU,IAEVuJ,WAAY,GACZC,YAAa,GACbC,WAAY,G,EAGdC,YAAc,WACZ,EAAKC,QAAU,CACb,CACE5H,MAAO,2BACP6H,UAAW,QACV,CACD7H,MAAO,eACPmD,MAAO,MACP0E,UAAW,GACXC,OAAQ,SAACC,GAAD,OAAc,6BACpB,0BAAMpE,UAAU,OAAO9B,QAAS,kBAAM,EAAKmG,WAAWD,KAAW,uBAAMjL,KAAK,SAA5E,4BAKyB,MAAxB,EAAKyD,MAAMtC,SAAmB,0BAAM0F,UAAU,OAAO9B,QAAS,kBAAM,EAAKoG,gBAAgBF,KAAW,uBAAMjL,KAAK,SAAjF,kCAAyG,U,EAQhJoL,a,uCAAe,WAAOjK,GAAP,iBAAAkK,EAAA,6DACb,EAAK9G,SAAS,CAAEkG,SAAS,IAEzBtJ,EAAWA,GAAY,EAAKsC,MAAMtC,SAHrB,SAIK4B,EAAa5B,GAJlB,OAIPmI,EAJO,OAKbrJ,QAAQC,IAAI,uCAASoJ,GACrB,EAAK/E,SAAS,CAAEkG,SAAS,IACN,IAAfnB,EAAIxH,QACA0I,EAAYlB,EAAIvJ,KACL,MAAboB,EACF,EAAKoD,SAAS,CACZiG,cAGF,EAAKjG,SAAS,CACZoG,YAAaH,KAIjB3J,EAAA,EAAQC,MAAM,oDAnBH,2C,wDAuBfwK,aAAe,WACb,EAAK/G,SAAS,CACZpD,SAAU,IACVwJ,YAAa,GACbD,WAAY,M,EAIhBS,gBAAkB,SAACF,GAEjB,EAAK1G,SAAS,CACZpD,SAAU8J,EAAS9I,IACnBuI,WAAYO,EAASjJ,OACpB,WACD,EAAKoJ,mB,EAmBTG,QAAU,WACR,EAAKhH,SAAS,CACZqG,WAAY,K,EAMhBM,WAAa,SAACD,GACZ,EAAKO,cAAgBP,EACrB,EAAK1G,SAAS,CACZqG,WAAY,K,EAMhBa,YAAc,WAMZ,EAAK9C,KAAK+C,eAAV,uCAAyB,WAAOC,EAAQC,GAAf,mBAAAP,EAAA,yDAClBM,EADkB,uBAGrB,EAAKpH,SAAS,CACZqG,WAAY,IAEN1J,EAA2B0K,EAA3B1K,aAAcC,EAAayK,EAAbzK,SAND,SAOHF,EAAe,CAAEE,WAAUD,iBAPxB,OAOfoI,EAPe,OASrB,EAAKX,KAAKkD,cACS,IAAfvC,EAAIxH,SAEFX,IAAa,EAAKsC,MAAMtC,SAE1B,EAAKiK,eACiB,MAAbjK,GACT,EAAKiK,aAAa,MAhBD,2CAAzB,oCAAAnF,KAAA,iB,EAyBF6F,eAAiB,WAMf,EAAKnD,KAAK+C,eAAV,uCAAyB,WAAOC,EAAQC,GAAf,mBAAAP,EAAA,yDAClBM,EADkB,uBAEfhK,EAAa,EAAK6J,cAAcrJ,IAKhCjB,EAAe,EAAKyH,KAAKoD,cAAc,gBAPxB,SAQH/I,EAAkB,CAAErB,aAAYT,iBAR7B,OAQfoI,EARe,OASrB,EAAKX,KAAKkD,cACS,IAAfvC,EAAIxH,QACN,EAAKsJ,eAEP,EAAKY,eAbgB,2CAAzB,oCAAA/F,KAAA,iB,EAmBF+F,aAAe,SAAAxE,GACb,EAAKmB,KAAKkD,cACV,EAAKtH,SAAS,CACZqG,WAAY,K,mEAvFd3E,KAAK4E,gB,0CAML5E,KAAKmF,iB,+BAsFG,IAAD,SAEuEnF,KAAKxC,MAA3E+G,EAFD,EAECA,UAAWC,EAFZ,EAEYA,QAAStJ,EAFrB,EAEqBA,SAAUwJ,EAF/B,EAE+BA,YAAaD,EAF5C,EAE4CA,WAAYE,EAFxD,EAEwDA,WACzDY,EAAgBvF,KAAKuF,eAAiB,GAE5CvF,KAAKgG,WAA0B,MAAb9K,EAAmBqJ,EAAU,IAAMA,EAAU,GAAGrI,IAAMhB,EAExE,IAAM+K,EAA0B,MAAb/K,EAAmB,2BACpC,6BACE,0BAAM0F,UAAU,OAAO9B,QAASkB,KAAKqF,cAArC,4BACA,uBAAMtL,KAAK,cAAcoG,MAAO,CAAE+F,YAAa,GAAIC,WAAY,MAC/D,8BAAO1B,IAGL2B,EACJ,wBAAQrM,KAAK,UAAU+E,QAASkB,KAAKsF,SAAS,uBAAMvL,KAAK,SAAzD,gBAGF,OACE,yBAAK6G,UAAU,gCACb,wBAAM3D,MAAOgJ,EAAYG,MAAOA,GAC9B,wBAAOC,OAAO,MAAMC,WAAyB,MAAbpL,EAAmBqJ,EAAYG,EAAa6B,UAAQ,EAAC/B,QAASA,EAASK,QAAS7E,KAAK6E,QAAS2B,WAAYrC,KAC1I,uBACElH,MAAM,2BACNwJ,QAAwB,IAAf9B,EACT+B,KAAM1G,KAAKwF,YACXmB,SAAU3G,KAAK+F,aACfa,WAAW,eACXC,OAAO,gBAGP,kBAAC,GAAD,CAAalE,cAAe4B,EAAW9B,QAAS,SAACC,GAAD,OAAU,EAAKA,KAAOA,GAAMxH,SAAUA,KAExF,uBACE+B,MAAM,2BACNwJ,QAAwB,IAAf9B,EACT+B,KAAM1G,KAAK6F,eACXc,SAAU3G,KAAK+F,cAEf,kBAAC,GAAD,CAAgB9K,aAAcsK,EAAcxJ,KAAM0G,QAAS,SAACC,GAAD,OAAU,EAAKA,KAAOA,Y,GAlNtEnC,a,mBCJjBuG,GAAQ,6BAGDC,GAAY,UAAMD,GAAN,YACZE,GAAU,UAAMF,GAAN,sBCHfvE,G,KAAAA,OAuJO0E,G,4MAjJbzJ,MAAQ,CACN0J,YAAa,GACbC,MAAO,GACP3C,SAAS,EACTjJ,WAAY,GACZC,WAAY,e,EAGdoJ,YAAc,WACZ,EAAKC,QAAU,CAAC,CACd5H,MAAO,2BACP6H,UAAW,OACXC,OAAQ,SAAAqC,GAAI,OAAI,uBAAG9F,KAAK,MAAM8F,KAC7B,CACDnK,MAAO,2BACP6H,UAAW,QACV,CACD7H,MAAO,eACPmD,MAAO,IACP0E,UAAW,QACXC,OAAQ,SAACsC,GAAD,sBAAeA,KACtB,CACDpK,MAAO,eACPmD,MAAO,IAEP2E,OAAQ,SAAC9I,GAAa,IACbJ,EAAoBI,EAApBJ,OAAOK,EAAaD,EAAbC,IAAIH,EAASE,EAATF,KAClB,OACE,yBAAKoE,MAAO,CAAEmH,UAAW,WACvB,wBAAKC,MAAkB,IAAX1L,EAAe,UAAY,OAAQiD,QAAS,kBAAM,EAAK0I,cAAuB,IAAT3L,EAAW,EAAE,EAAEK,EAAIH,KACvF,IAAVF,EAAc,eAAO,gBAClB,6BACN,0BAAMsE,MAAO,CAAEoH,MAAkB,IAAX1L,EAAgB,UAAY,SAAoB,IAAVA,EAAc,eAAO,yBAItF,CACDoB,MAAO,eACP6H,UAAW,UACX1E,MAAO,IACP2E,OAAQ,SAACqC,EAAMK,GAAP,OACN,6BACE,wBAAKF,MAAM,UAAUzI,QAAS,kBAAM,EAAKC,MAAM2I,QAAQtJ,KAAK,sBAAuB,CAAEqJ,aAArF,gBAGA,wBAAKF,MAAM,UAAUzI,QAAS,kBAAM,EAAKC,MAAM2I,QAAQtJ,KAAK,oBAAoBqJ,KAAhF,qB,EAORE,Y,uCAAc,WAAOvM,GAAP,2BAAAgK,EAAA,yDACZ,EAAKhK,QAAUA,EACf,EAAKkD,SAAS,CAAEkG,SAAS,IAFb,EAGuB,EAAKhH,MAAhCjC,EAHI,EAGJA,WAAYC,EAHR,EAGQA,YAEhBD,EALQ,gCAMED,EAAkB,CAAED,SDhEb,ECgEkCD,UAASG,aAAYC,eANhE,OAMV6H,EANU,+CAQElI,EAAY,CAAEE,SDlEP,ECkE4BD,YARrC,QAQViI,EARU,eAUZrJ,QAAQC,IAAIoJ,GAEZ,EAAK/E,SAAS,CAAEkG,SAAS,IACN,IAAfnB,EAAIxH,SAAe,EACGwH,EAAIvJ,KAApBqN,EADY,EACZA,MAAOS,EADK,EACLA,KACf,EAAKtJ,SAAS,CACZ6I,QACAD,YAAaU,KAjBL,4C,wDAsCdJ,c,uCAAgB,WAAO3L,EAAOD,EAAUG,GAAxB,SAAAqJ,EAAA,sEAGIzJ,EAAgBC,EAAUC,GAH9B,OAII,IAJJ,OAIPA,SAELjB,EAAA,EAAQiN,QAAR,wCACA,EAAKF,YAAY,EAAKvM,UAPV,2C,6HAZd4E,KAAK4E,gB,0CAML5E,KAAK2H,YAAY,K,+BAgBT,IAAD,SAC6C3H,KAAKxC,MAAjD0J,EADD,EACCA,YAAaC,EADd,EACcA,MAAO3C,EADrB,EACqBA,QAAShJ,EAD9B,EAC8BA,WAC/B4K,EACJ,wBAAQrM,KAAK,UAAU+E,QAAS,kBAAM,EAAKC,MAAM2I,QAAQtJ,KAAK,uBAAsB,uBAAMrE,KAAK,SAA/F,4BAEI+N,EACJ,6BACE,wBACE1E,MAAO5H,EACP2E,MAAO,CAAEC,MAAO,KAChB2H,SAAU,SAAA3E,GAAK,OAAI,EAAK9E,SAAS,CAAE9C,WAAY4H,MAE/C,kBAAC,GAAD,CAAQA,MAAM,eAAd,kCACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,mCAEF,wBACED,YAAY,qBACZhD,MAAO,CAAEC,MAAO,IAAK4H,OAAQ,UAC7BD,SAAU,SAAAE,GAAK,OAAI,EAAK3J,SAAS,CAAE/C,WAAY0M,EAAMC,OAAO9E,WAE9D,wBAAQrJ,KAAK,UAAU+E,QAAS,kBAAM,EAAK6I,YAAY,KAAvD,iBAGJ,OACE,wBAAM5N,KAAK,QAAQ6G,UAAU,gBAAgB3D,MAAO6K,EAAS1B,MAAOA,GAClE,wBACEvB,QAAS7E,KAAK6E,QACdyB,WAAYY,EACZX,UAAQ,EACR/B,QAASA,EACT6B,OAAO,MACPG,WAAY,CACV2B,QAASnI,KAAK5E,QACd+L,MAAOA,EACPiB,eAAgB,EAChBhE,gBD7Ia,EC8Ib2D,SAAU/H,KAAK2H,YACftD,iBAAiB,U,GA1IF9D,a,mBCNrB3B,GAAO,KAAKA,KAyEHyJ,G,4MApEb7K,MAAQ,CACN8K,OAAO,GACPC,OAAO,I,qMAG0BvI,KAAKjB,MAAMI,SAAS3B,MAAMiK,OAApDe,E,EAAAA,YAAY9M,E,EAAAA,WACA,MAAhB8M,E,gCACkB/M,EAAYC,G,OAAzB+M,E,OACAH,EAASG,EAAK3O,KAAKiC,KACzBiE,KAAK1B,SAAS,CAACgK,W,wCAOGpO,QAAQwO,IAAI,CAACjN,EAAY+M,GAAa/M,EAAYC,K,QAA9D2H,E,OACAiF,EAASjF,EAAI,GAAGvJ,KAAKiC,KACrBwM,EAASlF,EAAI,GAAGvJ,KAAKiC,KAC3BiE,KAAK1B,SAAS,CAACgK,SAAOC,W,sIAIhB,IAAD,SAC+BvI,KAAKjB,MAAMI,SAAS3B,MAAMiK,OAAzD1L,EADA,EACAA,KAAK4M,EADL,EACKA,KAAKtB,EADV,EACUA,MAAMuB,EADhB,EACgBA,OAAOC,EADvB,EACuBA,KADvB,EACwF7I,KAAKxC,MAAtB8K,EADvE,EACuEA,OAAOC,EAD9E,EAC8EA,OAG/ET,EACJ,6BACE,uBAAM/N,KAAK,aAAa6G,UAAU,QAAQ9B,QAAS,kBAAK,EAAKC,MAAM2I,QAAQoB,YAD7E,4BAKF,OACE,wBAAM7L,MAAO6K,EAASvB,UAAU,EAAO3F,UAAU,gCAC/C,4BACE,kBAAC,GAAD,KACE,0BAAMA,UAAU,YAAhB,kCACA,0BAAMA,UAAU,aAAa7E,IAE/B,kBAAC,GAAD,KACE,0BAAM6E,UAAU,YAAhB,kCACA,0BAAMA,UAAU,aAAa+H,IAE/B,kBAAC,GAAD,KACE,0BAAM/H,UAAU,YAAhB,kCACA,0BAAMA,UAAU,aAAayG,EAA7B,WAEF,kBAAC,GAAD,KACE,0BAAMzG,UAAU,YAAhB,kCACA,0BAAMA,UAAU,aAAa0H,EAAQC,EAAM,iBAAUA,GAAW,KAElE,kBAAC,GAAD,KACE,0BAAM3H,UAAU,YAAhB,kCACA,yBAAKA,UAAU,aACZiI,EAAK5K,KAAI,SAAA8K,GAAG,OAAK,yBAAK7L,IAAK6L,EAAKjI,IAAKiI,EAAKnI,UAAU,SAASoI,IAAI,aAGtE,kBAAC,GAAD,KACA,0BAAMpI,UAAU,YAAhB,kCACA,0BAAMA,UAAU,YAAYqI,wBAAyB,CAACC,OAAON,Y,GA7D3CrI,a,2DCD5B,SAAS4I,GAAUC,GACjB,OAAO,IAAIlP,SAAQ,SAACC,EAASC,GAC3B,IAAMiP,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,kBAAMrP,EAAQkP,EAAOI,SACrCJ,EAAOK,QAAU,SAAA7O,GAAK,OAAIT,EAAOS,O,IAIhB8O,G,kDAInB,WAAY5K,GAAQ,IAAD,uBACjB,cAAMA,IAuCRgH,aAAe,kBAAM,EAAKzH,SAAS,CAAEsL,gBAAgB,KAxClC,EA6CnBC,cA7CmB,uCA6CH,WAAMT,GAAN,SAAAhE,EAAA,yDACTgE,EAAKvP,KAAQuP,EAAKU,QADT,gCAESX,GAAUC,EAAKW,eAFxB,OAEZX,EAAKU,QAFO,cAKd,EAAKxL,SAAS,CACZ0L,aAAcZ,EAAKvP,KAAOuP,EAAKU,QAC/BF,gBAAgB,IAPJ,2CA7CG,wDA4DnBK,aA5DmB,uCA4DJ,uCAAA7E,EAAA,yDAASgE,EAAT,EAASA,KAAKc,EAAd,EAAcA,SACR,SAAhBd,EAAKvN,OADK,gBAGO,KADZwH,EAAM+F,EAAK3O,UACVoB,QACLjB,EAAA,EAAQiN,QAAQ,wCACT9L,EAAYsH,EAAZtH,KAAKlC,EAAOwJ,EAAPxJ,KAMZuP,EAAOc,EAASA,EAAS/L,OAAO,IAC3BpC,KAAOA,EACZqN,EAAKvP,IAAMA,GAGXe,EAAA,EAAQC,MAAM,wCAhBL,0BAkBa,YAAhBuO,EAAKvN,OAlBF,iCAmBOC,EAAasN,EAAKrN,KAAOqN,EAAKrN,KAAOqN,EAAK3O,SAASX,KAAKiC,MAnB/D,OAmBLsH,EAnBK,OAoBXrJ,QAAQC,IAAI,2BAAOmP,GACD,IAAf/F,EAAIxH,QACLjB,EAAA,EAAQiN,QAAQ,wCAtBP,QAyBb,EAAKvJ,SAAS,CAAE4L,aAzBH,4CA5DI,wDA0FnBC,QAAU,WAER,OADAnQ,QAAQC,IAAI,sBACL,EAAKuD,MAAM0M,SAASjM,KAAI,SAAAmL,GAAI,OAAIA,EAAKrN,SAtF5C,IAAImO,EAAW,GACRrB,EAAQ,EAAK9J,MAAb8J,KAPU,OAQdA,GAAQA,EAAK1K,OAAS,IACvB+L,EAAWrB,EAAK5K,KAAI,SAAC8K,EAAIqB,GAAL,MAClB,CACEC,KAAMD,EACNrO,KAAMgN,EACNlN,OAAO,OACPhC,IAAI,GAAD,OAAKkN,IAAL,OAAoBgC,QAI7B,EAAKvL,MAAQ,CACXoM,gBAAgB,EAChBI,aAAc,GACdE,YArBe,E,qDA8FT,IAAD,EAC2ClK,KAAKxC,MAA/CoM,EADD,EACCA,eAAgBI,EADjB,EACiBA,aAAaE,EAD9B,EAC8BA,SAC/BI,EACJ,6BACE,uBAAMvQ,KAAK,SACX,yBAAK6G,UAAU,mBAAf,WAGJ,OACE,yBAAKA,UAAU,YACb,wBACE2J,OAAQvD,GACRwD,OAAO,UACPC,SAAS,eACT1O,KAAK,QACLmO,SAAUA,EACVQ,UAAW1K,KAAK6J,cAChB9B,SAAU/H,KAAKiK,cAEdC,EAAS/L,QAAU,EAAI,KAAOmM,GAEjC,uBAAO7D,QAASmD,EAAgBe,OAAQ,KAAMhE,SAAU3G,KAAK+F,cAC3D,yBAAKiD,IAAI,UAAU7I,MAAO,CAAEC,MAAO,QAAUU,IAAKkJ,U,GAxHrBrK,IAAMY,W,8DC0F9BqK,I,yDA5Fb,WAAY7L,GAAQ,IAAD,uBACjB,cAAMA,IAsBR8L,oBAAsB,SAACC,GACrB,EAAKxM,SAAS,CACZwM,iBAzBe,EA4BnBC,cAAgB,WAId,OAAOC,KAAYC,wBAAa,EAAKzN,MAAMsN,YAAYI,uBAhCtC,EAqCnBC,oBAAsB,SAAC/B,GACrB,OAAO,IAAIlP,SACT,SAACC,EAASC,GACR,IAAMgR,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQtE,IAEjB,IAAMlN,EAAO,IAAIyR,SACjBzR,EAAK0R,OAAO,QAASpC,GACrBgC,EAAIK,KAAK3R,GACTsR,EAAIM,iBAAiB,QAAQ,WAC3B,IACM7R,EADW4F,KAAKC,MAAM0L,EAAIO,cACX7R,KAAKD,IAE1BM,EAAQ,CAACL,KAAM,CAAC8R,KAAM/R,QAExBuR,EAAIM,iBAAiB,SAAS,WAC5B,IAAM7Q,EAAQ4E,KAAKC,MAAM0L,EAAIO,cAC7BvR,EAAOS,UAhDb,IAAIiQ,EAAce,eAAYC,cACtBlD,EAAW,EAAK7J,MAAhB6J,OACR,GAAIA,GACmBmD,KAAYnD,GACf,CAChB,IAAMoD,EAAeC,gBAAaC,qBAAqBH,KAAYnD,GAAQuD,eAC3ErB,EAAce,eAAYO,kBAAkBJ,GAZ/B,OAgBjB,EAAKxO,MAAQ,CACXsN,eAjBe,E,qDAmET,IACAA,EAAgB9K,KAAKxC,MAArBsN,YACR,OACE,6BACE,6BACE,kBAAC,UAAD,CACEA,YAAaA,EACbuB,YAAa,CAAEC,OAAQ,oBAAqBC,UAAW,IAAKC,QAAS,GACrE3B,oBAAqB7K,KAAK6K,oBAC1B4B,QAAS,CACPC,MAAO,CAAEC,eAAgB3M,KAAKmL,oBAAqBnC,IAAK,CAAE4D,SAAS,EAAMC,WAAW,a,GAjF3EtM,cCHjB3B,GAAO,KAAKA,KACVkO,G,KAAAA,SAIFC,G,kDACJ,WAAYhO,GAAQ,IAAD,8BACjB,cAAMA,IAWRvB,MAAQ,CACNwP,QAAS,IAbQ,EAkBnBC,cAAgB,SAACC,EAAM9J,EAAO+J,GAC5BnT,QAAQC,IAAI,qBAAe,EAARmJ,SAAkBA,GACzB,EAARA,EAAY,EACd+J,IAEAA,EAAS,sDAvBM,EA6BnBC,OAAS,SAAA7L,GACPA,EAAEC,iBACF,EAAKzC,MAAM2D,KAAK+C,eAAhB,uCAA+B,WAAO9K,EAAKgL,GAAZ,+BAAAP,EAAA,yDAE7BpL,QAAQC,IAAI,eAAM0L,GACbhL,EAHwB,wBAKpBoB,EAAkC4J,EAAlC5J,KAAM4M,EAA4BhD,EAA5BgD,KAAMtB,EAAsB1B,EAAtB0B,MAEO,KAFAgG,EAAe1H,EAAf0H,aAEXlP,QACbqK,EAAc,IACd9M,EAAa2R,EAAY,KAEzB7E,EAAc6E,EAAY,GAC1B3R,EAAa2R,EAAY,IAErBxE,EAAO,EAAKyE,UAAUnF,QAAQgC,UAC9BvB,EAAS,EAAK2E,SAASpF,QAAQ4C,gBAErC/Q,QAAQC,IAAI2O,GACN3M,EAAU,CAACF,OAAM4M,OAAMtB,QAAOwB,OAAMD,SAAQJ,cAAa9M,cAE5D,EAAK8R,WACNvR,EAAQC,IAAM,EAAKD,QAAQC,KArBF,UAwBTF,EAAsBC,GAxBb,QA0BT,IA1BS,OA0BpBJ,QACLjB,EAAA,EAAQiN,QAAR,UAAmB,EAAK2F,SAAW,eAAO,eAA1C,mCACA,EAAKzO,MAAM2I,QAAQoB,UAEnBlO,EAAA,EAAQiN,QAAR,UAAmB,EAAK2F,SAAW,eAAO,eAA1C,mCA9ByB,4CAA/B,oCAAAxN,KAAA,iBA/BiB,EAoEnByN,SApEmB,uCAoER,WAAMC,GAAN,mBAAAtI,EAAA,6DACHuI,EAAeD,EAAgB,IACxBlJ,SAAU,EAFd,SAKmB,EAAKW,aAAauI,EAAgB,GAAGtK,OALxD,OAKHwK,EALG,OAMTD,EAAanJ,SAAU,EACnBoJ,GAAiBA,EAAczP,OAAS,GACpC0P,EAAWD,EAAc3P,KAAI,SAAA6P,GAAC,MAAK,CACvC1K,MAAO0K,EAAE5R,IACT6G,MAAO+K,EAAE/R,KACTgS,QAAQ,MAEVJ,EAAatQ,SAAWwQ,GAExBF,EAAaI,QAAS,EAGxB,EAAKzP,SAAS,CACZ0O,QAAQ,aAAK,EAAKxP,MAAMwP,WAnBjB,2CApEQ,wDA6FnB7H,aA7FmB,uCA6FJ,WAAOjK,GAAP,iBAAAkK,EAAA,sEACKtI,EAAa5B,GADlB,UAGM,KAFbmI,EADO,QAGLxH,OAHK,oBAIL0I,EAAYlB,EAAIvJ,KACL,IAAboB,EALO,gBAMT,EAAK8S,YAAY3K,EAAIvJ,MANZ,gDAQFyK,GARE,4CA7FI,wDA0GnByJ,YA1GmB,uCA0GL,WAAOzJ,GAAP,2BAAAa,EAAA,yDAEN4H,EAAUzI,EAAUtG,KAAI,SAAA6P,GAAC,MAC7B,CACE1K,MAAO0K,EAAE5R,IACT6G,MAAO+K,EAAE/R,KACTgS,QAAQ,MANA,kBAaJP,EAbI,EAaJA,SAAUvR,EAbN,EAaMA,QACVuM,EAAgBvM,EAAhBuM,aAEJgF,GAA4B,MAAhBhF,EAhBJ,iCAiBkB,EAAKrD,aAAaqD,GAjBpC,OAiBJoF,EAjBI,OAoBJK,EAAcL,EAAc3P,KAAI,SAAA6P,GAAC,MAAK,CAC1C1K,MAAO0K,EAAE5R,IACT6G,MAAO+K,EAAE/R,KACTgS,QAAQ,MAOWf,EAAQzN,MAAK,SAAA2O,GAAM,OAAIA,EAAO9K,QAAUoF,KAEhDnL,SAAW4Q,EAhCd,QAmCZ,EAAK3P,SAAS,CAAE0O,YAnCJ,4CA1GK,sDAMjB,EAAKM,UAAY3N,IAAMwO,YAIvB,EAAKZ,SAAW5N,IAAMwO,YAVL,E,gEAiJjBnO,KAAKmF,aAAa,K,2CAGlB,IAAMlJ,EAAU+D,KAAKjB,MAAMI,SAAS3B,MAEpCwC,KAAKwN,WAAavR,EAGlB+D,KAAK/D,QAAUA,GAAW,K,+BAElB,IAAD,OACCuR,EAAsBxN,KAAtBwN,SAAUvR,EAAY+D,KAAZ/D,QACVuM,EAAyCvM,EAAzCuM,YAAa9M,EAA4BO,EAA5BP,WAAYmN,EAAgB5M,EAAhB4M,KAAKD,EAAW3M,EAAX2M,OAChCyE,EAAc,GACA,MAAhB7E,GAGF6E,EAAYjP,KAAKoK,GAFjB6E,EAAYjP,KAAK1C,GAKnB1B,QAAQC,IAAI,OAAQ4O,GAVb,IAYCjG,EAAsB5C,KAAKjB,MAAM2D,KAAjCE,kBACFkF,EACJ,6BACE,uBAAM/N,KAAK,aAAa6G,UAAU,QAAQ9B,QAAS,kBAAM,EAAKC,MAAM2I,QAAQoB,YAC3E0E,EAAW,2BAAS,4BAQzB,OACE,wBAAMvQ,MAAO6K,EAASvB,UAAU,EAAO3F,UAAU,8BAC/C,wCAPmB,CACrB+C,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAKlB,CAA0Bf,SAAU7C,KAAKoN,SACvC,kBAAC,GAAD,CAAMrK,MAAM,4BACTH,EAAkB,OAAQ,CACzBI,aAAc/G,EAAQF,KACtBkH,MAAO,CACL,CAAEC,UAAU,EAAMtI,QAAS,gDAH9BgI,CAKE,wBAAOO,YAAY,iDAExB,kBAAC,GAAD,CAAMJ,MAAM,4BACTH,EAAkB,OAAQ,CACzBI,aAAc/G,EAAQ0M,KACtB1F,MAAO,CACL,CAAEC,UAAU,EAAMtI,QAAS,gDAH9BgI,CAKE,kBAACkK,GAAD,CAAUsB,SAAU,CAAEC,QAAS,EAAGC,QAAS,GAAKnL,YAAY,iDAEjE,kBAAC,GAAD,CAAMJ,MAAM,4BACTH,EAAkB,QAAS,CAC1BI,aAAc/G,EAAQoL,MACtBpE,MAAO,CACL,CAAEC,UAAU,EAAMqL,UAAWvO,KAAKiN,iBAHrCrK,CAKE,wBAAO7I,KAAK,SAASyU,WAAW,SAAIrL,YAAY,iDAGrD,kBAAC,GAAD,CAAMJ,MAAM,4BACTH,EAAkB,cAAe,CAChCI,aAAcqK,GAA4B,GAC1CpK,MAAO,CACL,CAAEC,UAAU,EAAMtI,QAAS,gDAH9BgI,CAKE,wBACDO,YAAY,6CACZ6J,QAAShN,KAAKxC,MAAMwP,QACpBS,SAAUzN,KAAKyN,SACf1F,SAAU/H,KAAKyO,mBAGnB,kBAAC,GAAD,CAAM1L,MAAM,4BACV,kBAAC,GAAD,CAAW2L,IAAK1O,KAAKsN,UAAWzE,KAAMA,KAExC,kBAAC,GAAD,CAAM9F,MAAM,2BAAOY,SAAU,CAACC,KAAK,GAAIC,WAAY,CAACD,KAAK,KACvD,kBAAC,GAAD,CAAU8K,IAAK1O,KAAKuN,SAAU3E,OAAQA,KAExC,kBAAC,GAAD,KACE,wBAAQ7O,KAAK,UAAU4U,SAAS,UAAhC,uB,GApOcpO,aA8OXqO,GADS,KAAKnL,QAAL,CAAcsJ,IC9NvB8B,I,8KAZX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO3P,KAAK,eAAe4P,UAAW7H,GAAc8H,OAAK,IACzD,kBAAC,IAAD,CAAO7P,KAAK,sBAAsB4P,UAAWzG,KAC7C,kBAAC,IAAD,CAAOnJ,KAAK,oBAAoB4P,UAAW/B,KAE3C,kBAAC,IAAD,CAAUlO,GAAG,sB,GAZC0B,cCJhByO,G,mLAMFhP,KAAKjB,MAAM0D,QAAQzC,KAAKjB,MAAM2D,Q,+BAEtB,IACAE,EAAsB5C,KAAKjB,MAAM2D,KAAjCE,kBACR,OACE,6BACE,uBAAMhE,KAAN,CAAWmE,MAAM,2BAAOY,SAAU,CAAEC,KAAM,GAAKC,WAAY,CAAED,KAAM,KAChEhB,EAAkB,WAAW,CAC5BI,aAAa,GACbC,MAAO,CAAC,CACNC,UAAS,EAAMtI,QAAS,sDAH3BgI,CAMC,wBAAOO,YAAY,sD,GAnBT5C,aA2BP,QAAKkD,QAAL,CAAcuL,I,mBC1BvBpQ,GAAO,KAAKA,KACVqQ,G,KAAAA,SA4EOC,G,kDAtEb,WAAYnQ,GAAQ,IAAD,uBACjB,cAAMA,IAQRoQ,QAAU,SAAAC,GAER,EAAK9Q,SAAS,CAAE8Q,iBAXC,EAanBC,aAAe,SAAArS,GACb,OAAOA,EAASqC,QAAO,SAACC,EAAIZ,GAM1B,OALAY,EAAIlB,KACF,kBAAC6Q,GAAD,CAAUhS,MAAOyB,EAAKzB,MAAOC,IAAKwB,EAAKxB,KACpCwB,EAAKrB,SAAW,EAAKgS,aAAa3Q,EAAKrB,UAAY,OAGjDiC,IACP,KArBe,EA4CnBgQ,SAAW,kBAAM,EAAK9R,MAAM4R,aA5CT,IAEVvP,EAAS,EAAKd,MAAMzC,KAApBuD,MAFU,OAIjB,EAAKrC,MAAQ,CACX4R,YAAavP,GALE,E,iEAyBjBG,KAAKuP,UAAYvP,KAAKqP,aAAarS,K,gDAQXwS,GACxB,IAAM3P,EAAQ2P,EAAUlT,KAAKuD,MAC7BG,KAAK1B,SAAS,CACZ8Q,YAAYvP,M,+BAUN,IACD9D,EAAQiE,KAAKjB,MAAMzC,KAAnBP,KACP,OACE,6BACE,kBAAC,GAAD,CAAMgH,MAAM,2BAAOY,SAAU,CAAEC,KAAM,GAAKC,WAAY,CAAED,KAAM,KAC5D,wBAAOT,YAAY,6CAAUsM,UAAQ,EAACrM,MAAOrH,KAE/C,kBAAC,GAAD,KACE,wBACE2T,WAAS,EACTC,kBAAkB,EAClBR,QAASnP,KAAKmP,QACdC,YAAapP,KAAKxC,MAAM4R,aAExB,kBAACH,GAAD,CAAUhS,MAAM,2BAAOC,IAAI,OACxB8C,KAAKuP,kB,GAjEGhP,aCkNRqP,G,kDAlNb,WAAY7Q,GAAQ,IAAD,8BACjB,cAAMA,IASRvB,MAAQ,CACNqS,SAAU,GACVrL,SAAS,EACTsL,WAAW,EACXC,YAAY,EACZzT,KAAM,IAfW,EAoBnB0T,YAAc,WACZ,EAAKnL,QAAU,CACb,CACE5H,MAAO,2BACP6H,UAAW,QAEb,CACE7H,MAAO,2BACP6H,UAAW,cACXC,OAAO,SAACkL,GAAD,OAAgBtO,KAAOsO,GAAarO,OAAO,0BAEpD,CACE3E,MAAO,2BACP6H,UAAW,YACXC,OAAO,SAACmL,GAAD,OAAcvO,KAAOuO,GAAWtO,OAAO,0BAEhD,CACE3E,MAAO,qBACP6H,UAAW,eAtCE,EA6CnBqL,YA7CmB,sBA6CL,8BAAA/K,EAAA,6DACZ,EAAK9G,SAAS,CAAEkG,SAAS,IADb,StBYiB5K,EAAK,GAAD,OAAImB,EAAJ,sBsBZrB,OAENsI,EAFM,OAGZ,EAAK/E,SAAS,CAAEkG,SAAS,IACN,IAAfnB,EAAIxH,QACAgU,EAAWxM,EAAIvJ,KACrB,EAAKwE,SAAS,CAAEuR,cAEhBjV,EAAA,EAAQC,MAAM,oDARJ,2CA7CK,EA2DnBuV,QAAU,WACR,EAAK1N,KAAK+C,eAAV,uCAAyB,WAAOC,EAAQC,GAAf,mBAAAP,EAAA,yDACvBpL,QAAQC,IAAI,2BAAQ0L,EAAQD,GACvBA,EAFkB,wBAIrB,EAAKpH,SAAS,CACZwR,WAAW,IAEL1T,EAAauJ,EAAbvJ,SACR,EAAKsG,KAAKkD,cARW,SASHzJ,EAAWC,GATR,OASfiH,EATe,OAUrBrJ,QAAQC,IAAI,OAAQoJ,GACD,IAAfA,EAAIxH,QACNjB,EAAA,EAAQiN,QAAQ,8CAGVvL,EAAO+G,EAAIvJ,KAQjB,EAAKwE,UAAS,SAAAd,GAAK,MAAK,CACtBqS,SAAS,GAAD,oBAAMrS,EAAMqS,UAAZ,CAAsBvT,SAIhC1B,EAAA,EAAQC,MAAM,8CA5BK,4CAAzB,oCAAAmF,KAAA,iBA5DiB,EAgGnBqQ,eAhGmB,sBAgGF,gCAAAjL,EAAA,6DACf,EAAK9G,SAAS,CAACyR,YAAW,IAKpBO,EAAW,EAAKA,SAASnI,QAAQmH,WACjChT,EAAO,EAAKkB,MAAMlB,KAClBiU,EAAW9Q,KAAKC,MAAMC,IAAMC,eAAepG,WACjD8C,EAAK4T,UAAYM,KAAKC,MACtBnU,EAAKoU,UAAYH,EAAS3T,SAC1BN,EAAKuD,MAAQyQ,EAXE,SAaGjU,EAAcC,GAbjB,OAcG,IAdH,OAcRT,SAGFS,EAAKJ,MAAQqU,EAASrU,KACvByD,IAAMC,eAAelG,aACrB,EAAKqF,MAAM2I,QAAQtJ,KAAK,UACxBxD,EAAA,EAAQiN,QAAQ,mFASb0I,EAASI,UAAYrU,EAAKJ,KAE3ByD,IAAMC,eAAelG,aACrB,EAAKqF,MAAM2I,QAAQkJ,QAAQ,UAC3BhW,EAAA,EAAQiN,QAAQ,4GAEhBjN,EAAA,EAAQiN,QAAQ,0DAChB,EAAKvJ,SAAS,CACZuR,SAAS,aAAI,EAAKrS,MAAMqS,cArCjB,4CAzFf,EAAKS,SAAW3Q,IAAMwO,YAPL,E,iEAiJjBnO,KAAKgQ,gB,0CAMLhQ,KAAKmQ,gB,+BAEG,IAAD,SACoDnQ,KAAKxC,MAAxDlB,EADD,EACCA,KAAMuT,EADP,EACOA,SAAUrL,EADjB,EACiBA,QAASsL,EAD1B,EAC0BA,UAAWC,EADrC,EACqCA,WACtCjI,EACJ,6BACE,wBAAQ/N,KAAK,UAAUoG,MAAO,CAAE+F,YAAa,IAAMpH,QAAS,WAAQ,EAAKR,SAAS,CAAEwR,WAAW,MAA/F,4BACA,wBAAQ/V,KAAK,UAAU0V,UAAWnT,EAAKJ,IAAK4C,QAAS,kBAAM,EAAKR,SAAS,CAAEyR,YAAY,MAAvF,yCAGEc,EAAe,CACnB9W,KAAM,QACN+W,uBAAuB,EACvBC,SAAU,SAACzU,GAET,EAAKgC,SAAS,CAAEhC,WAGpB,OACE,wBAAMvC,KAAK,QAAQ6G,UAAU,gBAAgB3D,MAAO6K,GAClD,wBACE+I,aAAcA,EACdhM,QAAS7E,KAAK6E,QACdyB,WAAYuJ,EACZrL,QAASA,EACT+B,UAAU,EACVF,OAAO,MACPG,WAAYrC,KAEd,uBACElH,MAAM,2BACN4J,OAAO,eACPD,WAAW,eACXH,QAASqJ,EACTpJ,KAAM1G,KAAKoQ,QACXzJ,SAAU,WACR,EAAKrI,SAAS,CAAEwR,WAAW,MAI7B,kBAAC,GAAD,CACErN,QAAS,SAACC,GAAD,OAAU,EAAKA,KAAOA,MAGnC,uBACEzF,MAAM,uCACNwJ,QAASsJ,EACTrJ,KAAM1G,KAAKqQ,eACX1J,SAAU,WACR,EAAKrI,SAAS,CAAEyR,YAAY,MAG9B,kBAAC,GAAD,CAAUzT,KAAMA,EAAMoS,IAAK1O,KAAKsQ,iB,GA5MvB/P,aCFNyQ,GAAc,SAAC9D,EAAM9J,EAAO+J,GAClC/J,EAEM,sBAAsB6N,KAAK7N,GAGpC+J,IAFAA,EAAS,8IAFTA,EAAS,mCAQA+D,GAAc,SAAChE,EAAM9J,EAAO+J,GAClC/J,EAEQ,0BAA0B6N,KAAK7N,GAG1C+J,IAFAA,EAAS,oDAFTA,EAAS,yCAQAgE,GAAgB,SAACjE,EAAK9J,EAAM+J,GACnC/J,EAEO,8DAA8D6N,KAAK7N,GAG5E+J,IAFAA,EAAS,8CAFTA,EAAS,mCCtBPvO,GAAO,KAAKA,KACV2D,G,KAAAA,OACF6O,G,mLAeFpR,KAAKjB,MAAM0D,QAAQzC,KAAKjB,MAAM2D,Q,+BAEtB,IACAE,EAAsB5C,KAAKjB,MAAM2D,KAAjCE,kBADD,EAEiB5C,KAAKjB,MAArBsS,EAFD,EAECA,MAAOhY,EAFR,EAEQA,KAGTiY,EAAiB,CACrB3N,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGtB,OACE,uBAAU0N,EACR,kBAAC,GAAD,CAAMvO,MAAM,sBACTH,EAAkB,WAAY,CAC7BI,aAAc3J,EAAKuD,SACnBqG,MAAO,CAAC,CACNC,UAAU,EAAMtI,QAAS,gDAH5BgI,CAMC,wBAAOO,YAAY,2CAIrB9J,EAAK6C,IAAM,KACT,kBAAC,GAAD,CAAM6G,MAAM,gBACTH,EAAkB,WAAY,CAC7BI,aAAc3J,EAAKwD,SACnBoG,MAAO,CAAC,CACNsL,UAAWyC,MAHdpO,CAMC,uBAAO2O,SAAP,CAAgBpO,YAAY,qCAKpC,kBAAC,GAAD,CAAMJ,MAAM,4BACTH,EAAkB,QAAS,CAC1BI,aAAc3J,EAAKmY,MACnBvO,MAAO,CAAC,CACNsL,UAAW2C,MAHdtO,CAMC,wBAAOO,YAAY,iDAGvB,kBAAC,GAAD,CAAMJ,MAAM,gBACTH,EAAkB,QAAS,CAC1BI,aAAc3J,EAAKoY,MACnBxO,MAAO,CAAC,CACNsL,UAAW4C,MAHdvO,CAMC,wBAAOO,YAAY,qCAGvB,kBAAC,GAAD,CAAMJ,MAAM,gBACTH,EAAkB,UAAW,CAC5BI,aAAc3J,EAAKsX,QACnB1N,MAAO,CAAC,CACNC,UAAU,EAAMtI,QAAS,0CAH5BgI,CAMC,wBAAQO,YAAY,kCAEhBkO,EAAMpT,KAAI,SAAA3B,GAAI,OAAI,kBAAC,GAAD,CAAQY,IAAKZ,EAAKJ,IAAKkH,MAAO9G,EAAKJ,KAAMI,EAAKP,iB,GAlFzD2V,iBA4FR,QAAKjO,QAAL,CAAc2N,IC4FdO,G,4MAxLbnU,MAAQ,CACNoU,MAAO,GACPP,MAAM,GACN7M,SAAQ,EACRqN,iBAAgB,G,EAElBjN,YAAc,WACZ,EAAKC,QAAU,CACb,CACE5H,MAAO,qBACP6H,UAAW,YAEb,CACE7H,MAAO,eACP6H,UAAW,SAEb,CACE7H,MAAO,eACP6H,UAAW,SAEb,CACE7H,MAAO,2BACP6H,UAAW,cACXC,OAAO,SAACkL,GAAD,OAAetO,KAAOsO,GAAarO,OAAO,0BAChD,CACD3E,MAAO,2BACP6H,UAAW,UACXC,OAAO,SAAC4L,GAAD,OAAa,EAAKmB,UAAUnB,KAErC,CACE1T,MAAO,eACPC,IAAK,SACL6H,OAAQ,SAACqC,EAAM/N,GAAP,OACN,6BACE,wBAAKkO,MAAM,UAAUzI,QAAS,kBAAI,EAAKiT,SAAS1Y,KAAhD,gBACA,wBAAKkO,MAAM,UAAUzI,QAAS,kBAAM,EAAKkT,QAAQ3Y,KAAjD,qB,EAUV4Y,Y,sBAAc,kCAAA7M,EAAA,6DACZ,EAAK9G,SAAS,CAACkG,SAAQ,IADX,SAEMjI,IAFN,OAEN8G,EAFM,OAGZ,EAAK/E,SAAS,CAACkG,SAAQ,IACL,IAAfnB,EAAIxH,QAAe,EACEwH,EAAIvJ,KAAnB8X,EADY,EACZA,MAAMP,EADM,EACNA,MACb,EAAKa,aAAab,GAClB,EAAK/S,SAAS,CAACsT,QAAMP,WAErBzW,EAAA,EAAQC,MAAM,oDATJ,2C,EAedqX,aAAe,SAACb,GAEd,IAAMS,EAAYT,EAAMhS,QAAO,SAACC,EAAIhD,GAElC,OADAgD,EAAIhD,EAAKJ,KAAOI,EAAKP,KACduD,IACP,IACF,EAAKwS,UAAYA,G,EAKnBE,QAAU,SAAC3Y,GAAU,IACZ6C,EAAgB7C,EAAhB6C,IAAIU,EAAYvD,EAAZuD,SACX,IAAMuV,QAAQ,CACZlV,MAAM,2BAAD,OAASL,EAAT,gBACLiK,OAAQ,eACRD,WAAY,eACZF,KAAK,WAAD,4BAAE,sBAAAtB,EAAA,sEACc5I,EAAeN,GAD7B,OAEc,IAFd,OAEGL,SACLjB,EAAA,EAAQiN,QAAQ,wCAChB,EAAKoK,eAJH,2CAAF,kDAAC,M,EAYTF,SAAW,SAAC1Y,GACV,EAAKiF,SAAS,CAACuT,iBAAgB,IAC/B,EAAKxY,KAAOA,EACZW,QAAQC,IAAI,2BAAOZ,I,EAKrB+Y,cAAgB,WAQd,EAAK1P,KAAK+C,eAAV,uCAAyB,WAAO5K,EAAM8K,GAAb,iBAAAP,EAAA,yDACnBvK,EADmB,uBAElB,EAAKxB,OACNsM,EAAOzJ,IAAM,EAAK7C,KAAK6C,KAHJ,SAKHQ,EAAoBiJ,GALjB,OAKftC,EALe,OAOrB,EAAKX,KAAKkD,cACV,EAAKtH,SAAS,CAACuT,iBAAiB,IACd,IAAfxO,EAAIxH,QAIDwW,EAAY5S,KAAKC,MAAMC,IAAMC,eAAepG,WAChDQ,QAAQC,IAAI,OAAO,EAAKZ,KAAKgZ,GAC1BA,EAAUnW,MAAQ,EAAK7C,KAAK6C,KAC7ByD,IAAMC,eAAelG,aACrB,EAAKqF,MAAM2I,QAAQtJ,KAAK,UACxBxD,EAAA,EAAQiN,QAAQ,sGAEhBjN,EAAA,EAAQiN,QAAR,UAAmB,EAAKxO,KAAO,eAAO,eAAtC,6BACA,EAAK4Y,gBAIPrX,EAAA,EAAQC,MAAR,UAAiB,EAAKxB,KAAO,eAAO,eAApC,6BAzBmB,2CAAzB,oCAAA2G,KAAA,iB,mEAiCAA,KAAK4E,gB,0CAGL5E,KAAKiS,gB,+BAEG,IAAD,OACCpN,EAAY7E,KAAZ6E,QACFxL,EAAO2G,KAAK3G,MAAQ,GAFnB,EAGiC2G,KAAKxC,MAArCoU,EAHD,EAGCA,MAAMP,EAHP,EAGOA,MAAMQ,EAHb,EAGaA,gBACd/J,EACJ,6BACE,wBAAQ/N,KAAK,UAAUoG,MAAO,CAAE+F,YAAa,IAAMpH,QAAS,WAC1D,EAAKzF,KAAO,KACZ,EAAKiF,SAAS,CAACuT,iBAAgB,MAFjC,6BAMJ,OACE,wBAAM9X,KAAK,QAAQ6G,UAAU,gBAAgB3D,MAAO6K,GAClD,wBACEjD,QAASA,EACTyB,WAAYsL,EACZrL,UAAU,EACVC,WAAYrC,GACZkC,OAAO,QAET,uBACEpJ,MAAO5D,EAAK6C,IAAM,2BAAS,2BAC3BuK,QAASoL,EACTnL,KAAM1G,KAAKoS,cACXzL,SAAU,WACR,EAAKjE,KAAKkD,cACV,EAAKtH,SAAS,CAACuT,iBAAgB,MAGjC,kBAAC,GAAD,CACEpP,QAAS,SAAAC,GAAI,OAAI,EAAKA,KAAOA,GAC7B2O,MAAOA,EACPhY,KAAMA,U,GAjLCkH,a,wCCuFJ+R,G,4MAxFb9U,MAAQ,CACN+U,MAAO,CAAC,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCjZ,MAAO,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IACjCkL,SAAS,G,EAEXgO,YAAc,SAACD,EAAMjZ,GAkDnB,MAjDa,CACX2D,MAAM,CACJwV,MAAM,EACNrL,KAAK,kCAEPG,MAAO,CAAC,UAAU,OAAO,UAAU,UAAU,WAC7CmL,QAAS,CACPC,QAAS,OACTC,YAAa,CACX7Y,KAAM,WAGV8Y,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,EACdR,MAAM,GAERS,MAAO,CACL,CACEnZ,KAAM,WACND,KAAM,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBACjDqZ,SAAU,CACRC,gBAAgB,KAItBC,MAAO,CACL,CACEtZ,KAAM,QACNuZ,YAAa,CAAC,KAAM,SAGxBC,OAAQ,CACN,CACExX,KAAM,eACNhC,KAAM,MACNyZ,SAAU,MACV1Z,KAAMyY,GAER,CACExW,KAAM,eACNhC,KAAM,MACNyZ,SAAU,MACV1Z,KAAMR,M,EAMdma,OAAS,WACP,EAAKnV,SAAS,CAACkG,SAAS,IACxB,EAAKlG,UAAS,SAAAd,GAAK,MAAK,CACtB+U,MAAO/U,EAAM+U,MAAMtU,KAAI,SAAAC,GAAC,OAAIA,EAAI,KAChC5E,MAAOkE,EAAMlE,MAAM+F,QAAO,SAACC,EAAIpB,GAE7B,OADAoB,EAAIlB,KAAKF,EAAI,GACNoB,IACP,QACD,WACD0C,aAAY,WACV,EAAK1D,SAAS,CAACkG,SAAQ,MACvB,S,uDAGI,IAAD,SACuBxE,KAAKxC,MAA5B+U,EADA,EACAA,MAAMjZ,EADN,EACMA,MAAMkL,EADZ,EACYA,QACbsD,EACJ,6BACE,wBAAQ/N,KAAK,UAAUoG,MAAO,CAAE+F,YAAa,IAAMpH,QAAS,WAAO,EAAK2U,WAAxE,iBAGJ,OACE,wBAAMC,SAAYlP,EAASmP,IAAI,0BAC7B,wBAAM5Z,KAAK,QAAQ6G,UAAU,gBAAgB3D,MAAO6K,GAClD,kBAAC,KAAD,CAAcoG,OAAQlO,KAAKwS,YAAYD,EAAMjZ,GAAQ6G,MAAO,CAACyT,OAAO,iB,GAlF5DrT,aCSHsT,G,kDAXb,WAAY9U,GAAQ,IAAD,8BACjB,cAAMA,IACDvB,MAAQ,GAFI,E,qDAKjB,OACE,uD,GAPa+C,aCcJuT,G,kDAbb,WAAY/U,GAAQ,IAAD,8BACjB,cAAMA,IACDvB,MAAQ,GAFI,E,qDAKjB,OACE,uD,GAPiB+C,a,qBCkBRwT,I,+KAXX,OACE,yBAAKnT,UAAU,gBACb,yBAAKE,IAAKkT,KAAUhL,IAAI,aACxB,kBAAC,IAAD,CAAMnK,GAAG,KACP,wBAAQ+B,UAAU,UAAU7G,KAAK,WAAjC,kC,GAPawG,c,qBC4BR0T,GAjCD,CAAC,CACbC,QAAS,YACTC,QAAS,CACPlX,MAAO,2BACPmX,YAAa,qEACbC,SAAU,SAEZ7H,QAAS,GACT,CACA0H,QAAS,eACTI,gBAAgB,OAChBH,QAAS,CACPlX,MAAO,2BACPmX,YAAa,qEACbC,SAAU,WAEZ,CACAH,QAAS,eACTC,QAAS,CACPlX,MAAO,eACPmX,YAAa,2BACbC,SAAU,SAEZ,CACAH,QAAS,cACTC,QAAS,CACPlX,MAAO,2BACPmX,YAAa,mDACbC,SAAU,UCSCE,I,oNA9Bb/W,MAAQ,CACNgX,OAAQ,M,EAQVC,MAAQ,WACN,EAAKD,OAAOE,YAAYT,IACxB,EAAKO,OAAOG,S,EAEdC,WAAa,SAACrT,GACZA,EAAEsT,YAAYC,2BACd,EAAKL,S,kEAXLzU,KAAKwU,OAAS,IAAIO,KAAO,CACvBC,QAAS,GACTV,gBAAiB,c,+BAWX,IAAD,OACP,OACE,yBAAK1T,UAAU,kBACb,yBAAKA,UAAU,cACb,uBAAM7G,KAAK,SADb,8FAIA,wBAAQA,KAAK,UAAU+E,QAAS,SAAAyC,GAAC,OAAI,EAAKqT,WAAWrT,KAArD,qB,GAzBYhB,c,qBCAd0U,GAAe,SAAC7L,GAElB,OAAO,IAAIlP,SAAQ,SAACC,EAASC,GAAW,IAE5B8a,EAAU9L,EAAKlB,OAAfgN,MAEFC,EAAa,IAAI7L,WAEvB6L,EAAW3L,OAAS,SAAAvB,GAChB,IAAK,IACOwB,EAAWxB,EAAMC,OAAjBuB,OAEF2L,EAAWC,KAAKC,KAAK7L,EAAQ,CAAE1P,KAAM,WACvCD,EAAO,GAEX,IAAK,IAAMyb,KAASH,EAASI,OACrBJ,EAASI,OAAOC,eAAeF,KAC/Bzb,EAAOA,EAAK4b,OAAOL,KAAKM,MAAMC,cAAcR,EAASI,OAAOD,MAGpEpb,EAAQL,GACV,MAAOyH,GAELnH,EAAO,kBAIf+a,EAAWU,mBAAmBX,EAAM,QAUtCY,GAAc,SAACC,EAASjc,GAAkC,IAA5Bkc,EAA2B,uDAAhB,YAErCC,EAAWF,EACZ9X,KAAI,SAACS,EAAMR,GAAP,OAAagY,OAAOC,OAAO,GAAI,CAAEjZ,IAAKwB,EAAKxB,IAAKD,MAAOyB,EAAKzB,MAAOoX,SAAU+B,OAAOC,aAAa,GAAKnY,GAAK,OAC/GmB,QAAO,SAACiX,EAAMC,GAAP,OAAgBL,OAAOC,OAAO,GAAIG,EAAlBJ,OAAA,IAAAA,CAAA,GAA2BK,EAAKlC,SAAW,CAAEnX,IAAKqZ,EAAKrZ,IAAKsZ,EAAGD,EAAKtZ,WAAY,IACtGwZ,EAAQ3c,EACTmE,KAAI,SAACS,EAAMR,GAAP,OAAa6X,EAAQ9X,KAAI,SAACf,EAAKwZ,GAAN,OAAYR,OAAOC,OAAO,GAAI,CAAEQ,QAASjY,EAAKxB,EAAIA,KAAMmX,SAAU+B,OAAOC,aAAa,GAAKK,IAAMxY,EAAI,WAElImB,QAAO,SAACiX,EAAMC,GAAP,OAAgBD,EAAKZ,OAAOa,MAEnClX,QAAO,SAACiX,EAAMC,GAAP,OAAgBL,OAAOC,OAAO,GAAIG,EAAlBJ,OAAA,IAAAA,CAAA,GAA2BK,EAAKlC,SAAW,CAAEmC,EAAGD,EAAKI,aAAc,IAGzFC,EAASV,OAAOC,OAAO,GAAIF,EAAUQ,GAErCI,EAAYX,OAAOY,KAAKF,GAExBlI,EAAG,UAAMmI,EAAU,GAAhB,YAAsBA,EAAUA,EAAU1Y,OAAS,IAGtD4Y,EAAK,CACPC,WAAY,CAAC,WACbxB,OAAQ,CACJyB,QAASf,OAAOC,OACZ,GACAS,EACA,CACI,OAAQlI,EACR,QAAS,CAAC,CAAEwI,IAAK,IAAM,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,IAAM,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,UAOjI7B,KAAK8B,UAAUJ,EAAIf,IC2BRoB,I,oNApGX5Z,MAAQ,CACJ6Z,MAAM,CAAC,CACHza,SAAU,SACV0a,IAAK,GACLC,IAAK,SACL/F,MAAO,cACP3Q,GAAI,GACN,CACEyW,IAAK,GACLzW,GAAI,EACJ2Q,MAAO,YACP+F,IAAK,SACL3a,SAAU,SAEd4a,cAAc,EACdhT,SAAS,EACTiT,UAAU,I,EAMdC,QAAU,SAACnW,GACPA,EAAEoW,UACF,IAAIF,EAAYlW,EAAEqW,cAAc1C,MAAM,GAAGnZ,KACzCkZ,GAAa1T,GAAG/G,MAAK,SAACV,GACrB,EAAKwE,SAAS,CAACkG,SAAQ,IACtB,EAAKlG,SAAS,CACV+Y,MAAOvd,EACP0d,cAAc,EACdC,cAEJzV,aAAY,WACV,EAAK1D,SAAS,CAACkG,SAAQ,MACvB,QACF,SAAC7J,GACCX,QAAQC,IAAI,2BAAOU,O,EAI3Bkd,cAAgB,WAAO,IACdR,EAAS,EAAK7Z,MAAd6Z,MAELvB,GAAY,EAAKjR,QAAQwS,EAAM,wC,EAEnCS,SAAW,WACP,EAAKjT,QAAU,CACX,CACI5H,MAAO,eACP6H,UAAW,KACX5H,IAAK,KACL6H,OAAQ,SAAAqC,GAAI,OAAI,2BAAIA,KAExB,CACInK,MAAO,qBACP6H,UAAW,WACX5H,IAAK,YAET,CACID,MAAO,eACP6H,UAAW,MACX5H,IAAK,OAET,CACID,MAAO,eACP6H,UAAW,MACX5H,IAAK,OAET,CACID,MAAO,2BACP6H,UAAW,QACX5H,IAAK,W,mEApDb8C,KAAK8X,a,+BAwDC,IAAD,SACwC9X,KAAKxC,MAA7C6Z,EADA,EACAA,MAAMG,EADN,EACMA,aAAahT,EADnB,EACmBA,QAAQiT,EAD3B,EAC2BA,UAC1B3P,EACF,6BACI,wBAAQ/N,KAAK,UAAUoG,MAAO,CAAC+F,YAAa,IAAKtF,UAAU,cACvD,wBAAO7G,KAAK,OAAOyQ,OAAO,aAAazC,SAAU,SAACxG,GAAD,OAAO,EAAKmW,QAAQnW,MACpEiW,EAAY,UAAMC,EAAN,8CAA2B,+DAE5C,wBAAQ1d,KAAK,UAAU+E,QAAS,kBAAM,EAAK+Y,kBAA3C,sBAGR,OACI,wBAAM9d,KAAK,QAAQ6G,UAAU,gBAAgB3D,MAAO6K,GAChD,wBACIjD,QAAS7E,KAAK6E,QACdyB,WAAY+Q,EACZhR,OAAO,KACP7B,QAASA,S,GA7FNjE,cCcRwX,G,kDAdb,WAAYhZ,GAAQ,IAAD,8BACjB,cAAMA,IACDvB,MAAQ,GAFI,E,qDAKjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0B,KAAK,iBAAiB4P,UAAWkJ,KACxC,kBAAC,IAAD,CAAUnZ,GAAG,wB,GATD0B,aCmCL0X,I,+KAhBX,OACE,yBAAKrX,UAAU,gCACb,wBAAM3D,MAAM,kC,GAnBasD,c,yGCoClB2X,I,oNAjCZC,OAAS,SAACC,GAEL,IADA,IAAIC,EAAK,GACDna,EAAI,EAAEA,EAAEka,EAAIla,IAChBma,EAAGja,KAAKF,GAEZ,OAAOma,G,EAEZC,UAAY,SAACpa,GACZ,EAAKa,MAAMwZ,eAAera,I,EAG3Bsa,iBAAmB,SAACta,GAEnB,IAFyB,IACpBua,EAAa,EAAK1Z,MAAlB0Z,UACIva,EAAI,EAAGA,EAAIua,EAAWva,IAC3B,EAAKwa,KAAKC,UAAUtb,SAASa,GAAG0C,UAAY,GAEhD,EAAK8X,KAAKC,UAAUtb,SAASa,GAAG0C,UAAY,W,uDAElC,IAAD,SAC0BZ,KAAKjB,MAA/B0Z,EADA,EACAA,UAAUG,EADV,EACUA,aACXC,EAAQ7Y,KAAKmY,OAAOM,GACxB,OACI,wBAAI/J,IAAI,aAEAmK,EAAM5a,KAAI,SAACC,GACP,OAAO,wBAAI0C,UAAWgY,IAAiB1a,EAAI,UAAY,GAAIkM,MAAOlM,EAAGhB,IAAKgB,EAAGY,QAAS,WAAO,EAAKwZ,UAAUpa,KAAMA,EAAE,W,GA/BnHqC,cCUnBuY,G,kDAKF,WAAY/Z,GAAQ,IAAD,8BACf,cAAMA,IAcVga,OAAS,WACL,IAAIC,EAAY,EAAKN,KAAKM,UACtBC,EAASD,EAAU3b,SAAS,GAE5B6b,EAAcD,EAAOE,YACrBC,EAAKH,EAAO5b,SAAS,GAGrBgc,EAAQL,EAAU3b,SAAS,GAI3Bic,GAHSD,EAAMhc,SAAS,GACdgc,EAAMhc,SAAS,GAEjB+b,EAAG/b,SAASc,QAExB,EAAKG,SAAS,CACVma,UAAWa,EACXJ,cACAK,UAAWH,IAKf,IAAII,EAAUJ,EAAG/b,SAAS,GAC1B+b,EAAGK,YAAYD,EAAQE,WAAU,IAChB,EAAK3a,MAAjB4a,UAED,EAAKA,YAzCM,EA8CnBpB,eAAiB,SAACK,GAAkB,IAAD,EACD,EAAKpb,MAA9B+b,EAD0B,EAC1BA,UAAUL,EADgB,EAChBA,YACf,EAAK5a,SAAS,CAACsa,iBAEf,EAAKgB,WAAWL,GAAWX,EAAaM,IAlDzB,EAqDnBW,WAAa,WACT,EAAKnB,KAAKW,MAAMlZ,MAAM2Z,QAAU,QAChC,EAAKC,gBAvDU,EAyDnBC,UAAY,WACR,EAAKtB,KAAKW,MAAMlZ,MAAM2Z,QAAU,OAChC,EAAKH,YA3DU,EA8DnBM,OAAS,WAAO,IAAD,EAC0C,EAAKzc,MAArDob,EADM,EACNA,aAAaH,EADP,EACOA,UAAUc,EADjB,EACiBA,UAAUL,EAD3B,EAC2BA,YACtCgB,YAAW,WAEa,IAAjBtB,IACC,EAAKL,eAAe,GACpB,EAAKja,SAAS,CACVsa,aAAcH,IAElBc,EAAUpZ,MAAM2S,MAAS2F,EAAUS,EAAc,MAGrD,EAAK5a,UAAS,SAACd,GAAD,MAAY,CACtBob,aAAcpb,EAAMob,aAAe,MAEvC,EAAKL,eAAe,EAAK/a,MAAMob,gBACjC,IA9Ea,EAgFnBuB,QAAU,WAAO,IAAD,EACyC,EAAK3c,MAArDob,EADO,EACPA,aAAaH,EADN,EACMA,UAAUc,EADhB,EACgBA,UAAUL,EAD1B,EAC0BA,YAEtCgB,YAAW,WAEHtB,IAAiBH,IACjBc,EAAUpZ,MAAM2S,KAAO,MACvB,EAAKxU,SAAS,CACVsa,aAAc,KAGtB,EAAKta,UAAS,SAAAd,GAAK,MAAK,CACpBob,aAAcpb,EAAMob,aAAe,MAGpC,EAAKpb,MAAMob,aAAeH,EACzB,EAAKF,eAAe,EAAK/a,MAAMob,eAE/B,EAAKgB,WAAWL,GAAW,EAAK/b,MAAMob,aAAaM,GACnD,EAAKR,KAAKD,UAAUD,iBAAiB,MAG3C,IAtGa,EAyGnBmB,SAAW,WAAO,IACTS,EAAiB,EAAKrb,MAAtBqb,cACL,EAAKL,eACL,IAAIM,EAAUrY,aAAY,WACtB,EAAKmY,YACPC,GACF,EAAK9b,SAAS,CAAC+b,aA/GA,EAkHnBN,aAAe,WACX5X,cAAc,EAAK3E,MAAM6c,UAnHV,EAuHnBT,WAAa,SAAC1F,EAAShM,GAEfgM,EAAQmG,UACVlY,cAAc+R,EAAQmG,SACtBnG,EAAQmG,QAAU,MAGpBnG,EAAQmG,QAAUrY,aAAY,WAE5B,IAAIsY,EAAO,GAEPnS,EAAU+L,EAAQqG,WAStB,GAJIpS,EAAUD,IACZoS,GAASE,KAAKC,IAAIH,IAGhBE,KAAKC,IAAItS,EAAUD,IAAWsS,KAAKC,IAAIH,GAKzC,OAHAnY,cAAc+R,EAAQmG,cAEtBnG,EAAQ/T,MAAM2S,KAAO5K,EAAS,MAIhCC,GAAWmS,EACXpG,EAAQ/T,MAAM2S,KAAO3K,EAAU,OAC9B,IAnJH,EAAK3K,MAAQ,CACTob,aAAc,EACdH,UAAW,EACXc,UAAU,GACVmB,QAAS,EACTxB,YAAa,EACbmB,QAAS,MARE,E,gEAafra,KAAK+Y,W,+BA2IC,IAAD,SACwD/Y,KAAKxC,MAA7Dib,EADA,EACAA,UAAwCG,GADxC,EACUW,UADV,EACoBmB,QADpB,EAC4BxB,YAD5B,EACwCN,cAE7C,OADA5e,QAAQC,IAAI,OAAO+F,KAAKjB,OAEpB,yBAAK6B,UAAU,4BACX,yBAAKA,UAAU,mBAAmB8N,IAAI,YAAYiM,aAAc,WAAO,EAAKd,cAAee,aAAc,WAAO,EAAKZ,cACjH,yBAAKpZ,UAAU,UACX,4BACI,4BAAI,yBAAKE,IAAK+Z,KAAY7R,IAAI,MAC9B,4BAAI,yBAAKlI,IAAKga,KAAY9R,IAAI,MAC9B,4BAAI,yBAAKlI,IAAKia,KAAY/R,IAAI,MAC9B,4BAAI,yBAAKlI,IAAKka,KAAYhS,IAAI,MAC9B,4BAAI,yBAAKlI,IAAKma,KAAYjS,IAAI,OAIlC,kBAAC,GAAD,CAAWyP,UAAWA,EAAWG,aAAcA,EAAcL,eAAgBvY,KAAKuY,eAAgB7J,IAAI,eAE1G,yBAAK9N,UAAU,QAAQ8N,IAAI,SACvB,0BAAM9N,UAAU,UAAU9B,QAAS,WAAO,EAAKmb,WAA/C,KACA,0BAAMrZ,UAAU,WAAW9B,QAAS,WAAO,EAAKqb,YAAhD,Y,GAjLH5Z,aAAfuY,GACK5Y,aAAe,CAClByZ,UAAU,EACVS,cAAe,KAsLRtB,UCzKAoC,G,4MAxBX1d,MAAQ,G,uDAIJ,IAAM2d,EAAe,CACjBxB,UAAU,EACVS,cAAe,KAEnB,OACI,yBAAKxZ,UAAU,4BACX,kBAAC,GAAWua,EACR,4BACI,iCACA,iCACA,iCACA,iCACA,wC,GAjBC5a,aCUVoJ,G,uKARX,OACE,6D,GAJkBpJ,a,0CC8FTwX,G,4MAnFbqD,KAAO,WACL,IAAIC,EAAM,EAAK3C,KAAK2C,IAChBC,EAAWD,EAAIhe,SAAS,GACxBke,EAAOD,EAASje,SAAS,GAEzBme,EAASH,EAAIhe,SAAS,GACtBoe,EAAYD,EAAOne,SAAS,GAGhCie,EAASI,aAAe,WACtBH,EAAKpb,MAAM2Z,QAAU,QACrB0B,EAAOrb,MAAM2Z,QAAU,SAEzBwB,EAASK,aAAe,SAAUpa,GAChCga,EAAKpb,MAAM2Z,QAAU,OACrB0B,EAAOrb,MAAM2Z,QAAU,QAMzBuB,EAAIO,YAAc,SAACra,GAOjB,IAAIsa,GANJta,EAAIA,GAAKua,OAAO7T,OAMD8T,MAAQV,EAAId,WAAcgB,EAAKpC,YAAc,EACxD6C,EAASza,EAAE0a,MAAQZ,EAAIa,UAAaX,EAAKY,aAAe,EAK5DN,EAAQA,EAAQ,EAAI,EAAIA,EACxBG,EAAQA,EAAQ,EAAI,EAAIA,EAExB,IAAII,EAAWf,EAAIlC,YAAcoC,EAAKpC,YAClCkD,EAAWhB,EAAIc,aAAeZ,EAAKY,aAEvCN,EAAQA,EAAQO,EAAWA,EAAWP,EACtCG,EAAQA,EAAQK,EAAWA,EAAWL,EAEtCT,EAAKpb,MAAM2S,KAAX,UAAqB+I,EAArB,MACAN,EAAKpb,MAAMmc,IAAX,UAAoBN,EAApB,MAMA,IAKIO,EAAUV,EAAQO,GALLX,EAAUtC,YAAcqC,EAAOrC,aAM5CqD,EAAUR,EAAQK,GALLZ,EAAUU,aAAeX,EAAOW,cAOjDV,EAAUtb,MAAM2S,KAAhB,WAA2ByJ,EAA3B,MACAd,EAAUtb,MAAMmc,IAAhB,WAA0BE,EAA1B,Q,gHA7DFxc,KAAKob,S,+BAmEL,OACE,yBAAKxa,UAAU,4BAAf,iCAEE,yBAAKA,UAAU,MAAM8N,IAAI,OACvB,yBAAK9N,UAAU,SAEb,yBAAKE,IAAK2b,KAAgBzT,IAAI,KAC9B,yBAAKpI,UAAU,UAEjB,yBAAKA,UAAU,OACb,yBAAKE,IAAK4b,KAAc1T,IAAI,Y,GAnFpBzI,aCgBLwX,G,uKAZX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7Y,KAAK,gBAAgB4P,UAAWmJ,KACvC,kBAAC,IAAD,CAAO/Y,KAAK,cAAc4P,UAAWgK,KACrC,kBAAC,IAAD,CAAO5Z,KAAK,kBAAkB4P,UAAWnF,KACzC,kBAAC,IAAD,CAAOzK,KAAK,iBAAiB4P,UAAW6N,KACxC,kBAAC,IAAD,CAAU9d,GAAG,uB,GARD0B,aCcZqc,I,YAAAA,QAAQC,G,IAAAA,MAAOC,G,IAAAA,QACf3K,G,IAAAA,QAgEO4K,G,4MA9Dbvf,MAAQ,CACNyC,WAAW,G,EAEb4B,gBAAkB,WAChB,EAAKvD,SAAS,CACZ2B,WAAY,EAAKzC,MAAMyC,a,EAG3BkB,SAAW,WACTgR,GAAQ,CACNwE,QAAS,yDACT9P,OAAQ,eACRD,WAAY,eACZF,KAAM,WACJ1M,QAAQC,IAAI,KAAM,EAAK8E,MAAM2I,SAC7B/H,IAAMC,eAAelG,aACrB,EAAKqF,MAAM2I,QAAQkJ,QAAQ,c,uDAM/B,IAAIvX,EAAOoG,KAAKC,MAAMsd,EAAaxjB,WAEnC,GADAQ,QAAQC,IAAI,2BAAOZ,IACdA,IAASA,EAAK6C,IACjB,OAAO,kBAAC,IAAD,CAAU2C,GAAG,WAJf,IAMCoB,EAAcD,KAAKxC,MAAnByC,UACR,OAEE,uBAAQE,MAAO,CAAEoM,UAAW,SAC1B,kBAACsQ,GAAD,CAAO5c,UAAWA,GAChB,kBAAC,GAAD,CAASA,UAAWA,KAEtB,2BAEE,kBAAC,GAAD,CAAQA,UAAWA,EAAW4B,gBAAiB7B,KAAK6B,gBAAiBV,SAAUnB,KAAKmB,WACpF,kBAAC2b,GAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAU/N,OAAO,EAAMkO,KAAK,IAAIpe,GAAG,UACnC,kBAAC,IAAD,CAAOK,KAAK,gBAAgB4P,UAAWxK,KACvC,kBAAC,IAAD,CAAOpF,KAAK,eAAe4P,UAAWD,KACtC,kBAAC,IAAD,CAAO3P,KAAK,QAAQ4P,UAAWc,KAC/B,kBAAC,IAAD,CAAO1Q,KAAK,QAAQ4P,UAAW6C,KAC/B,kBAAC,IAAD,CAAOzS,KAAK,aAAa4P,UAAWwD,KACpC,kBAAC,IAAD,CAAOpT,KAAK,cAAc4P,UAAW+E,KACrC,kBAAC,IAAD,CAAO3U,KAAK,aAAa4P,UAAWgF,KACpC,kBAAC,IAAD,CAAO5U,KAAK,QAAQ4P,UAAWxM,KAC/B,kBAAC,IAAD,CAAOpD,KAAK,SAAS4P,UAAWyF,KAChC,kBAAC,IAAD,CAAOrV,KAAK,SAAS4P,UAAWoO,KAChC,kBAAC,IAAD,CAAOhe,KAAK,OAAO4P,UAAWqO,KAC9B,kBAAC,IAAD,CAAOrO,UAAWiF,OAGtB,kBAAC6I,GAAD,CAAQzc,MAAO,CAAEmH,UAAW,SAAUC,MAAO,SAA7C,4E,GAxDUhH,a,oDCZd3B,GAAO,KAAKA,KAEZwe,G,4MACJ5f,MAAQ,CACNgH,SAAS,G,EAEX6Y,aAAe,WACb,EAAK/e,SAAS,CACZkG,SAAS,K,EAGb1B,aAAe,SAAAvB,GACbA,EAAEC,iBACF,EAAKzC,MAAM2D,KAAK+C,eAAhB,uCAA+B,WAAO9K,EAAIgL,GAAX,mBAAAP,EAAA,yDACzBzK,EADyB,wBAErBiC,EAAsB+I,EAAtB/I,SAASC,EAAa8I,EAAb9I,SACf7C,QAAQC,IAAI,uCAAS0L,GAHM,SAqBJhJ,EAAS,CAAEC,WAASC,aArBhB,OAqBrBpC,EArBqB,OAsB3B,EAAK4iB,eACkB,IAApB5iB,EAASoB,QACVjB,EAAA,EAAQiN,QAAQ,kCAChBmV,EAAa5jB,QAAQqG,KAAK6d,UAAU7iB,EAASX,OAG7C,EAAKiF,MAAM2I,QAAQkJ,QAAQ,OAE3B,EAAKtS,SAAS,CACZkG,SAAQ,IAEV5J,EAAA,EAAQC,MAAMJ,EAAS8iB,MAjCE,wBAyC3BvjB,QAAQC,IAAI,6BAzCe,4CAA/B,oCAAA+F,KAAA,iB,EA8CFwd,YAAc,SAACtQ,EAAM9J,EAAO+J,GAGtB/J,EAEMA,EAAMjF,OAAS,EACvBgP,EAAS,iEACD/J,EAAMjF,OAAS,GACvBgP,EAAS,4DACA,kBAAkB8D,KAAK7N,GAIhC+J,KAHAnT,QAAQC,IAAImJ,GACZ+J,EAAS,2GAPTA,EAAS,+C,kEAcXsQ,GAAA,EAAanS,KAAK,CAChB1Q,QAAS,+DACT8iB,SAAU,KACVtJ,YAAa,iG,6CAIfqJ,GAAA,EAAaE,UACb3d,KAAK+B,OAAS6b,aAAa5d,KAAK+B,S,+BAKhC,IAAI1I,EAAOoG,KAAKC,MAAMsd,EAAaxjB,WACnC,GAAGH,GAAQA,EAAKuD,SACd,OAAO,kBAAC,IAAD,CAAUiC,GAAG,MAJf,IAQC+D,EAAsB5C,KAAKjB,MAAM2D,KAAjCE,kBACR,OACE,yBAAKhC,UAAU,SACb,yBAAKA,UAAU,aACb,wDACA,wBACE7E,KAAK,eACL6E,UAAU,aACViC,SAAU7C,KAAK8C,cAEf,kBAAC,GAAD,KACGF,EAAkB,WAAY,CAE7BK,MAAO,CACL,CAAEC,UAAU,EAAK2a,YAAW,EAAOjjB,QAAS,+BAC5C,CAAE0I,IAAK,EAAG1I,QAAS,uEACnB,CAAE2I,IAAK,GAAI3I,QAAS,kEACpB,CAACkjB,QAAQ,kBAAkBljB,QAAQ,kHANtCgI,CASC,wBAAOmb,OAAQ,kBAACC,GAAA,EAAD,CAAcpd,UAAU,wBAA0BuC,YAAY,WAAWvC,UAAU,iBAGtG,kBAAC,GAAD,KACGgC,EAAkB,WAAY,CAC7BK,MAAO,CAAC,CAENsL,UAAWvO,KAAKwd,eAHnB5a,CAMC,wBAAOmb,OAAQ,kBAACE,GAAA,EAAD,CAAcrd,UAAU,wBACrC7G,KAAK,WACL6G,UAAU,aACVuC,YAAY,eAIlB,kBAAC,GAAD,CACEpH,KAAK,aACL6E,UAAU,aAEV,wBAAQ7G,KAAK,UAAU4U,SAAS,SAAS/N,UAAU,oBACnD4D,QAASxE,KAAKxC,MAAMgH,SADpB,wB,GAvIMjE,aAoKd2d,GAAY,KAAKza,QAAL,CAAc2Z,IAKjB5c,gBACb,SAAAhD,GAAK,MAAK,CAAC+S,SAAS/S,EAAM+S,YAC1B,CAAC4N,UxCtKsB,SAACvhB,EAASC,GACjC,8CAAO,WAAMuhB,GAAN,mBAAAhZ,EAAA,sEAEgBzI,EAASC,GAFzB,OAGgB,KADf6M,EAFD,QAGK5N,QACFxC,EAAOoQ,EAAO3P,KACpB,EAAKiF,MAAM2I,QAAQkJ,QAAQ,KAC3BoM,EAAa5jB,QAAQqG,KAAK6d,UAAUjkB,IACpC+kB,EAfoC,CAACrkB,KCTf,eDSiCD,KAelCT,MAEfkkB,EAAM9T,EAAO8T,IACnBa,EAfqC,CAACrkB,KCVd,iBDUkCD,KAepCyjB,KAVnB,2CAAP,wDwCmKa/c,CAGb0d,ICnKcG,G,uKAXP,OACG,kBAAC,IAAD,KACI,kBAAC,IAAD,SACI,kBAAC,IAAD,CAAOnf,KAAK,SAAS4P,UAAWsO,KAChC,kBAAC,IAAD,CAAOle,KAAK,IAAI4P,UAAWiO,W,GAN5Bxc,a,oBCFb+d,GAAW7e,KAAKC,MAAM6e,EAAY/kB,WAyBzBglB,kCAAgB,CAC7BjO,SAzBF,WAA0C,IAAxB/S,EAAuB,uDAAjB8gB,GAAS/T,EAAQ,uCACvC,OAAQA,EAAOxQ,MACb,IzCRwB,eyCStB,OAAOwQ,EAAOzQ,KAChB,IzCR0B,iByCSxB,IAAM2kB,EAAWlU,EAAOzQ,KAGxB,OAAO,6BAAI0D,GAAX,IAAiBihB,aACnB,QACE,OAAOjhB,IAgBX4E,WAZF,WAAwC,IAApB5E,EAAmB,uDAAb,eAAK+M,EAAQ,uCACrC,OAAQA,EAAOxQ,MACb,IzCvB0B,iByCwBxB,OAAOwQ,EAAOzQ,KAChB,QACE,OAAO0D,M,oBCjBEkhB,0BAAYC,GAAQC,+BAAoBC,2BAAgBC,QCGvEnf,IAAMC,eAAiBod,EAEvB+B,IAASha,OACP,kBAAC,IAAD,CAAUzL,MAAOA,IACf,kBAAC,GAAD,OAEF0lB,SAASC,eAAe,U,8DCnB1BC,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.e6397e8e.chunk.js","sourcesContent":["import store from 'store';\r\nconst LOCAL_USER = \"local_user\";\r\n\r\n/**\r\n * https://github.com/marcuswestin/store.js\r\n */\r\n\r\nexport default {\r\n  /**\r\n   * @param {*} user 用户登录的信息\r\n   * 向本地存储中储存用户信息\r\n   */\r\n  setUser(user) {\r\n    store.set(LOCAL_USER, user);\r\n  },\r\n  /**\r\n   * 获取本地存储用户信息\r\n   */\r\n  getUser() {\r\n    return store.get(LOCAL_USER) || '{}';\r\n  },\r\n  removeUser() {\r\n    store.remove(LOCAL_USER);\r\n  }\r\n}","/**\r\n * 发送异步请求的ajax模块\r\n * 封装axios库\r\n * 函数的返回值，promise对象\r\n * 统一处理错误请求异常？\r\n *  - 在外层包一个自己创建的promise对象，\r\n */\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\nexport default function ajax(url,data={},type='GET') { // type指请求方式，一共有两种，(如果不传递参数)默认是get，\r\n    console.log('params',url,data,type);\r\n    /**\r\n     * 1、执行ajax请求\r\n     * 2、请求成功resolve(response)\r\n     * 3、请求失败reject(err)\r\n     */\r\n    return new Promise((resolve,reject) => {\r\n        let promise;\r\n        if(type === 'GET') {\r\n            promise = axios.get(url,{\r\n                params: data\r\n            })\r\n        } else { \r\n            promise = axios.post(url,data);\r\n        }\r\n        promise.then(response => {\r\n            resolve(response.data);\r\n        }).catch(err => {\r\n            message.error('请求出错'+err);\r\n        })\r\n\r\n    })\r\n\r\n}","/**\r\n * 包含应用中所有接口请求函数的模块\r\n * 每个函数的返回值都是promise\r\n */\r\nimport ajax from './ajax';\r\n// const baseApi = 'http://rap2.taobao.org:38080/app/mock/253236';\r\n// fast mock\r\nconst fastMock = 'https://www.fastmock.site/mock/7b3b73f75c787dbfe28bf649db17ed5e/api'\r\nconst baseApi = 'http://39.100.225.255:5000';\r\nconst weatherApi = `http://wthrcdn.etouch.cn/weather_mini?city=北京`; \r\n// 登录\r\n/*\r\n    export function reqLogin(username,password) {\r\n        return ajax('/login',{username,password},'POST')\r\n    }\r\n */\r\n\r\n// export const reqLogin = ({username,password}) => ajax(`${baseApi}/login`,{username,password},'POST');\r\n\r\n// 添加用户\r\nexport const reqAddUser = user=> ajax('/manage/user/add',user,'POST');\r\n\r\n//获取天气数据\r\n\r\nexport const reqWeather = () => ajax(weatherApi);\r\n\r\n// 获取品类列表\r\n// export const reqCategorys = parentId => ajax(`${baseApi}/manage/category/list`,{parentId});\r\n// 添加分类\r\nexport const reqAddCategory = ({categoryName, parentId}) => ajax(`${baseApi}/manage/category/add`,{parentId,categoryName},'POST');\r\n// 更新分类\r\n// export const reqUpdateCategory = ({categoryId,categoryName}) => ajax(`${baseApi}/manage/category/update`,{categoryId,categoryName},'POST');\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = ({pageNum, pageSize}) => ajax(`${baseApi}/manage/product/list`, {pageNum, pageSize});\r\n\r\n/**\r\n * 搜索获取商品分页列表\r\n * 如何让变量的值作为属性名\r\n *  - 给变量添加[]\r\n*/\r\nexport const reqSearchProducts = ({pageNum, pageSize,searchName,searchType}) => ajax(`${baseApi}/manage/product/search`, {pageNum, pageSize,[searchType]:searchName});\r\n\r\n/**\r\n * 根据分类ID获取分类名称\r\n */\r\nexport const reqCategory = (categoryId) => ajax(`${baseApi}/manage/category/info`,{categoryId});\r\n\r\n/*\r\n * 更新商品的状态(上架/下架)\r\n *  status: 1 / 2 (1:在售  2:下架) \r\n */ \r\nexport const reqUpdateStatus = (productId, status) => ajax(`${baseApi}/manage/product/updateStatus`, {productId, status}, 'POST');\r\n\r\n/**\r\n * 删除图片\r\n */\r\n\r\nexport const reqDeleteImg = (name) => ajax(`${baseApi}/manage/img/delete`,{name},'POST');\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(`${baseApi}/manage/product/${product._id?'update':'add'}`, product, 'POST');\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST');\r\n\r\n// 获取角色列表\r\nexport const reqRoleList = () => ajax(`${baseApi}/manage/role/list`);\r\n\r\n// 添加角色\r\nexport const reqAddRole = (roleName)=> ajax(`${baseApi}/manage/role/add`,{roleName},'POST');\r\n\r\n// 更新角色\r\nexport const reqUpdateRole = (role)=> ajax(`${baseApi}/manage/role/update`,role,'POST');\r\n\r\n// 获取用户列表\r\nexport const reqUsers = () => ajax(`${baseApi}/manage/user/list`);\r\n// 删除指定的用户\r\nexport const reqDeleteUsers = (userId) => ajax(`${baseApi}/manage/user/delete`,{userId},'POST');\r\n\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUsers = (user) => ajax(`${baseApi}/manage/user/${user._id?'update':'add'}`,user,'POST');\r\n\r\n\r\n\r\n// fast Mock \r\n// 用户登录\r\nexport const reqLogin = ({username,password}) => ajax(`${fastMock}/login`,{username,password},'POST');\r\n\r\n// 获取品类列表\r\nexport const reqCategorys = parentId => ajax(`${fastMock}/category/list`,{parentId});\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId,categoryName}) => ajax(`${fastMock}/category/update`,{categoryId,categoryName},'POST');\r\n\r\n\r\n\r\n","const menuList = [\r\n  {\r\n    title:'首页',\r\n    key:'/home',\r\n    icon:'home',\r\n    isPublic:true, // 公开的，不管什么用户都能看到该Itme\r\n  },\r\n  {\r\n    title:'商品',\r\n    key:'/pro',\r\n    icon:'appstore',\r\n    children:[{\r\n      title:'品类管理',\r\n      key:'/pro/category',\r\n      icon:'unordered-list',\r\n    },{\r\n      title:'商品管理',\r\n      key:'/pro/product',\r\n      icon:'appstore',\r\n    }]\r\n  },{\r\n    title:'角色管理',\r\n    key:'/role',\r\n    icon:'user'\r\n  },{\r\n    title:'用户管理',\r\n    key:'/user',\r\n    icon:'user'\r\n  },{\r\n    title:'图形图标',\r\n    key:'/graph',\r\n    icon:'line-chart',\r\n    children:[{\r\n      title:'柱状图',\r\n      key:'/graph/bar',\r\n      icon:'bar-chart',\r\n    },{\r\n      title:'折线图',\r\n      key:'/graph/line',\r\n      icon:'stock',\r\n    },{\r\n      title:'饼图',\r\n      key:'/graph/pie',\r\n      icon:'pie-chart',\r\n    }]\r\n  },{\r\n    title:'Excel',\r\n    key:'/excel',\r\n    icon:'file-excel',\r\n    children:[{\r\n      title:'Excel导入导出',\r\n      key:'/excel/inOrOut',\r\n      icon:'file-excel',\r\n    }]\r\n  },{\r\n    title:'常用组件',\r\n    key:'/com',\r\n    icon:'code',\r\n    children:[{\r\n      title:'安全校验',\r\n      key:'/com/security',\r\n      icon:'security-scan',\r\n    },{\r\n      title:'手写轮播',\r\n      key:'/com/slider',\r\n      icon:'sliders',\r\n    },{\r\n      title:'上传图片',\r\n      key:'/com/upload-img',\r\n      icon:'cloud-upload',\r\n    },{\r\n      title:'放大镜效果',\r\n      key:'/com/magnifier',\r\n      icon:'cloud-upload',\r\n    }]\r\n  },{\r\n    title:'项目代码地址',\r\n    key:'/code',\r\n    icon:'line-chart',\r\n  },{\r\n    title:'引导指南',\r\n    key:'/guide',\r\n    icon:'notification',\r\n  }\r\n];\r\nexport default menuList;","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {setHeadTitle} from './../../redux/action';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass NavMenu extends Component {\r\n  static propTypes = {\r\n    menuList: PropTypes.array.isRequired,\r\n    collapsed: PropTypes.bool.isRequired\r\n  }\r\n  state = {\r\n    openKeys: [],\r\n    selectedKeys: []\r\n  }\r\n  // 处理 pathname\r\n  getOpenKeys = string => {\r\n    let newStr = '',\r\n      newArr = [],\r\n      arr = string.split('/').map(i => '/' + i)\r\n    for (let i = 1; i < arr.length - 1; i++) {\r\n      newStr += arr[i]\r\n      newArr.push(newStr)\r\n    }\r\n    return newArr; // 得到根路由 /graph/bar => /graph\r\n  }\r\n\r\n  // 页面刷新的时候可以定位到 menu 显示\r\n  componentDidMount() {\r\n    let { pathname } = this.props.location\r\n    // 处理当前页面路由在，左侧导航栏没有显示，默认高亮显示其父导航按钮\r\n    /**\r\n     * 注意：一级 /pro\r\n     *  二级必须为：/pro/XXXX\r\n     *  三级必须为： /pro/XXXX/yyyy\r\n     */\r\n    if (this.getOpenKeys(pathname).length > 1) {\r\n      this.setState({\r\n        selectedKeys: this.getOpenKeys(pathname)[1],\r\n        openKeys: this.getOpenKeys(pathname)[0]\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedKeys: [pathname],\r\n        openKeys: this.getOpenKeys(pathname)\r\n      })\r\n    }\r\n\r\n  }\r\n  // 只展开一个 SubMenu\r\n  onOpenChange = openKeys => {\r\n    console.log('openChange');\r\n    if (openKeys.length === 0 || openKeys.length === 1) {\r\n      this.setState({\r\n        openKeys\r\n      })\r\n      console.log('openChange-if', openKeys)\r\n      return\r\n    }\r\n\r\n    // 最新展开的 SubMenu\r\n    const latestOpenKey = openKeys[openKeys.length - 1]\r\n\r\n    // 这里与定义的路由规则有关\r\n    if (latestOpenKey.includes(openKeys[0])) {\r\n      this.setState({\r\n        openKeys\r\n      })\r\n    } else {\r\n      this.setState({\r\n        openKeys: [latestOpenKey]\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * 根据menu的数据数组生成对应的标签数组\r\n   */\r\n  getMenuNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (this.hasAuth(item)) { // 如果当前用户有item对应的权限，才需要显示对应的菜单项\r\n        if (!item.children) {\r\n          return (\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => { this.props.setHeadTitle(item.title) } }><Icon type={item.icon} /><span>{item.title}</span></Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * 使用reduce实现递归调用\r\n  */\r\n\r\n  getMenuNodes_2 = (menuList) => {\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 如果当前用户有item对应的权限，才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        // 向pre中添加 Menu.item\r\n        if (!item.children) {\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key}><Icon type={item.icon} />{item.title}</Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n          // 查找一个与当前路径匹配的子item的父item的key\r\n          const cItem = item.children.find(cItem => cItem.key === path);\r\n          // 如果存在，说明当前item的子列表需要打开\r\n          // this 指当前的组件对象\r\n          if (cItem) {\r\n            this.setState({\r\n              // defaultOpenKeys: [item.key]\r\n            })\r\n          }\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes_2(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n      return pre;\r\n    }, []); // 初始值是 []空数组\r\n  }\r\n\r\n  // 判断当前登录用户对item是否有权限\r\n  hasAuth = (item) => {\r\n    /**\r\n     * 1、如果当前用户是admin\r\n     * 2、如果当前item是公开的\r\n     * 3、判断当前用户有此item的权限，key有没有在menus中\r\n     */\r\n    const { key, isPublic } = item;\r\n    const user = JSON.parse(React.$storage_utils.getUser());\r\n    const menus = user.role.menus;\r\n    const username = user.username;\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true;\r\n    } else if(item.children) { // 当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    // 得到当前请求的路由路径(因为当前组件是非路由组件，所以需要借住于withRouter)\r\n    const { menuList, collapsed } = this.props;\r\n    let { openKeys, selectedKeys } = this.state;\r\n    const defaultProps = collapsed ? [] : openKeys; // 用于解决menu收缩，二级菜单不跟随收缩的问题\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme='dark'\r\n          selectedKeys={selectedKeys}\r\n          onClick={({ key }) => this.setState({ selectedKeys: [key] })}\r\n          onOpenChange={this.onOpenChange}\r\n          openKeys={defaultProps}\r\n        >\r\n          {this.getMenuNodes(menuList)}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * withRouter高阶组件：\r\n *  包装非路由组件，返回一个新的组件\r\n *  新的组件向非路由组件传递3个属性：history/location/match\r\n *  \r\n */\r\n\r\n// export default NavMenu;\r\n// export default withRouter(NavMenu);\r\nexport default connect(\r\n  state => ({}),\r\n  {setHeadTitle}\r\n)(withRouter(NavMenu));\r\n","import {SET_HEAD_TITLE,RECIVER_USER,SHOW_ERROR_MSG} from './action-types';\r\nimport {reqLogin} from './../api'\r\nimport storageUtils from './../config/menuConfig'\r\n/**\r\n * 包含 n个action creator 函数的模块\r\n * 同步action: 对象 {type:'xxx',data:数据值}\r\n * 异步action: 函数 dispatch => {} \r\n */\r\n\r\nexport const setHeadTitle = (headTitle) => ({type:SET_HEAD_TITLE,data:headTitle})\r\n\r\nexport const reciverUser = (userinfo) => ({type:RECIVER_USER,data:userinfo});\r\n\r\n// 显示错误信息\r\nexport const showErrorMsg = (errorMsg) => ({type:SHOW_ERROR_MSG,data:errorMsg}); \r\n\r\n\r\n// 登录的异步action\r\nexport const loginFunc = (username,password) => {\r\n  return async dispatch => {\r\n    // 1、执行异步ajax请求\r\n    const result = await reqLogin(username,password);\r\n    if(result.status === 0) {  // 2.1 如果成功，分发成功的同步action\r\n      const user = result.data;\r\n      this.props.history.replace('/'); // 路由不可以回退，不用记录路由历史\r\n      storageUtils.setUser(JSON.stringify(user));\r\n      dispatch(reciverUser(user));\r\n    } else { // 2.2 如果失败，分发失败的同步action\r\n      const msg = result.msg;\r\n      dispatch(showErrorMsg(msg));\r\n    }\r\n  }\r\n}\r\n\r\n","\r\nexport const SET_HEAD_TITLE = 'set_head_title';\r\nexport const RECIVER_USER = 'reciver_user';\r\n\r\nexport const SHOW_ERROR_MSG = 'show_error_msg';","import React, { Component } from 'react';\r\nimport { Avatar } from 'antd';\r\n\r\nimport './../../assets/css/leftNav.less'\r\nimport NavMenu from './NavMenu';\r\nimport logoImg from './../../assets/img/logo.jpg';\r\nimport menuList from './../../config/menuConfig'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LeftNav extends Component {\r\n  static propTypes = {\r\n    collapsed: PropTypes.bool.isRequired\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <div className=\"left-nav-header\" id=\"navAside\">\r\n          <Avatar src={logoImg} size=\"large\" />\r\n          <h1>后台管理系统</h1>\r\n        </div>\r\n        <div className=\"left-nav-menu\">\r\n          <NavMenu menuList={menuList} collapsed={this.props.collapsed} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftNav;","import React, { Component } from 'react';\r\nimport { Menu, Dropdown, Icon } from 'antd';\r\n\r\nclass DropDown extends Component {\r\n\r\n  menu = () => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item key=\"1\"><Icon type=\"user\" /><span>用户设置</span></Menu.Item>\r\n        <Menu.Item key=\"2\"><Icon type=\"setting\" />系统设置</Menu.Item>\r\n        <Menu.Item key=\"3\"><span onClick={this.props.loginOut}><Icon type=\"logout\" />退出登录</span></Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    // const {loginOut} = this.props;\r\n    return (\r\n      <div>\r\n        <Dropdown overlay={this.menu.bind(this)}>\r\n          <span className=\"ant-dropdown-link\" href=\"#\" onClick={e => e.preventDefault()}>\r\n            个人中心\r\n          </span>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;","import React, { Component } from 'react';\r\nimport { Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport DropDown from './DropDown';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './../../assets/css/header.less';\r\nimport moment from 'moment';\r\nclass Header extends Component {\r\n  // 对props中的值进行类型限制和必要性限制\r\n  static propTypes = {\r\n    collapsed: PropTypes.bool.isRequired,\r\n    toggleCollapsed: PropTypes.func.isRequired,\r\n    loginOut: PropTypes.func.isRequired\r\n  }\r\n  state = {\r\n    currentTime: moment().format('YYYY-MM-DD HH:mm:ss')\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.props.toggleCollapsed();\r\n  }\r\n  getCurrentTime = () => {\r\n    this.timer = setInterval(() => {\r\n      const currentTime = moment().format('YYYY-MM-DD HH:mm:ss');\r\n      this.setState({currentTime});\r\n    },1000)\r\n  }\r\n  getWeather = () => {\r\n    // $.ajax({\r\n    //   url:\"http://wthrcdn.etouch.cn/weather_mini?city=北京\",\r\n\t\t//    //dataType:'json',\r\n\t\t// \ttype:\"get\",\r\n\t\t// \tsuccess:function(data){\r\n\t\t// \t\tconsole.log(\"success\");\r\n\t\t// \t\tconsole.log(data);\r\n\t\t\t\r\n\t\t// \t}\r\n    // })\r\n    // const res = reqWeather;\r\n    // console.log('getWeather',reqWeather);\r\n\r\n    // axios.get('http://wthrcdn.etouch.cn/weather_mini?city=北京').then((res) => {\r\n    //   console.log('getWeather',res)\r\n    // })\r\n    // console.log('res',reqWeather());\r\n  }\r\n  /**\r\n   * 第一次render之后执行，一般在此执行异步操作，发ajax请求 / 启动定时器\r\n   */\r\n  componentDidMount() {\r\n    this.getCurrentTime();\r\n    this.getWeather();\r\n  }\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.timer);\r\n  }\r\n  render() {\r\n    const { collapsed,loginOut,headetitle } = this.props;\r\n    let user = JSON.parse(React.$storage_utils.getUser());\r\n    // let currentTime = moment().format('YYYY-MM-DD HH:mm:ss');\r\n    // console.log()\r\n    return (\r\n      <div className=\"navHeader\">\r\n        <div className=\"toggle-btn\" onClick={this.toggleCollapsed} id=\"collapseBtn\">\r\n          <Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\r\n        </div>\r\n        <div className=\"centerText\">{headetitle}</div>\r\n        <div className=\"header-info\">\r\n          <div className=\"welcome\">\r\n            <p id=\"currentTime\">{this.state.currentTime}</p> \r\n            欢迎<span>{user.username}</span>\r\n          </div>\r\n          <div id=\"usercenter\">\r\n            <DropDown loginOut={loginOut} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Header;\r\n// export default React.memo(Header);\r\n\r\n// 将UI组件包装成函数组件\r\nexport default connect(\r\n  state => ({headetitle:state.headetitle}),\r\n  {}\r\n)(React.memo(Header));\r\n","import React, { Component } from 'react';\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n  }\r\n  render() { \r\n    return (\r\n      <div className=\"main-container\">首页</div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Select, Input, Form } from 'antd';\r\nimport './../../assets/css/category.less'\r\nimport PropType from 'prop-types';\r\nconst { Option } = Select;\r\nconst Item = Form.Item; // 注意const不能写在import之前\r\n\r\nclass AddCategory extends Component {\r\n  static propTypes = {\r\n    categorysList: PropType.array.isRequired,\r\n    setForm: PropType.func.isRequired,\r\n    parentId: PropType.string.isRequired\r\n  }\r\n  componentWillMount() {\r\n    // 将form对象通过setForm()传递给父组件\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const { categorysList, parentId } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"edit-category\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Item label=\"所属分类：\">\r\n            {getFieldDecorator('parentId', {\r\n              initialValue: parentId,\r\n              rules: [{ required: true, message: '请选择所属分类！' }],\r\n            })(\r\n              <Select\r\n                style={{ width: '100%' }}\r\n                placeholder=\"请选择所属分类！\"\r\n              >\r\n              <Option value='0'>品类管理</Option>\r\n              {categorysList.map(res => {\r\n                return (<Option value={res._id} key={res._id}>{res.name}</Option>)\r\n              })}\r\n              </Select>\r\n            )}\r\n          </Item>\r\n          <Item label=\"分类名称：\">\r\n            {getFieldDecorator('categoryName', {\r\n              rules: [\r\n                { required: true, message: '请输入分类名称' },\r\n                { min: 4, message: '分类名称长度必须大于4位！' },\r\n                { max: 12, message: '分类名称长度必须小于12位' }\r\n              ],\r\n            })(<Input placeholder=\"请输入分类名称\" />)}\r\n          </Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default AddCategory;\r\n/**\r\n * 包装Form组件生成一个新的组件：Form(Login)\r\n * 新组件会向Form组件传递一个强大的对象属性：form\r\n */\r\nconst add_category = Form.create()(AddCategory);\r\nexport default add_category;","import React, { Component } from 'react';\r\nimport { Input, Form } from 'antd';\r\nimport './../../assets/css/category.less'\r\nimport PropType from 'prop-types';\r\nconst Item = Form.Item; // 注意const不能写在import之前\r\n\r\nclass UpdateCategory extends Component {\r\n  static propType = {\r\n    categoryName: PropType.string.isRequired,\r\n    setForm: PropType.func.isRequired\r\n  }\r\n  componentWillMount() {\r\n    // 将form对象通过setForm()传递给父组件\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const {categoryName} = this.props;\r\n    return (\r\n      <div className=\"edit-category\">\r\n        <Form>\r\n          <Item label=\"分类名称：\" labelCol={{ span: 4 }} wrapperCol={{ span: 12 }}>\r\n            {getFieldDecorator('categoryName', {\r\n              rules: [\r\n                { required: true, message: '请输入分类名称' },\r\n                { min: 4, message: '分类名称长度必须大于4位！' },\r\n                { max: 12, message: '分类名称长度必须小于12位' },\r\n              ],\r\n              initialValue:categoryName\r\n            })(<Input placeholder=\"请输入分类名称\" />)}\r\n          </Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default AddCategory;\r\n/**\r\n * 包装Form组件生成一个新的组件：Form(Login)\r\n * 新组件会向Form组件传递一个强大的对象属性：form\r\n */\r\nconst update_category = Form.create()(UpdateCategory);\r\nexport default update_category;","export const pagations = {\r\n  defaultPageSize:6,\r\n  showQuickJumper:true\r\n}","import React, { Component } from 'react';\r\nimport { Card, Button, Icon, Table, message, Modal } from 'antd';\r\nimport './../../assets/css/category.less'\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from './../../api';\r\nimport AddCategory from './AddCategory';\r\nimport UpdateCategory from './UpdateCategory';\r\nimport { pagations } from './../../utils/tablePagination';\r\nclass Category extends Component {\r\n  state = {\r\n    categorys: [], // 存储分类列表数据\r\n    loading: false,\r\n    parentId: '0',\r\n    // selectedId: '', // 用于设置默认选中\r\n    parentName: '',\r\n    subCategory: [], // 存储二级分类\r\n    showStatus: 0, // 记录当前是更新还是添加 0：关闭  1:显示添加 2：显示更新\r\n  }\r\n  // 初始话table表头\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类名称',\r\n        dataIndex: 'name',\r\n      }, {\r\n        title: '操作',\r\n        width: '25%',\r\n        dataIndex: '',\r\n        render: (category) => <div>\r\n          <span className=\"link\" onClick={() => this.showUpdate(category)}><Icon type=\"edit\" />修改分类</span>\r\n          {/*\r\n              onClick={this.showSubCategory} 这样写的话没有办法传递参数 \r\n              this.showSubCategory(category) 这样写是在页面渲染的时候直接执行该函数，而不是点击的时候才执行该函数\r\n           */}\r\n          {this.state.parentId === '0' ? <span className='link' onClick={() => this.showSubCategory(category)}><Icon type=\"edit\" />查看子分类</span> : null}\r\n        </div>,\r\n      },\r\n    ];\r\n  }\r\n  /**\r\n   * 发送异步的ajax请求，获取分类列表数据\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    this.setState({ loading: true });\r\n\r\n    parentId = parentId || this.state.parentId;\r\n    const res = await reqCategorys(parentId);\r\n    console.log('品类列表数据',res);\r\n    this.setState({ loading: false });\r\n    if (res.status === 0) {\r\n      const categorys = res.data;\r\n      if (parentId === '0') { // 默认是一级分类\r\n        this.setState({\r\n          categorys\r\n        })\r\n      } else {\r\n        this.setState({\r\n          subCategory: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败');\r\n    }\r\n  }\r\n  // 获取一级分类\r\n  showCategory = () => {\r\n    this.setState({\r\n      parentId: '0',\r\n      subCategory: [],\r\n      parentName: ''\r\n    })\r\n  }\r\n  // 获取二级分类\r\n  showSubCategory = (category) => {\r\n    // 注意：因为setState是异步操作，所以在更改过parentId之后，执行发送请求的操作\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => {\r\n      this.getCategorys();\r\n    })\r\n  }\r\n  /**\r\n   * 此时Dom还未渲染\r\n   * 为第一次render准备数据\r\n   */\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  /**\r\n   * 组件第一次渲染完成，此时DOM节点已经生成，一般在这里调用ajax请求，返回数据setState后组件会重新渲染\r\n   */\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n  /**\r\n   * 右侧添加按钮\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n  /**\r\n   * 编辑\r\n   */\r\n  showUpdate = (category) => {\r\n    this.edit_category = category;\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n  /**\r\n   * 确认添加按钮\r\n   */\r\n  addCategory = () => {\r\n    /**\r\n     * 1、安全校验\r\n     * 2、获取父ID，用户输入的要添加的类别名称\r\n     * 3、重新请求渲染页面\r\n    */\r\n    this.form.validateFields(async (errors, values) => {\r\n      if (!errors) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n        const { categoryName, parentId } = values;\r\n        const res = await reqAddCategory({ parentId, categoryName });\r\n        // 清除输入框输入数据\r\n        this.form.resetFields()\r\n        if (res.status === 0) {\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if (parentId === this.state.parentId) {\r\n            // 重新获取当前分类的列表\r\n            this.getCategorys();\r\n          } else if (parentId === '0') { // 在二级分类列表下添加一级分类，重新获取一级分类列表但不需要显示一级分类\r\n            this.getCategorys('0');\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * 确认编辑按钮\r\n   */\r\n  updateCategory = () => {\r\n    /**\r\n      * 1、将类别名称传递给子组件updateCategory\r\n      * 2、调用接口更新当前类别\r\n      * 3、重新渲染页面\r\n    */\r\n    this.form.validateFields(async (errors, values) => {\r\n      if (!errors) {\r\n        const categoryId = this.edit_category._id;\r\n        /**\r\n         * 需要获取子组件中的数据\r\n         * 此时需要注意：this.form绑定的是子组件的form\r\n         */\r\n        const categoryName = this.form.getFieldValue('categoryName');\r\n        const res = await reqUpdateCategory({ categoryId, categoryName });\r\n        this.form.resetFields(); // 重置输入控件的值\r\n        if (res.status === 0) {\r\n          this.getCategorys();\r\n        }\r\n        this.handleCancel();\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  handleCancel = e => {\r\n    this.form.resetFields(); // 重置输入控件的值\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { categorys, loading, parentId, subCategory, parentName, showStatus } = this.state;\r\n    const edit_category = this.edit_category || {}; // 为了防止页面第一次渲染的时候this.edit_category不存在报错\r\n\r\n    this.selectedId = parentId === '0' ? categorys[0] && categorys[0]._id : parentId;\r\n\r\n    const left_title = parentId === '0' ? '品类管理' : (\r\n      <div>\r\n        <span className=\"link\" onClick={this.showCategory}>品类管理</span>\r\n        <Icon type=\"arrow-right\" style={{ marginRight: 10, marginLeft: 10 }} />\r\n        <span>{parentName}</span>\r\n      </div>\r\n    );\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}><Icon type=\"plus\" />添加</Button>\r\n    )\r\n\r\n    return (\r\n      <div className=\"container category-container\">\r\n        <Card title={left_title} extra={extra}>\r\n          <Table rowKey='_id' dataSource={parentId === '0' ? categorys : subCategory} bordered loading={loading} columns={this.columns} pagination={pagations} />\r\n          <Modal\r\n            title='添加分类'\r\n            visible={showStatus === 1}\r\n            onOk={this.addCategory}\r\n            onCancel={this.handleCancel}\r\n            cancelText=\"取消\"\r\n            okText=\"确定\"\r\n          >\r\n            {/* 子组件向父组件传递数据，需要子组件向父组件传递一个函数 (form)=>this.form = form} */}\r\n            <AddCategory categorysList={categorys} setForm={(form) => this.form = form} parentId={parentId} />\r\n          </Modal>\r\n          <Modal\r\n            title='更新分类'\r\n            visible={showStatus === 2}\r\n            onOk={this.updateCategory}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <UpdateCategory categoryName={edit_category.name} setForm={(form) => this.form = form} />\r\n          </Modal>\r\n        </Card>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;","/**\r\n * 指定一些常量值\r\n */\r\nconst BASE_URL = `http://39.100.225.255:5000`\r\nexport const PAGE_SIZE = 4; // 每页显示的记录数\r\n\r\nexport const BASE_IMG_URL = `${BASE_URL}/upload/`\r\nexport const UPLOAD_IMG = `${BASE_URL}/manage/img/upload`;\r\n","import React, { Component } from 'react';\r\nimport { Card, Icon, Button, Select, Input, Table, Tag,message } from 'antd';\r\nimport { reqProducts, reqSearchProducts,reqUpdateStatus } from './../../api'\r\nimport { PAGE_SIZE } from './../../utils/constants'\r\nconst { Option } = Select;\r\n\r\n/**\r\n * Product的默认子路由组件\r\n */\r\nclass ProductIndex extends Component {\r\n  state = {\r\n    productList: [],\r\n    total: '',\r\n    loading: false,\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索 productName:按商品名称搜索  productDesc:按商品描述搜索\r\n  }\r\n  // 初始化table表头\r\n  initColumns = () => {\r\n    this.columns = [{\r\n      title: '商品名称',\r\n      dataIndex: 'name',\r\n      render: text => <a href=\"/#\">{text}</a>,\r\n    }, {\r\n      title: '商品描述',\r\n      dataIndex: 'desc',\r\n    }, {\r\n      title: '价格',\r\n      width: 100,\r\n      dataIndex: 'price',\r\n      render: (price) => `￥${price}`\r\n    }, {\r\n      title: '状态',\r\n      width: 100,\r\n      // dataIndex: 'status',\r\n      render: (product) => {\r\n        const {status,_id,name } = product;\r\n        return (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Tag color={status === 1 ? '#2DAC91' : '#f00'} onClick={() => this.productStatus(status===1?2:1,_id,name)}>\r\n              {status ===1 ? '下架' : '上架' }\r\n            </Tag><br />\r\n            <span style={{ color:(status === 1) ? '#2DAC91' : '#999'}}>{status ===1 ? '在售' : '已下架' }</span>\r\n          </div>\r\n        )\r\n      },\r\n    }, {\r\n      title: '操作',\r\n      dataIndex: 'product',\r\n      width: 150,\r\n      render: (text, record) =>\r\n        <div>\r\n          <Tag color='#2DAC91' onClick={() => this.props.history.push('/pro/product/detail', { record })}>\r\n            详情\r\n          </Tag>\r\n          <Tag color='#2DAC91' onClick={() => this.props.history.push('/pro/product/edit',record)}>\r\n            编辑\r\n          </Tag>\r\n        </div>\r\n    }]\r\n  }\r\n  // 商品列表数据\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum;\r\n    this.setState({ loading: true });\r\n    const { searchName, searchType } = this.state\r\n    let res\r\n    if (searchName) {\r\n      res = await reqSearchProducts({ pageSize: PAGE_SIZE, pageNum, searchName, searchType });\r\n    } else {\r\n      res = await reqProducts({ pageSize: PAGE_SIZE, pageNum });\r\n    }\r\n    console.log(res);\r\n\r\n    this.setState({ loading: false });\r\n    if (res.status === 0) {\r\n      const { total, list } = res.data;\r\n      this.setState({\r\n        total,\r\n        productList: list\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * 此时Dom还未渲染\r\n   * 为第一次render准备数据\r\n   */\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  /**\r\n    * 组件第一次渲染完成，此时DOM节点已经生成，一般在这里调用ajax请求，返回数据setState后组件会重新渲染\r\n    */\r\n  componentDidMount() {\r\n    this.getProducts(1);\r\n  }\r\n\r\n  /**\r\n   * 更新商品状态\r\n  */\r\n  productStatus = async (status,productId,name) => {\r\n    // const {categoryId,status} = category;\r\n    \r\n    const res = await reqUpdateStatus(productId,status);\r\n    if(res.status === 0) {\r\n      // message.success(`更新${name}商品成功`);\r\n      message.success(`商品更新成功`);\r\n      this.getProducts(this.pageNum);\r\n    }\r\n  }\r\n  render() {\r\n    const { productList, total, loading, searchType } = this.state;\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={() => this.props.history.push('/pro/product/edit')}><Icon type=\"plus\" />添加商品</Button>\r\n    )\r\n    const cardTit = (\r\n      <div>\r\n        <Select\r\n          value={searchType}\r\n          style={{ width: 150 }}\r\n          onChange={value => this.setState({ searchType: value })}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{ width: 150, margin: '0 15px' }}\r\n          onChange={event => this.setState({ searchName: event.target.value })}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </div>\r\n    )\r\n    return (\r\n      <Card type=\"inner\" className=\"product-index\" title={cardTit} extra={extra}>\r\n        <Table\r\n          columns={this.columns}\r\n          dataSource={productList}\r\n          bordered\r\n          loading={loading}\r\n          rowKey='_id'\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total: total,\r\n            defaultCurrent: 1,\r\n            defaultPageSize: PAGE_SIZE,\r\n            onChange: this.getProducts,\r\n            showQuickJumper: true\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductIndex;","import React, { Component } from 'react';\r\nimport { Card, Icon, List } from 'antd';\r\nimport {reqCategory} from './../../api'\r\nconst Item = List.Item;\r\n/**\r\n * Product商品详情页\r\n */\r\nclass ProductDetail extends Component {\r\n  state = {\r\n    cName1:'', // 一级分类的名称\r\n    cName2:'', // 二级分类的名称 \r\n  }\r\n  async componentDidMount() {\r\n    const {pCategoryId,categoryId} = this.props.location.state.record; \r\n    if(pCategoryId === '0') { // 获取一级分类的ID\r\n      const res1 = await reqCategory(categoryId); \r\n      const cName1 = res1.data.name;\r\n      this.setState({cName1});       \r\n    } else {\r\n      /**\r\n       * 通过多个await发送请求，后面一个请求是在前一个请求成功之后才发送的\r\n       *  const res1 = await reqCategory(pCategoryId);            \r\n       *  const res2 = await reqCategory(categoryId); \r\n       */\r\n      const res = await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)]) \r\n      const cName1 = res[0].data.name;\r\n      const cName2 = res[1].data.name;      \r\n      this.setState({cName1,cName2});      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {name,desc,price,detail,imgs} = this.props.location.state.record;const {cName1,cName2} = this.state;    \r\n    // console.log('携带的参数',this.props.location.state.record);\r\n\r\n    const cardTit = (\r\n      <div>\r\n        <Icon type=\"arrow-left\" className=\"arrow\" onClick={() =>this.props.history.goBack()} />\r\n        商品详情\r\n      </div>\r\n    )\r\n    return (\r\n      <Card title={cardTit} bordered={false} className=\"product-index product-detail\">\r\n        <List>\r\n          <Item>\r\n            <span className=\"left-tit\">商品名称：</span>\r\n            <span className=\"right-con\">{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left-tit\">商品描述：</span>\r\n            <span className=\"right-con\">{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left-tit\">商品价格：</span>\r\n            <span className=\"right-con\">{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left-tit\">所属分类：</span>\r\n            <span className=\"right-con\">{cName1}{cName2 ? `--> ${cName2}` : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left-tit\">商品图片：</span>\r\n            <div className=\"right-con\">\r\n              {imgs.map(img => (<img key={img} src={img} className=\"picker\" alt=\"img\" />))}\r\n            </div>\r\n          </Item>\r\n          <Item>\r\n          <span className=\"left-tit\">商品详情：</span>\r\n          <span className=\"right-con\" dangerouslySetInnerHTML={{__html:detail}}></span>\r\n        </Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductDetail;","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport { Upload, Icon, Modal,message } from 'antd';\r\nimport {reqDeleteImg} from './../api';\r\nimport {BASE_IMG_URL,UPLOAD_IMG} from './../utils/constants'\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class UploadImg extends React.Component {\r\n  static propTypes = {\r\n    imgs: PropType.array\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    /**\r\n     * 下面的这些操作是为了给fileList设置默认值\r\n     */\r\n    let fileList = [];\r\n    const {imgs} = this.props;\r\n    if(imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img,index) => (\r\n        {\r\n          uid: -index, // 防止和数据库中的id冲突\r\n          name: img,\r\n          status:'done',\r\n          url: `${BASE_IMG_URL}${img}`\r\n        }\r\n      ))\r\n    }\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览\r\n      previewImage: '', // 大图的地址 url\r\n      fileList\r\n    }\r\n  }\r\n  // state = {\r\n  //   previewVisible: false, // 标识是否显示大图预览\r\n  //   previewImage: '', // 大图的地址 url\r\n  //   fileList: [\r\n  //     /**{\r\n  //       uid: '-1',\r\n  //       name: 'image.png',\r\n  //       status: 'done', // 状态有：uploading：正在上传中， done：上传已完成， error removed：已删除\r\n  //       url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  //     }*/\r\n  //   ],\r\n  // };\r\n\r\n  /**\r\n   * 关闭 modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  /**\r\n   * 显示指定大图\r\n   */\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview, // preview 缓存图片的base64,既是没有上传图片成功，图片也能显示\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * file:指当前上传的图片对象\r\n   * fileList: 指所有已经上传成功的图片对象的数组\r\n   */\r\n  handleChange = async ({ file,fileList }) => {\r\n    if(file.status === 'done') { // 图片上传成功 file返回的name和url不正确\r\n      const res = file.response;\r\n      if(res.status === 0) {\r\n        message.success('上传图片成功');\r\n        const {name,url} = res;\r\n        \r\n        /**\r\n         * 注意file 和 fileList[fileList.length-1] 对应的数据相同，但是二者都是引用数据类型，改变file，但是\r\n         * fileList[fileList.length-1]中的数据却无法改变\r\n         */\r\n        file = fileList[fileList.length-1];\r\n        file.name = name;\r\n        file.url = url;\r\n        \r\n      } else {\r\n        message.error('上传图片失败');\r\n      }\r\n    } else if(file.status === 'removed') { // 图片已被删除\r\n      const res = await reqDeleteImg(file.name ? file.name : file.response.data.name);\r\n      console.log('删除图片',file);\r\n      if(res.status === 0) {\r\n        message.success('图片删除成功')\r\n      }\r\n    }\r\n    this.setState({ fileList })\r\n  };\r\n  /**\r\n   * 获取所有已上传文件图片名的数组\r\n   */\r\n  getImgs = ()=> {\r\n    console.log('子组件')\r\n    return this.state.fileList.map(file => file.name);\r\n  }\r\n  render() {\r\n    const { previewVisible, previewImage,fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action={UPLOAD_IMG} /* https://www.mocky.io/v2/5cc8019d300000980a055e76 上传图片的接口地址 */\r\n          accept=\"image/*\" /**只接受图片格式 */\r\n          listType=\"picture-card\"\r\n          name=\"image\" /**请求参数名 */\r\n          fileList={fileList} /*所有已上传图片文件对象的数组 */\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport PropType from 'prop-types';\r\nimport {UPLOAD_IMG} from './../utils/constants';\r\n\r\nclass RichText extends Component {\r\n  static propTypes = {\r\n    detail: PropType.string\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    /**\r\n     * https://jpuri.github.io/react-draft-wysiwyg/#/docs?_k=jjqinp\r\n     */\r\n\r\n    let editorState = EditorState.createEmpty(); // 创建一个空的编辑对象\r\n    const { detail } = this.props;\r\n    if (detail) {\r\n      const contentBlock = htmlToDraft(detail); // 主要用于判断html格式是否正确\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(htmlToDraft(detail).contentBlocks);\r\n        editorState = EditorState.createWithContent(contentState);\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      editorState\r\n    }\r\n  }\r\n  // state = {\r\n  //   editorState: EditorState.createEmpty(), // 创建一个空的编辑对象\r\n  // }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n  getEditorText = () => {\r\n    /**\r\n     * 返回输入数据对应的HTML格式的文本\r\n     */\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n  }\r\n  /**\r\n   * 图片上传\r\n   */\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', UPLOAD_IMG);\r\n        // xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const url = response.data.url;\r\n          // resolve(url);\r\n          resolve({data: {link: url}});\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          reject(error);\r\n        });\r\n        // let formData = new FormData();\r\n        // formData.append('image',file);\r\n        // fetch(UPLOAD_IMG,{\r\n        //   methods: 'POST',\r\n        //   body: formData\r\n        // }).then((res)=>{\r\n\r\n        // })\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Editor\r\n            editorState={editorState}\r\n            editorStyle={{ border: '1px solid #D9D9D9', minHeight: 400, padding: 5 }}\r\n            onEditorStateChange={this.onEditorStateChange}\r\n            toolbar={{\r\n              image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n            }}\r\n          />\r\n          {/*\r\n            <textarea\r\n              disabled\r\n              value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n            />\r\n          */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RichText;","import React, { Component } from 'react';\r\nimport { Card, Icon, Input, Button, Form, Cascader,message } from 'antd';\r\nimport { reqCategorys,reqAddOrUpdateProduct } from './../../api';\r\nimport UploadImg from './../../components/UploadImg';\r\nimport RichText from './../../components/RichText';\r\n\r\nconst Item = Form.Item;\r\nconst { TextArea } = Input;\r\n/**\r\n * Product商品添加与更新的组件\r\n */\r\nclass ProductEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    /**\r\n     * Refs是使用 React.createRef()创建的，并通过ref属性附加到react元素\r\n     * 访问Refs: this.uploadimg.current\r\n     */\r\n    this.uploadimg = React.createRef();\r\n    /**\r\n     * 调用子组件的方法，获取数据\r\n     */\r\n    this.richtext = React.createRef();\r\n  }\r\n  state = {\r\n    options: [],\r\n  }\r\n  /*\r\n    验证价格的自定义验证函数\r\n  */\r\n  validatePrice = (rule, value, callback) => {\r\n    console.log('值验证', value * 1, typeof value)\r\n    if (value * 1 > 0) {\r\n      callback(); // 验证通过\r\n    } else {\r\n      callback('商品价格必须大于0')\r\n    }\r\n  }\r\n  /**\r\n  * 提交表单\r\n  */\r\n  submit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n     \r\n      console.log('验证', values);      \r\n      if (!err) {\r\n        // 1、收集数据, 并封装成product对象\r\n        const {name, desc, price, categorysId} = values\r\n        let pCategoryId,categoryId;\r\n        if(categorysId.length === 1) {\r\n          pCategoryId = '0';\r\n          categoryId = categorysId[0];\r\n        } else {\r\n          pCategoryId = categorysId[0];\r\n          categoryId = categorysId[1];\r\n        }\r\n        const imgs = this.uploadimg.current.getImgs();\r\n        const detail = this.richtext.current.getEditorText();\r\n        // const product = {name,desc,price,pCategoryId,categoryId};\r\n        console.log(detail);\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n        // 如果是更新，添加_id\r\n        if(this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n        // 2、调用接口请求函数去添加/更新\r\n        const res = await reqAddOrUpdateProduct(product);\r\n        // 3、根据状态进行提示\r\n        if(res.status === 0) {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品成功！`);\r\n          this.props.history.goBack();\r\n        } else {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品失败！`);          \r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  loadData = async selectedOptions => {\r\n    const targetOption = selectedOptions[0];\r\n    targetOption.loading = true;\r\n    // 根据选中的分类，请求获取二级分类列表\r\n    // 注意：this.getCategorys返回的数据是异步的，这一需要使用await\r\n    const subCategories = await this.getCategorys(selectedOptions[0].value);\r\n    targetOption.loading = false;\r\n    if (subCategories && subCategories.length > 0) {\r\n      const cOptions = subCategories.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }));\r\n      targetOption.children = cOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true;\r\n    }\r\n    // 重新更新options数据\r\n    this.setState({\r\n      options: [...this.state.options]\r\n    })\r\n  }\r\n  /**\r\n   * 获取一级分类列表\r\n  */\r\n  getCategorys = async (parentId) => {\r\n    const res = await reqCategorys(parentId);\r\n    // console.log('一级分类列表',res);  \r\n    if (res.status === 0) {\r\n      const categorys = res.data;\r\n      if (parentId === 0) {\r\n        this.initOptions(res.data);\r\n      } else {\r\n        return categorys;\r\n      }\r\n    }\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map(c => (\r\n      {\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: false,\r\n      }\r\n    ))\r\n\r\n    /**\r\n     * 如果是一个二级分类商品的更新\r\n     */\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId } = product;\r\n\r\n    if (isUpdate && pCategoryId !== '0') {\r\n      const subCategories = await this.getCategorys(pCategoryId);\r\n\r\n      // 生成二级下拉列表的option\r\n      const childOption = subCategories.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n\r\n      /**\r\n       * 难点：在更新的时候，默认二级分类是选不中的，添加下面的代码可以选中\r\n      */\r\n      // 找到当前对应的一级Option对象\r\n      const targetOption = options.find(option => option.value === pCategoryId);\r\n      // 将二级下拉列表的option关联到一级分类的 option 上\r\n      targetOption.children = childOption;\r\n    }\r\n\r\n    this.setState({ options });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys(0);\r\n  }\r\n  componentWillMount() {\r\n    const product = this.props.location.state;\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product\r\n\r\n    // 保存商品信息\r\n    this.product = product || {};\r\n  }\r\n  render() {\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId, categoryId, imgs,detail } = product;\r\n    const categorysId = [];\r\n    if (pCategoryId === '0') { // 一级分类ID\r\n      categorysId.push(categoryId);\r\n    } else {\r\n      categorysId.push(pCategoryId);\r\n      categorysId.push(categoryId);\r\n    }\r\n    console.log('imgs', imgs);\r\n    // 得到具有强大功能的form对象\r\n    const { getFieldDecorator } = this.props.form;\r\n    const cardTit = (\r\n      <div>\r\n        <Icon type=\"arrow-left\" className=\"arrow\" onClick={() => this.props.history.goBack()} />\r\n        {isUpdate ? '修改商品' : '添加商品'}\r\n      </div>\r\n    )\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 12 },\r\n    };\r\n\r\n    return (\r\n      <Card title={cardTit} bordered={false} className=\"product-index product-edit\">\r\n        <Form {...formItemLayout} onSubmit={this.submit}>\r\n          <Item label=\"商品名称\">\r\n            {getFieldDecorator('name', {\r\n              initialValue: product.name,\r\n              rules: [\r\n                { required: true, message: '请输入商品名称' },\r\n              ],\r\n            })(<Input placeholder=\"请输入商品名称\" />)}\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {getFieldDecorator('desc', {\r\n              initialValue: product.desc,\r\n              rules: [\r\n                { required: true, message: '请输入商品描述' },\r\n              ],\r\n            })(<TextArea autoSize={{ minRows: 1, maxRows: 5 }} placeholder=\"请输入商品描述\" />)}\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n            {getFieldDecorator('price', {\r\n              initialValue: product.price,\r\n              rules: [\r\n                { required: true, validator: this.validatePrice }\r\n              ],\r\n            })(<Input type=\"number\" addonAfter=\"元\" placeholder=\"请输入商品价格\" />)}\r\n          </Item>\r\n          {/* categorysId ? categoryId : [] 如果要是不这样写的话，placeholder 不起作用 */}\r\n          <Item label=\"商品分类\">\r\n            {getFieldDecorator('categorysId', {\r\n              initialValue: categorysId ? categorysId : [],\r\n              rules: [\r\n                { required: true, message: '请选择商品分类' },\r\n              ],\r\n            })(<Cascader\r\n              placeholder=\"请选择商品分类\"\r\n              options={this.state.options}\r\n              loadData={this.loadData}\r\n              onChange={this.onChangeSelect}\r\n            />)}\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <UploadImg ref={this.uploadimg} imgs={imgs} />\r\n          </Item>\r\n          <Item label=\"商品详情\" labelCol={{span:2}} wrapperCol={{span:14}}>\r\n            <RichText ref={this.richtext} detail={detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" >确定</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n// export default ProductEdit;\r\nconst WrapProductEdit = Form.create()(ProductEdit);\r\nexport default WrapProductEdit;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport ProductIndex from './Index';\r\nimport ProductDetail from './Details';\r\nimport ProductEdit from './ProductEdit';\r\nimport './../../assets/css/product.less'\r\n\r\nclass Product extends Component {\r\n  render() {\r\n    /**\r\n     * 注意：路由匹配默认是逐层匹配\r\n     * 如果不想逐层匹配需要设置 exact 路径完全匹配\r\n     */\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/pro/product\" component={ProductIndex} exact />\r\n        <Route path=\"/pro/product/detail\" component={ProductDetail} />\r\n        <Route path=\"/pro/product/edit\" component={ProductEdit} />\r\n        {/* 用户输入的路径匹配不到，需要进行路由的重定向 */}\r\n        <Redirect to='/pro/product' />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;","import React, { Component } from 'react';\r\nimport { Form, Input } from 'antd';\r\nimport PropType from 'prop-types';\r\n\r\nclass AddRole extends Component {\r\n  static propTypes = {\r\n    setForm: PropType.func.isRequired\r\n  }\r\n  componentWillMount() {\r\n    // 将form对象通过setForm()传递给父组件\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Form.Item label=\"角色名称\" labelCol={{ span: 4 }} wrapperCol={{ span: 12 }}>\r\n          {getFieldDecorator('roleName',{\r\n            initialValue:'',\r\n            rules: [{\r\n              required:true, message: '角色名称必须输入'\r\n            }]\r\n          })(\r\n            <Input placeholder=\"请输入角色名称\" />            \r\n          )}\r\n        </Form.Item>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddRole);","import React, { Component } from 'react';\r\nimport { Form, Input, Tree } from 'antd';\r\nimport menuList from './../../config/menuConfig'\r\nimport PropType from 'prop-types';\r\n\r\nconst Item = Form.Item;\r\nconst { TreeNode } = Tree;\r\n\r\nclass RoleAuth extends Component {\r\n  static propTypes = {\r\n    role: PropType.object\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    const {menus} = this.props.role\r\n    // console.log('menu',menus);\r\n    this.state = {\r\n      checkedKeys: menus // 选中复选框的树节点\r\n    }\r\n  }\r\n  // 点击复选框触发\r\n  onCheck = checkedKeys => {\r\n    // console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n  getTreeNodes = menuList => {\r\n    return menuList.reduce((pre,item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key} >\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre;\r\n    },[]); // 如果要是没有数据默认返回一个空数组[]\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.treeNodes = this.getTreeNodes(menuList);\r\n  }  \r\n\r\n  /**\r\n   * 只要父级组件重新渲染时，这个生命周期就会调用，不管props有没有变化\r\n   * 当props发生变化时调用\r\n   * 注意：当页面第一次渲染的时候不会调用该生命周期\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    const menus = nextProps.role.menus;\r\n    this.setState({\r\n      checkedKeys:menus\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * 将选中权限数据，传递给父组件\r\n   */\r\n  getMenus = () => this.state.checkedKeys;\r\n    \r\n  render() {\r\n    const {name} = this.props.role;\r\n    return (\r\n      <div>\r\n        <Item label=\"角色名称\" labelCol={{ span: 4 }} wrapperCol={{ span: 16 }}>\r\n          <Input placeholder=\"请输入角色名称\" disabled value={name} />\r\n        </Item>\r\n        <Item>\r\n          <Tree\r\n            checkable\r\n            defaultExpandAll={true}\r\n            onCheck={this.onCheck}\r\n            checkedKeys={this.state.checkedKeys}\r\n          >\r\n            <TreeNode title=\"平台权限\" key=\"all\">\r\n              {this.treeNodes}\r\n            </TreeNode>\r\n          </Tree>\r\n        </Item>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoleAuth;","import React, { Component } from 'react';\r\nimport { Card, Button, Table, message, Modal } from 'antd';\r\nimport { reqRoleList, reqAddRole,reqUpdateRole } from './../../api';\r\nimport { pagations } from './../../utils/tablePagination';\r\nimport AddRole from './AddRole';\r\nimport RoleAuth from './RoleAuth'\r\nimport moment from 'moment';\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    /**\r\n     * Refs时使用React.creactRef()创建的\r\n     * 并通过ref属性附加到react元素\r\n     * 访问Refs:this.xxx.current\r\n     */\r\n    this.menuKeys = React.createRef();\r\n\r\n  }\r\n  state = {\r\n    roleList: [], // 用户角色列表\r\n    loading: false,\r\n    isShowAdd: false, // 显示添加弹框\r\n    isShowAuth: false,\r\n    role: {}, // 选中的role\r\n  }\r\n  /**\r\n   * 初始化表头\r\n   */\r\n  initColunms = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render:(create_time)=> moment(create_time).format('YYYY-MM-DD  hh:mm:ss')\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render:(auth_time)=> moment(auth_time).format('YYYY-MM-DD  hh:mm:ss')\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name',\r\n      },\r\n    ];\r\n  }\r\n  /**\r\n   * 获取角色列表\r\n  */\r\n  getRoleList = async () => {\r\n    this.setState({ loading: true });\r\n    const res = await reqRoleList();\r\n    this.setState({ loading: false });\r\n    if (res.status === 0) {\r\n      const roleList = res.data;\r\n      this.setState({ roleList });\r\n    } else {\r\n      message.error('角色列表获取失败');\r\n    }\r\n  }\r\n  /**\r\n   * 创建角色\r\n  */\r\n  addRole = () => {\r\n    this.form.validateFields(async (errors, values) => {\r\n      console.log('创建角色', values, errors);\r\n      if (!errors) {\r\n        // 隐藏创建角色弹窗\r\n        this.setState({\r\n          isShowAdd: false\r\n        });\r\n        const { roleName } = values;\r\n        this.form.resetFields();\r\n        const res = await reqAddRole(roleName);\r\n        console.log('xxxx', res);\r\n        if (res.status === 0) {\r\n          message.success('角色添加成功！');\r\n          // 更新 roleList 数据列表\r\n          // 但是下面这种写法，react建议\r\n          const role = res.data;\r\n\r\n          // const roleList = this.state.roleList;\r\n          // roleList.push(role);\r\n          // this.setState({roleList});\r\n\r\n          // react建议的写法\r\n          // 更新roleList状态，基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roleList: [...state.roleList, role]\r\n          }))\r\n\r\n        } else {\r\n          message.error('角色添加失败！');\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /**\r\n  * 更新角色权限 \r\n  */\r\n  updateRoleAuth = async () => {\r\n    this.setState({isShowAuth:false})\r\n    // 1、需要获取到用户设置的权限数据\r\n    // 2、调用接口，更新用户权限\r\n    // 3、根据状态提示\r\n    // 4、更新数据\r\n    const menuKeys = this.menuKeys.current.getMenus();\r\n    const role = this.state.role;\r\n    const userinfo = JSON.parse(React.$storage_utils.getUser());\r\n    role.auth_time = Date.now();\r\n    role.auth_name = userinfo.username;\r\n    role.menus = menuKeys;\r\n    // console.log('xxxxxxx',userinfo._id,role._id);\r\n    const res = await reqUpdateRole(role);\r\n    if(res.status === 0) {\r\n      // 当用户更改的是自己的权限\r\n      // 应该要退出系统\r\n      if(role._id === userinfo._id) {\r\n        React.$storage_utils.removeUser();\r\n        this.props.history.push('/login');\r\n        message.success('当前用户角色权限设置成功！');        \r\n      } else {\r\n       \r\n        /**\r\n         * 下面的代码是更新本地的数据\r\n         * 疑问：为什么上面更改的是role,但是roleList数据会发生变化呢？\r\n         * 因为role是roleList的一个引用变量,是roleList其中的一个，当role更改的时候，this.state.roleList的值也会更改\r\n         */\r\n        // 如果当前更新的是自己角色的权限，强制退出\r\n        if(userinfo.role_id === role._id) {\r\n          // userinfo = {};          \r\n          React.$storage_utils.removeUser();\r\n          this.props.history.replace('/login');\r\n          message.success('当前用户角色权限修改，请重新登录！');\r\n        } else {\r\n          message.success('设置角色权限成功！');\r\n          this.setState({\r\n            roleList:[...this.state.roleList]\r\n          })\r\n        }\r\n      }\r\n     \r\n    }\r\n  }\r\n  /**\r\n * 此时Dom还未渲染\r\n * 为第一次render准备数据\r\n */\r\n  componentWillMount() {\r\n    this.initColunms();\r\n  }\r\n  /**\r\n   * 组件第一次渲染完成，此时DOM节点已经生成，一般在这里调用ajax请求，返回数据，重新setState后，组件会重新渲染\r\n  */\r\n  componentDidMount() {\r\n    this.getRoleList();\r\n  }\r\n  render() {\r\n    const { role, roleList, loading, isShowAdd, isShowAuth } = this.state;\r\n    const cardTit = (\r\n      <div>\r\n        <Button type=\"primary\" style={{ marginRight: 10 }} onClick={() => { this.setState({ isShowAdd: true }) }}>创建角色</Button>\r\n        <Button type=\"primary\" disabled={!role._id} onClick={() => this.setState({ isShowAuth: true })}>设置角色权限</Button>\r\n      </div>\r\n    )\r\n    const rowSelection = {\r\n      type: 'radio',\r\n      hideDefaultSelections: true,\r\n      onSelect: (role) => { // 选择某个radio时的回调\r\n        // console.log('onSelect', role);\r\n        this.setState({ role })\r\n      }\r\n    };\r\n    return (\r\n      <Card type=\"inner\" className=\"product-index\" title={cardTit}>\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={this.columns}\r\n          dataSource={roleList}\r\n          loading={loading}\r\n          bordered={true}\r\n          rowKey='_id'\r\n          pagination={pagations}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAdd: false })\r\n          }}\r\n        >\r\n          {/* 接收函数类型的属性 */}\r\n          <AddRole\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRoleAuth}\r\n          onCancel={() => {\r\n            this.setState({ isShowAuth: false })\r\n          }}\r\n        >\r\n          <RoleAuth role={role} ref={this.menuKeys} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;","/**\r\n * callback() 验证通过\r\n * callback(\"xxx\") 验证失败，并指定提示的文本\r\n*/\r\n\r\nexport const validatePsw = (rule, value, callback) => {\r\n  if (!value) {\r\n    callback('请输入密码');\r\n  } else if(!/^[a-zA-Z0-9_]{4,6}$/.test(value)) {\r\n    callback('密码必须由数字、字母、下划线组成,且长度为 4~6 位！');\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nexport const validateTel = (rule, value, callback) =>{\r\n  if (!value) {\r\n    callback('请输入手机号');\r\n  } else if (!(/^1(3|4|5|6|7|8|9)\\d{9}$/.test(value))) {\r\n    callback('手机号格式不正确');\r\n  } else { // 验证通过\r\n    callback();\r\n  }\r\n}\r\n\r\nexport const validateEmail = (rule,value,callback)=> {\r\n  if(!value) {\r\n    callback('请输入邮箱');\r\n  } else if(!/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/.test(value)) {\r\n    callback('邮箱格式不正确');\r\n  } else {\r\n    callback();\r\n  }\r\n}","import React, { PureComponent } from 'react';\r\nimport { Form, Input, Select } from 'antd';\r\nimport PropType from 'prop-types';\r\nimport { validateTel, validateEmail, validatePsw } from './../../utils/validate.js';\r\n\r\nconst Item = Form.Item;\r\nconst { Option } = Select;\r\nclass UserForm extends PureComponent {\r\n  static propTypes = {\r\n    roles: PropType.array.isRequired,\r\n    user: PropType.object\r\n  }\r\n  /**\r\n    * 提交\r\n    */\r\n  // submit = e => {\r\n  //   e.preventDefault();\r\n  //   this.props.form.validateFields(() => {\r\n\r\n  //   })\r\n  // }\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { roles, user } = this.props;\r\n    // const {username} = this.props.user;\r\n    // console.log('xxxx',user)\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },\r\n      wrapperCol: { span: 16 }\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label=\"用户名\">\r\n          {getFieldDecorator('username', {\r\n            initialValue: user.username,\r\n            rules: [{\r\n              required: true, message: '用户名不能为空'\r\n            }]\r\n          })(\r\n            <Input placeholder=\"请输入用户名\" />\r\n          )}\r\n        </Item>\r\n        {\r\n          user._id ? null : (\r\n            <Item label=\"密码\">\r\n              {getFieldDecorator('password', {\r\n                initialValue: user.password,\r\n                rules: [{\r\n                  validator: validatePsw\r\n                }]\r\n              })(\r\n                <Input.Password placeholder=\"请输入密码\" />\r\n              )}\r\n            </Item>\r\n          )\r\n        }\r\n        <Item label=\"手机号码\">\r\n          {getFieldDecorator('phone', {\r\n            initialValue: user.phone,\r\n            rules: [{\r\n              validator: validateTel\r\n            }]\r\n          })(\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          )}\r\n        </Item>\r\n        <Item label=\"邮箱\">\r\n          {getFieldDecorator('email', {\r\n            initialValue: user.email,\r\n            rules: [{\r\n              validator: validateEmail\r\n            }]\r\n          })(\r\n            <Input placeholder=\"请输入邮箱\" />\r\n          )}\r\n        </Item>\r\n        <Item label=\"角色\">\r\n          {getFieldDecorator('role_id', {\r\n            initialValue: user.role_id,\r\n            rules: [{\r\n              required: true, message: '角色不能为空'\r\n            }]\r\n          })(\r\n            <Select placeholder=\"请选择角色\">\r\n              {\r\n                roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n              }\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm);","import React, { Component } from 'react';\r\nimport { Card, Button, Table, message, Modal, Tag } from 'antd';\r\nimport moment from 'moment';\r\nimport { pagations } from './../../utils/tablePagination';\r\nimport {reqUsers,reqDeleteUsers,reqAddOrUpdateUsers} from './../../api';\r\nimport UserForm from './UserForm';\r\nclass User extends Component {\r\n  state = {\r\n    users: [], // 用户列表数据\r\n    roles:[], // 记录用户身份\r\n    loading:false,\r\n    userEditorModal:false,\r\n  }\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n      },\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone',\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render:(create_time)=>moment(create_time).format('YYYY-MM-DD  hh:mm:ss')\r\n      }, {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render:(role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'action',\r\n        render: (text, user) => (\r\n          <div>\r\n            <Tag color=\"#2DAC91\" onClick={()=>this.editUser(user)}>修改</Tag>\r\n            <Tag color=\"#2DAC91\" onClick={() => this.delUser(user)}>删除</Tag>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n  }\r\n  /**\r\n   * 获取用户列表\r\n  */\r\n  getUserList = async () => {\r\n    this.setState({loading:true});\r\n    const res = await reqUsers();\r\n    this.setState({loading:false});\r\n    if(res.status === 0) {\r\n      const {users,roles} = res.data;\r\n      this.initRoleName(roles);\r\n      this.setState({users,roles});\r\n    } else {\r\n      message.error('用户列表获取失败');\r\n    }\r\n  }\r\n  /*\r\n    处理用户列表数据 \r\n  */\r\n  initRoleName = (roles) => {\r\n    // reduce有四个参数，第一个参数代表上一次循环的值，第二个参数当前item，第三个参数：index,第四个参数：当前数组\r\n    const roleNames = roles.reduce((pre,role)=> {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    },{})\r\n    this.roleNames = roleNames;\r\n  }\r\n  /**\r\n   * 删除用户\r\n  */\r\n  delUser = (user) => {\r\n    const {_id,username} = user;\r\n    Modal.confirm({\r\n      title: `确定删除${username}吗？`,\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const res = await reqDeleteUsers(_id);\r\n        if(res.status === 0) {\r\n          message.success('删除用户成功');\r\n          this.getUserList();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * 编辑\r\n   */\r\n  editUser = (user)=> {\r\n    this.setState({userEditorModal:true});\r\n    this.user = user;\r\n    console.log('用户当前',user);\r\n  }\r\n  /**\r\n   * 确认添加或编辑用户\r\n   */\r\n  addOrEditUser = ()=> {\r\n    // this.setState()\r\n    /**\r\n     * 1、安全校验\r\n     * 2、获取用户输入的数据\r\n     * 3、请求接口\r\n     * 4、重新渲染页面\r\n     */\r\n    this.form.validateFields(async (error,values) => {\r\n      if(!error) {\r\n        if(this.user) {\r\n          values._id = this.user._id;\r\n        }\r\n        const res = await reqAddOrUpdateUsers(values);\r\n        // 清除输入框数据\r\n        this.form.resetFields();\r\n        this.setState({userEditorModal: false});\r\n        if(res.status === 0) {\r\n          \r\n          // 如果用户修改的是自己的，则更改本地localStorage中的数据\r\n          // 因为没有相应的接口获取用户自己的信息，所有当用户更改自己的信息时，强制退出登录\r\n          let localuser = JSON.parse(React.$storage_utils.getUser());\r\n          console.log('user',this.user,localuser);\r\n          if(localuser._id === this.user._id) {\r\n            React.$storage_utils.removeUser();\r\n            this.props.history.push('/login');\r\n            message.success('当前用户信息被重置，请重新登陆！');\r\n          } else {\r\n            message.success(`${this.user ? '修改' : '添加'}用户成功`);\r\n            this.getUserList();\r\n          }\r\n\r\n        } else {\r\n          message.error(`${this.user ? '修改' : '添加'}用户失败`);\r\n        }\r\n      }\r\n    })\r\n\r\n    // console.log('xxx',user);\r\n  }\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  componentDidMount() {\r\n    this.getUserList();\r\n  }\r\n  render() {\r\n    const { columns } = this;\r\n    const user = this.user || {};\r\n    const { users,roles,userEditorModal } = this.state;\r\n    const cardTit = (\r\n      <div>\r\n        <Button type=\"primary\" style={{ marginRight: 10 }} onClick={()=> {\r\n          this.user = null; // 去除前面保存的user\r\n          this.setState({userEditorModal:true})\r\n        }}>创建用户</Button>\r\n      </div>\r\n    )\r\n    return (\r\n      <Card type=\"inner\" className=\"product-index\" title={cardTit}>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={users}\r\n          bordered={true}\r\n          pagination={pagations}\r\n          rowKey='_id'\r\n        />\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={userEditorModal}\r\n          onOk={this.addOrEditUser}\r\n          onCancel={()=> {\r\n            this.form.resetFields()\r\n            this.setState({userEditorModal:false})\r\n          }}\r\n        >\r\n          <UserForm \r\n            setForm={form => this.form = form}\r\n            roles={roles} \r\n            user={user} \r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport { Card, Button,Spin } from 'antd';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass Bar extends Component {\r\n  state = {\r\n    sales: [1000, 520, 200, 334, 390, 330, 220],\r\n    store: [100, 50, 10, 34, 30, 39, 22],\r\n    loading: false\r\n  }\r\n  chartOption = (sales,store) => {\r\n    let option = {\r\n      title:{\r\n        show: true,\r\n        text:'销售曲线图'\r\n      },\r\n      color: ['#2DAC91','#f00','#E8F7F6','#E6F2FD','#F1EAFF'], //填充色\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n        show: true\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日'],\r\n          axisTick: {\r\n            alignWithLabel: false\r\n          }\r\n        }\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          boundaryGap: ['0%', '20%']\r\n        }\r\n      ],\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'bar',\r\n          barWidth: '35%',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'bar',\r\n          barWidth: '35%',\r\n          data: store\r\n        }\r\n      ]\r\n    }\r\n    return option;\r\n  }\r\n  update = ()=> {\r\n    this.setState({loading: true})\r\n    this.setState(state => ({\r\n      sales: state.sales.map(i => i + 1),\r\n      store: state.store.reduce((pre,i) => {\r\n        pre.push(i - 1);\r\n        return pre;\r\n      },[])\r\n    }),() => {\r\n      setInterval(() => {\r\n        this.setState({loading:false})        \r\n      },500)\r\n    })\r\n  }\r\n  render() {\r\n    const {sales,store,loading} = this.state;    \r\n    const cardTit = (\r\n      <div>\r\n        <Button type=\"primary\" style={{ marginRight: 10 }} onClick={() => {this.update()}}>更新</Button>\r\n      </div>\r\n    )\r\n    return (\r\n      <Spin spinning = {loading} tip=\"更新中....\" >\r\n        <Card type=\"inner\" className=\"product-index\" title={cardTit}>\r\n          <ReactEcharts option={this.chartOption(sales,store)} style={{height:'490px'}}  />\r\n        </Card>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bar;","import React, { Component } from 'react';\r\nclass Line extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n  }\r\n  render() { \r\n    return (\r\n      <div>折线图</div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Line;","import React, { Component } from 'react';\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n  }\r\n  render() { \r\n    return (\r\n      <div>\r\n        饼状图\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default PieChart;","import React, { Component } from 'react';\r\nimport {Button} from 'antd';\r\nimport {Link} from 'react-router-dom'\r\nimport notFound from './../../assets/img/404.jpg';\r\nimport './../../assets/css/not-found.less';\r\nclass NotFound extends Component {\r\n  \r\n  render() { \r\n    return (\r\n      <div className=\"notFoundPage\">\r\n        <img src={notFound} alt=\"NotFound\" />\r\n        <Link to='/' >\r\n          <Button className=\"toIndex\" type=\"primary\" >回到首页</Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default NotFound;","const steps = [{\r\n  element: '#navAside',\r\n  popover: {\r\n    title: '菜单导航',\r\n    description: '点击菜单可切换菜单内容',\r\n    position: 'right',\r\n  },\r\n  padding: 0\r\n},{\r\n  element: '#collapseBtn',\r\n  stageBackground:'#fff',\r\n  popover: {\r\n    title: '折叠按钮',\r\n    description: '点击收缩和展开菜单导航',\r\n    position: 'bottom',\r\n  },\r\n},{\r\n  element: '#currentTime',\r\n  popover: {\r\n    title: '时间',\r\n    description: '当前时间',\r\n    position: 'left',\r\n  },\r\n},{\r\n  element: '#usercenter',\r\n  popover: {\r\n    title: '个人中心',\r\n    description: '点击图标显示操作',\r\n    position: 'left',\r\n  },\r\n}] \r\n// \r\n\r\nexport default steps;","import React, { Component } from 'react';\r\nimport { Button, Icon } from 'antd';\r\nimport Driver from 'driver.js';\r\nimport steps from './guide'\r\nimport 'driver.js/dist/driver.min.css';\r\n\r\nclass Guide extends Component {\r\n  state = {\r\n    driver: null\r\n  }\r\n  componentDidMount() {\r\n    this.driver = new Driver({\r\n      opacity: 0.6,\r\n      stageBackground: '#2DAC91'\r\n    })\r\n  }\r\n  guide = () => {\r\n    this.driver.defineSteps(steps)\r\n    this.driver.start()\r\n  }\r\n  showDriver = (e) => {\r\n    e.nativeEvent.stopImmediatePropagation(); // 阻止冒泡\r\n    this.guide();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div className=\"guide-desc\">\r\n          <Icon type=\"bulb\" />\r\n          点击按钮可查看本管理系统的操作\r\n        </div>\r\n        <Button type=\"primary\" onClick={e => this.showDriver(e)}>引导</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Guide;","import XLSX from \"xlsx\";\r\n//引入xlsx\r\n/**\r\n * 导入excel的函数\r\n * @param {*} file \r\n */\r\nconst importsExcel = (file) => {\r\n    //使用promise导入\r\n    return new Promise((resolve, reject) => {\r\n        // 获取上传的文件对象\r\n        const { files } = file.target; //获取里面的所有文件\r\n        // 通过FileReader对象读取文件\r\n        const fileReader = new FileReader();\r\n\r\n        fileReader.onload = event => { //异步操作  excel文件加载完成以后触发\r\n            try {\r\n                const { result } = event.target;\r\n                // 以二进制流方式读取得到整份excel表格对象\r\n                const workbook = XLSX.read(result, { type: 'binary' });\r\n                let data = []; // 存储获取到的数据\r\n                // 遍历每张工作表进行读取（这里默认只读取第一张表）\r\n                for (const sheet in workbook.Sheets) {\r\n                    if (workbook.Sheets.hasOwnProperty(sheet)) {\r\n                        data = data.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\r\n                    }\r\n                }\r\n                resolve(data);//导出数据\r\n            } catch (e) {\r\n                // 这里可以抛出文件类型错误不正确的相关提示\r\n                reject(\"失败\");//导出失败\r\n            }\r\n        };\r\n        // 以二进制方式打开文件\r\n        fileReader.readAsBinaryString(files[0]);\r\n    })\r\n\r\n}\r\n/**\r\n * 导出excel\r\n * @param {*} headers \r\n * @param {*} data \r\n * @param {*} fileName \r\n */\r\nconst exportExcel = (headers, data, fileName = 'demo.xlsx') => {\r\n\r\n    const _headers = headers\r\n        .map((item, i) => Object.assign({}, { key: item.key, title: item.title, position: String.fromCharCode(65 + i) + 1 }))\r\n        .reduce((prev, next) => Object.assign({}, prev, { [next.position]: { key: next.key, v: next.title } }), {});\r\n    const _data = data\r\n        .map((item, i) => headers.map((key, j) => Object.assign({}, { content: item[key.key], position: String.fromCharCode(65 + j) + (i + 2) })))\r\n        // 对刚才的结果进行降维处理（二维数组变成一维数组）\r\n        .reduce((prev, next) => prev.concat(next))\r\n        // 转换成 worksheet 需要的结构\r\n        .reduce((prev, next) => Object.assign({}, prev, { [next.position]: { v: next.content } }), {});\r\n\r\n    // 合并 headers 和 data\r\n    const output = Object.assign({}, _headers, _data);\r\n    // 获取所有单元格的位置\r\n    const outputPos = Object.keys(output);\r\n    // 计算出范围 ,[\"A1\",..., \"H2\"]\r\n    const ref = `${outputPos[0]}:${outputPos[outputPos.length - 1]}`;\r\n\r\n    // 构建 workbook 对象\r\n    const wb = {\r\n        SheetNames: ['mySheet'],\r\n        Sheets: {\r\n            mySheet: Object.assign(\r\n                {},\r\n                output,\r\n                {\r\n                    '!ref': ref,\r\n                    '!cols': [{ wpx: 45 }, { wpx: 100 }, { wpx: 200 }, { wpx: 80 }, { wpx: 150 }, { wpx: 100 }, { wpx: 300 }, { wpx: 300 }],\r\n                },\r\n            ),\r\n        },\r\n    };\r\n\r\n    // 导出 Excel\r\n    XLSX.writeFile(wb, fileName);\r\n\r\n}\r\n\r\n\r\nexport {\r\n    importsExcel,\r\n    exportExcel\r\n}","import React, { Component } from 'react';\r\nimport { Table ,Card,Button,Input } from 'antd';\r\nimport {importsExcel,exportExcel} from './../../utils/excel';\r\nimport './../../assets/css/excel.less';\r\nclass ExcelOut extends Component {\r\n    state = {\r\n        lists:[{\r\n            username: 'Jacqui',\r\n            age: 32,\r\n            sex: '男',\r\n            phone: '15617990221',\r\n            id: 0,\r\n        },{\r\n            age: 20,\r\n            id: 1,\r\n            phone: 15617990221,\r\n            sex: \"女\",\r\n            username: \"Jack\",\r\n        }],\r\n        excelIn_flag: false,\r\n        loading: false,\r\n        excelName: ``, // 当前选中的excel文件\r\n    }\r\n    componentWillMount() {\r\n        this.initForm();\r\n    }\r\n    // 导入\r\n    excelIn = (e) => {\r\n        e.persist(); // 在react中  当 e.target 处于异步操作时， 会报错  主要是因为 setState 并不能保证同步操作，(避免在setState的更新函数中访问event变量)\r\n        let excelName = e.currentTarget.files[0].name;\r\n        importsExcel(e).then((data) => {\r\n         this.setState({loading:true});          \r\n          this.setState({\r\n              lists: data,\r\n              excelIn_flag: true,\r\n              excelName,\r\n          })    \r\n          setInterval(() => {\r\n            this.setState({loading:false});\r\n          },1000)\r\n        },(err) => {\r\n            console.log('导入失败',err);\r\n        })\r\n    }\r\n    // 导出\r\n    downloadExcel = () => {\r\n        let {lists} = this.state;\r\n        // 表头、 数据、 文件名        \r\n        exportExcel(this.columns,lists,\"用户信息表.xlsx\");\r\n    }\r\n    initForm = () => {\r\n        this.columns = [\r\n            {\r\n                title: '编号',\r\n                dataIndex: 'id',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '年龄',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n            },\r\n            {\r\n                title: '联系方式',\r\n                dataIndex: 'phone',\r\n                key: 'phone',\r\n            }\r\n        ];\r\n    }\r\n    render() {\r\n        let {lists,excelIn_flag,loading,excelName} = this.state;\r\n        const cardTit = (\r\n            <div>\r\n                <Button type=\"primary\" style={{marginRight: 20}} className=\"uploadFile\">\r\n                    <Input type=\"file\" accept=\".xls,.xlsx\" onChange={(e) => this.excelIn(e) }  /> \r\n                    {excelIn_flag ? `${excelName}文件导入成功！` : '请选择要导入的Excel文件'}\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => this.downloadExcel()}>导出Excel</Button>\r\n            </div>\r\n        )\r\n        return (\r\n            <Card type=\"inner\" className=\"product-index\" title={cardTit}>\r\n                <Table \r\n                    columns={this.columns} \r\n                    dataSource={lists} \r\n                    rowKey=\"id\"\r\n                    loading={loading} \r\n                />\r\n            </Card>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default ExcelOut;","import React, { Component } from 'react';\r\nimport { Route,Switch,Redirect } from 'react-router-dom';\r\nimport ExcelInOut from './ExcelInOut';\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n  }\r\n  render() { \r\n    return (\r\n      <Switch>\r\n        <Route path=\"/excel/inOrOut\" component={ExcelInOut} />  \r\n        <Redirect to=\"/excel/inOrOut\" />       \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Index;","import React, { Component } from 'react';\r\nimport {Card,Button} from 'antd';\r\nimport './../../assets/css/com.less'\r\n// import SlideVerify from './../../components/SlideVerify';\r\n// import './../../components/SlideVerify'\r\nclass SecurityValidation extends Component {\r\n  // state = {\r\n  //     url: \"\"\r\n  // }\r\n\r\n  \r\n  // componentDidMount() {\r\n  //     this.setState({ url: this.getImage() })\r\n  // }\r\n\r\n  // onReload = () => {\r\n  //   this.setState({ url: this.getImage() })\r\n  // }\r\n  // getImage = () => {\r\n  //   return `https://picsum.photos/300/150/?image=1`\r\n  // }\r\n  render() { \r\n    return (\r\n      <div className=\"container category-container\">\r\n        <Card title=\"滑动验证\">\r\n          {/*\r\n            <div className=\"desc-text\">点击按钮调出滑动验证模块，相关配置如下：</div>\r\n            <Button type=\"primary\">验证</Button>\r\n            <div class=\"container\">\r\n              <div id=\"captcha\" style=\"position: relative\"></div>\r\n            </div>\r\n          */}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SecurityValidation;","import React, { Component } from 'react';\r\nimport PropType from 'prop-types';\r\nclass SliderDots extends Component {\r\n   static propTypes = {\r\n    serialNum: PropType.number.isRequired,\r\n    currentIndex: PropType.number.isRequired\r\n   }\r\n   \r\n   liList = (num) => {\r\n        let li = [];\r\n        for(let i = 0;i<num;i++) {\r\n            li.push(i)\r\n        }\r\n        return li;\r\n   }\r\n   olLiClick = (i) => {\r\n    this.props.serialNumClick(i);\r\n\r\n   }\r\n   serialNumChecked = (i) => { // 设置li选中状态\r\n    let {serialNum} = this.props;\r\n    for (let i = 0; i < serialNum; i++) {\r\n        this.refs.serial_ol.children[i].className = ''\r\n    }\r\n    this.refs.serial_ol.children[i].className = 'current';\r\n   }\r\n    render() { \r\n        let {serialNum,currentIndex} = this.props;\r\n        let liArr = this.liList(serialNum);\r\n        return (\r\n            <ol ref=\"serial_ol\">\r\n                {\r\n                    liArr.map((i) => {\r\n                        return <li className={currentIndex === i ? 'current' : ''} index={i} key={i} onClick={() => {this.olLiClick(i)}}>{i+1}</li>\r\n                    })\r\n                }                \r\n            </ol>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SliderDots;","import React, { Component } from 'react';\r\n// import PropType from 'prop-types';\r\n\r\nimport sliderImg1 from './img/wf1.jpg';\r\nimport sliderImg2 from './img/wf2.jpg';\r\nimport sliderImg3 from './img/wf3.jpg';\r\nimport sliderImg4 from './img/wf4.jpg';\r\nimport sliderImg5 from './img/wf5.jpg';\r\nimport './slider.less';\r\nimport SerialNum from './SliderDots.jsx'\r\n\r\n\r\nclass Slider extends Component {\r\n    static defaultProps = {\r\n        autoPlay: true, // 是否自动播放\r\n        autoplaySpeed: 2000, // 播放速度\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentIndex: 0, // 记录当前索引\r\n            serialNum: 0, // 记录item数量\r\n            parentDom: ``, // 被移动元素的父元素\r\n            moveLen: 0, // 要移动的距离\r\n            sliderWidth: 0, // slider item的宽度\r\n            timerId: null, // 自动播放定时器\r\n        }\r\n    }\r\n   \r\n    componentDidMount() { // 组件第一次渲染完成，此时DOM节点已经生成，可以在这里调用ajax请求，返回数据后组件会重新渲染\r\n        this.getDom();\r\n    }\r\n    getDom = () => {\r\n        let sliderBox = this.refs.sliderBox;\r\n        let slider = sliderBox.children[0];\r\n\r\n        let sliderWidth = slider.offsetWidth;\r\n        let ul = slider.children[0]\r\n        // let ol = slider.children[1];\r\n\r\n        let arrow = sliderBox.children[1];\r\n        let preBtn = arrow.children[0];    \r\n        let nextBtn = arrow.children[1];\r\n        \r\n        let liLen = ul.children.length;\r\n\r\n        this.setState({\r\n            serialNum: liLen,\r\n            sliderWidth,\r\n            parentDom: ul,\r\n        })  \r\n       \r\n        // 无缝滚动，获取ul中的第一个和最后一个元素\r\n        // 获取ul中的第一个li\r\n        let firstLi = ul.children[0];\r\n        ul.appendChild(firstLi.cloneNode(true));\r\n        let {autoPlay} = this.props;\r\n        if(autoPlay) { // 自动播放\r\n            this.autoPlay();            \r\n        }\r\n\r\n    }\r\n    // 2、点击序号 动画的方式，切换图片\r\n    serialNumClick = (currentIndex) => {\r\n        let {parentDom,sliderWidth} = this.state;\r\n        this.setState({currentIndex});\r\n        // 以动画的方式切换图片\r\n        this.moveSlider(parentDom,-currentIndex*sliderWidth);\r\n    }\r\n    // 3 鼠标放到盒子上显示箭头\r\n    mouseEnter = () => {\r\n        this.refs.arrow.style.display = 'block';\r\n        this.stopautoPlay();\r\n    }\r\n    mouseeave = () => {\r\n        this.refs.arrow.style.display = 'none';   \r\n        this.autoPlay();     \r\n    }\r\n    // 4 实现上一张和下一张的功能\r\n    preBtn = () => {\r\n        let {currentIndex,serialNum,parentDom,sliderWidth} = this.state;\r\n        setTimeout(() => {\r\n            // 判断是否是克隆的第一张图片，如果是克隆的第一张图片，此时修改ul的坐标，显示真正的第一张图片\r\n            if(currentIndex === 0) {\r\n                this.serialNumClick(0); \r\n                this.setState({\r\n                    currentIndex: serialNum\r\n                })\r\n                parentDom.style.left = - serialNum*sliderWidth + 'px';\r\n            }\r\n\r\n            this.setState((state) => ({\r\n                currentIndex: state.currentIndex - 1\r\n            }))\r\n            this.serialNumClick(this.state.currentIndex); \r\n        },0)\r\n    }\r\n    nextBtn = () => {\r\n        let {currentIndex,serialNum,parentDom,sliderWidth} = this.state;\r\n        // 将setState操作改为同步的\r\n        setTimeout(() => {\r\n            // 判断是否是克隆的第一张图片，如果是克隆的第一张图片，此时修改ul的坐标，显示真正的第一张图片\r\n            if (currentIndex === serialNum) {\r\n                parentDom.style.left = '0px';\r\n                this.setState({\r\n                    currentIndex: 0\r\n                })\r\n            }\r\n            this.setState(state => ({\r\n                currentIndex: state.currentIndex + 1\r\n            }))\r\n            // 总共有5张图片，但是还有一张克隆的图片  克隆的图片的索引是5\r\n            if(this.state.currentIndex < serialNum) {\r\n                this.serialNumClick(this.state.currentIndex)                    \r\n            } else { //如果是最后一张图片 以动画的方式，移动到克隆的第一张图片\r\n                this.moveSlider(parentDom,-this.state.currentIndex*sliderWidth);\r\n                this.refs.serialNum.serialNumChecked(0);\r\n            }\r\n            \r\n        },0);\r\n    }\r\n    // 5 自动切换图片 \r\n    autoPlay = () => {\r\n        let {autoplaySpeed} = this.props;\r\n        this.stopautoPlay();\r\n        let timerId = setInterval(() => {\r\n            this.nextBtn();\r\n        },autoplaySpeed)\r\n        this.setState({timerId})\r\n    }\r\n    // 停止自动不妨\r\n    stopautoPlay = () => {\r\n        clearInterval(this.state.timerId);\r\n    }\r\n\r\n    // slider移动动画 \r\n    moveSlider = (element, target) => { // 要移动的元素，要移动多远的距离\r\n        // 判断页面上只有一个定时器在执行动画\r\n        if (element.timerId) {\r\n          clearInterval(element.timerId);\r\n          element.timerId = null;\r\n        }\r\n  \r\n        element.timerId = setInterval(function () {\r\n          // 步进  每次移动的距离\r\n          let step = 10;\r\n          // 盒子当前的位置\r\n          let current = element.offsetLeft;\r\n          // 当从400 到 800  执行动画\r\n          // 当从800 到 400  不执行动画\r\n  \r\n          // 判断如果当前位置 > 目标位置 此时的step  要小于0\r\n          if (current > target) {\r\n            step = - Math.abs(step);\r\n          }\r\n  \r\n          if (Math.abs(current - target) <= Math.abs(step)) {\r\n            // 让定时器停止\r\n            clearInterval(element.timerId);\r\n            // 让盒子到target的位置\r\n            element.style.left = target + 'px';\r\n            return;\r\n          }\r\n          // 移动盒子\r\n          current += step;\r\n          element.style.left = current + 'px';\r\n        }, 8)\r\n    }\r\n    \r\n    render() { \r\n        let {serialNum,parentDom,moveLen,sliderWidth,currentIndex} = this.state;\r\n        console.log('xxxx',this.props);\r\n        return (  \r\n            <div className=\"main-container magnifier\">\r\n                <div className=\"slider-container\" ref=\"sliderBox\" onMouseEnter={() => {this.mouseEnter()}} onMouseLeave={() => {this.mouseeave()}}>\r\n                    <div className=\"slider\">\r\n                        <ul>\r\n                            <li><img src={sliderImg1} alt=\"\" /></li>\r\n                            <li><img src={sliderImg2} alt=\"\" /></li>\r\n                            <li><img src={sliderImg3} alt=\"\" /></li>\r\n                            <li><img src={sliderImg4} alt=\"\" /></li>\r\n                            <li><img src={sliderImg5} alt=\"\" /></li> \r\n                        </ul>    \r\n                        {/* <slot name=\"slider\"></slot> */}\r\n                        {/* <ol dangerouslySetInnerHTML={{__html:serialNum}}></ol> */}\r\n                        <SerialNum serialNum={serialNum} currentIndex={currentIndex} serialNumClick={this.serialNumClick} ref=\"serialNum\" />\r\n                    </div>\r\n                    <div className=\"arrow\" ref=\"arrow\">\r\n                        <span className=\"leftArr\" onClick={() => {this.preBtn()}}>&lt;</span>\r\n                        <span className=\"rightArr\" onClick={() => {this.nextBtn()}}>&gt;</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Slider;","import React, { Component } from 'react';\r\nimport Slider from './../../components/Slider'\r\n\r\nclass SliderPage extends Component {\r\n    state = {\r\n        \r\n    }\r\n    render() { \r\n        const sliderConfig = {\r\n            autoPlay: false,\r\n            autoplaySpeed: 3000\r\n        }\r\n        return (  \r\n            <div className=\"main-container magnifier\">\r\n                <Slider {...sliderConfig}>\r\n                    <ul>\r\n                        <li>1</li>\r\n                        <li>2</li>\r\n                        <li>3</li>\r\n                        <li>4</li>\r\n                        <li>5</li> \r\n                    </ul> \r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SliderPage;","import React, { Component } from 'react';\r\n\r\nclass UploadImg extends Component {\r\n   \r\n  render() { \r\n    return (\r\n      <div>\r\n        上传图片\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default UploadImg;","import React, { Component } from 'react';\r\nimport MaginfierBig from './../../assets/img/magnifier-big.jpg';\r\nimport MaginfierSmall from './../../assets/img/magnifier-small.jpg';\r\n\r\n\r\nclass Index extends Component {\r\n\r\n  componentWillMount() {\r\n\r\n  }\r\n  componentDidMount() { // 组件第一次渲染完成，此时DOM节点已经生成，可以在这里调用ajax请求，返回数据后组件会重新渲染\r\n    this.init();\r\n  }\r\n  init = () => {\r\n    let box = this.refs.box;\r\n    let smallBox = box.children[0];\r\n    let mask = smallBox.children[1];\r\n\r\n    let bigBox = box.children[1];\r\n    let bigBoxImg = bigBox.children[0];\r\n\r\n    // 鼠标进入small盒子，显示遮罩层\r\n    smallBox.onmouseenter = function () {\r\n      mask.style.display = 'block';\r\n      bigBox.style.display = 'block';\r\n    }\r\n    smallBox.onmouseleave = function (e) {\r\n      mask.style.display = 'none';\r\n      bigBox.style.display = 'none';\r\n    }\r\n    /**\r\n     * mouseenter mouseleave  不会触发事件冒泡\r\n     * mouseover mouseout 会触发事件冒泡\r\n    */\r\n    box.onmousemove = (e) => {\r\n      e = e || window.event;\r\n      /**\r\n       * 让遮罩层随着鼠标进行移动\r\n       *  1、获取鼠标在盒子中的位置 = 鼠标在当前页面的位置 - 盒子距离浏览器的位置\r\n       *  2、让鼠标出现在mask的中心位置 \r\n      */\r\n      let maskX = (e.pageX - box.offsetLeft) - mask.offsetWidth / 2;\r\n      let maskY = (e.pageY - box.offsetTop) - mask.offsetHeight / 2;\r\n\r\n      /**\r\n       * 把mask限制在box中\r\n      */\r\n      maskX = maskX < 0 ? 0 : maskX;\r\n      maskY = maskY < 0 ? 0 : maskY;\r\n\r\n      let maskMaxX = box.offsetWidth - mask.offsetWidth;\r\n      let maskMaxY = box.offsetHeight - mask.offsetHeight;\r\n\r\n      maskX = maskX > maskMaxX ? maskMaxX : maskX;\r\n      maskY = maskY > maskMaxY ? maskMaxY : maskY;\r\n\r\n      mask.style.left = `${maskX}px`;\r\n      mask.style.top = `${maskY}px`;\r\n\r\n      // 设置大图偏移的位置\r\n      // mask移动的距离 / mask最大能够移动的距离 = 大图片移动的距离 / 大图片最大能够移动的距离\r\n\r\n      // 大图片最大能够移动的距离\r\n      let bigImgMaxX = bigBoxImg.offsetWidth - bigBox.offsetWidth; // 得到的是一个负数\r\n      let bigImgMaxY = bigBoxImg.offsetHeight - bigBox.offsetHeight; // 得到的是一个负数\r\n\r\n\r\n      // 大图片移动的距离\r\n      let bigImgX = maskX / maskMaxX * bigImgMaxX;\r\n      let bigImgY = maskY / maskMaxY * bigImgMaxY;\r\n\r\n      bigBoxImg.style.left = `${-bigImgX}px`;\r\n      bigBoxImg.style.top = `${-bigImgY}px`;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // 遮罩宽度 / 小盒子宽度 = 大盒子宽度 / 大盒子中图片的宽度\r\n    return (\r\n      <div className=\"main-container magnifier\">\r\n        放大镜效果\r\n        <div className=\"box\" ref=\"box\">\r\n          <div className=\"small\">\r\n            {/*  webp 是google公司研发的，在ie和火狐中是不支持的，(webp相比其它格式的图片体积更小) */}\r\n            <img src={MaginfierSmall} alt=\"\" />\r\n            <div className=\"mask\"></div>\r\n          </div>\r\n          <div className=\"big\">\r\n            <img src={MaginfierBig} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react';\r\nimport { Route,Switch,Redirect } from 'react-router-dom';\r\nimport SecurityValidation from './SecurityValidation';\r\nimport Slider from './Slider';\r\nimport UploadImg from './UploadImg';\r\nimport Magnifier from './Magnifier';\r\n\r\nclass Index extends Component {\r\n  render() { \r\n    return (\r\n      <Switch>\r\n        <Route path=\"/com/security\" component={SecurityValidation} />\r\n        <Route path=\"/com/slider\" component={Slider} />  \r\n        <Route path=\"/com/upload-img\" component={UploadImg} />\r\n        <Route path=\"/com/magnifier\" component={Magnifier} />          \r\n        <Redirect to=\"/com/security\" />       \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Index;","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Layout, Modal } from 'antd';\r\nimport storageUtils from './../../utils/storageUtils';\r\nimport LeftNav from './../../components/LeftNav';\r\nimport Header from './../../components/Header';\r\nimport Home from './../Home/Home'\r\nimport Category from './../Category/Category';\r\nimport Product from './../Product/Product';\r\nimport Role from './../Role/Role';\r\nimport User from './../User/User';\r\nimport Bar from './../Graph/Bar';\r\nimport Line from './../Graph/Line';\r\nimport PieChart from './../Graph/PieChart';\r\nimport NotFound from './../NotFound'\r\nimport Guide from './../Guide';\r\nimport Excel from './../Excel';\r\nimport Com from './../Componment';\r\n\r\nimport './../../assets/css/admin.less'\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\nconst { confirm } = Modal;\r\nclass Admin extends Component {\r\n  state = {\r\n    collapsed: false\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    })\r\n  }\r\n  loginOut = () => {\r\n    confirm({\r\n      content: '确定要退出登录吗？',\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        console.log('OK', this.props.history);\r\n        React.$storage_utils.removeUser();\r\n        this.props.history.replace('/login');\r\n      },\r\n    });\r\n  }\r\n \r\n  render() {\r\n    let user = JSON.parse(storageUtils.getUser());\r\n    console.log('用户信息',user);\r\n    if (!user || !user._id) {\r\n      return <Redirect to='/login' />;\r\n    }\r\n    const { collapsed } = this.state;\r\n    return (\r\n      // <div className={['left-nav',collapsed ? ' left-nav-collapsed':''].join('')}>\r\n      <Layout style={{ minHeight: '100%' }}>\r\n        <Sider collapsed={collapsed}>\r\n          <LeftNav collapsed={collapsed} />\r\n        </Sider>\r\n        <Layout>\r\n          {/* 父组件将值传递给子组件 */}\r\n          <Header collapsed={collapsed} toggleCollapsed={this.toggleCollapsed} loginOut={this.loginOut} />\r\n          <Content>\r\n            <Switch>\r\n              {/* 完全匹配(精确匹配) */}\r\n              <Redirect exact={true} from='/' to='/home' />\r\n              <Route path=\"/pro/category\" component={Category} />\r\n              <Route path=\"/pro/product\" component={Product} />\r\n              <Route path=\"/role\" component={Role} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/graph/bar\" component={Bar} />\r\n              <Route path=\"/graph/line\" component={Line} />\r\n              <Route path=\"/graph/pie\" component={PieChart} />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/guide\" component={Guide} />\r\n              <Route path=\"/excel\" component={Excel} />\r\n              <Route path=\"/com\" component={Com} />                      \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center', color: '#ccc' }}>推荐获得最佳的效果体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './../../assets/css/login.less'\r\nimport { Form, Input, Button,message,notification} from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { reqLogin } from './../../api'\r\nimport storageUtils from './../../utils/storageUtils';\r\nimport {connect} from 'react-redux'\r\nimport {loginFunc} from './../../redux/action'\r\n\r\n\r\nconst Item = Form.Item; // 注意const不能写在import之前\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    loading: false\r\n  }\r\n  enterLoading = () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n  }\r\n  handleSubmit = e=> {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err,values) => {\r\n      if(!err) {\r\n        let { username,password } = values;\r\n        console.log('用户输入数据',values);\r\n        /**\r\n         * 使用 async 和 await 简化 promise 的操作，不用使用 .then()来指定成功或失败的回调函数\r\n         * 以同步编码(没有回调函数了，有回调函数的就是异步编码方式)\r\n         * 1、哪里写 await ?\r\n         *    - 在返回promise的表达式的左侧写await,不想要promise,想要promise异步执行成功的结果\r\n         * 2、哪里写 async ?\r\n         *    - await所在函数(最近的)定义的左侧写async \r\n         */\r\n        // try {\r\n        //   const response = await reqLogin({ username,password });\r\n        //   console.log('请求成功',response.data);\r\n        // } catch(error) {\r\n        //   console.log('请求出错',error);\r\n        // }\r\n        \r\n\r\n        // 不使用 redux 版本的 代码\r\n        const response = await reqLogin({ username,password });\r\n        this.enterLoading();\r\n        if(response.status === 0) {\r\n          message.success('登录成功！');\r\n          storageUtils.setUser(JSON.stringify(response.data));\r\n          // goBack() 返回上一级路由\r\n          // this.props.history.push('/'); 使用push的话，路由可以回退 \r\n          this.props.history.replace('/'); // 路由不可以回退，不用记录路由历史\r\n        } else {\r\n          this.setState({\r\n            loading:false\r\n          })\r\n          message.error(response.msg)\r\n        }\r\n        \r\n        // 使用 redux 版本的代码 \r\n        // this.props.loginFunc(username,password);\r\n      //  console.log('登录',);    \r\n        \r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    })\r\n  }\r\n  // 对密码进行自定义验证\r\n  validatePwd = (rule, value, callback)=> {\r\n    // callback() 验证通过\r\n    // callback(\"xxx\") 验证失败，并指定提示的文本\r\n    if(!value) {\r\n      callback('必须输入密码！');\r\n    } else if(value.length < 4) {\r\n      callback('密码长度必须大于4位！');      \r\n    } else if(value.length > 12 ) {\r\n      callback('密码长度必须小于12位');\r\n    } else if(!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      console.log(value);\r\n      callback('密码必须是由数字、字母或下划线组成');      \r\n    } else { // 验证通过\r\n      callback();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    notification.open({\r\n      message: '欢迎使用后台管理平台',\r\n      duration: null,\r\n      description: '账号 admin(管理员) 其它(游客) 密码随意'\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    notification.destroy();\r\n    this.timer && clearTimeout(this.timer);\r\n  }\r\n\r\n  render() {\r\n    // 判断用户是否已经登录\r\n    let user = JSON.parse(storageUtils.getUser());\r\n    if(user && user.username) {\r\n      return <Redirect to='/' />;\r\n    }\r\n\r\n    // 得到具有强大功能的form对象\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"loginForm\">\r\n          <h2>用户登录</h2>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <Item>\r\n              {getFieldDecorator('username', {\r\n                // 声明式验证，直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  { required: true,whitespace:false, message: 'Please input your username!' },\r\n                  { min: 4, message: '用户名长度必须大于4位！' },\r\n                  { max: 12, message: '用户名长度必须小于12位' },\r\n                  {pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须是由数字、字母或下划线组成'}\r\n                ]\r\n              })(\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" className=\"form-input\" />\r\n              )}\r\n            </Item>\r\n            <Item>\r\n              {getFieldDecorator('password', {\r\n                rules: [{\r\n                  // 自定义验证\r\n                  validator: this.validatePwd\r\n                }]\r\n              })(\r\n                <Input prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Item\r\n              name=\"submit-btn\"\r\n              className=\"submitBtn\"\r\n            >\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n              loading={this.state.loading}>\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/**\r\n * 高阶函数\r\n *   1). 一类特别的函数\r\n *        a. 接收函数类型的参数\r\n *        b. 返回值是函数  \r\n * 高阶组件\r\n *   1). 本质就是一个函数\r\n *   2). 接收一个组件(被包装组件)，返回一个新的组件(包装组件)，包装组件会向被包装组件传入特定属性\r\n *   被包装组件是包装组件的一个子组件\r\n *   3). 作用：扩展组件功能\r\n *   4). 高阶组件也是高阶函数：接收一个组件函数，返回一个新的组件函数\r\n *   \r\n */\r\n\r\n/**\r\n * 包装Form组件生成一个新的组件：Form(Login)\r\n * 新组件会向Form组件传递一个强大的对象属性：form\r\n */\r\nconst WrapLogin = Form.create()(Login);\r\n// export default WrapLogin;\r\n\r\n// 将使用了 redux 的 UI 包装成容器组件\r\n\r\nexport default connect(\r\n  state => ({userinfo:state.userinfo}),\r\n  {loginFunc}\r\n)(WrapLogin);\r\n","/**\r\n * 根组件\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport Admin from './pages/Admin/Admin';\r\nimport Login from './pages/Login/Login';\r\n\r\n class App extends Component {\r\n     render() { \r\n         return (\r\n            <BrowserRouter>\r\n                <Switch> {/* 只匹配其中一个路由 */}\r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <Route path=\"/\" component={Admin}></Route>                    \r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n     }\r\n }\r\n  \r\n export default App;","import React from 'react';\r\nimport {combineReducers} from 'redux'\r\nimport storageUtil from './../utils/storageUtils';\r\nimport {SET_HEAD_TITLE,RECIVER_USER,SHOW_ERROR_MSG} from './action-types';\r\n\r\n\r\n\r\nconst initUser = JSON.parse(storageUtil.getUser());\r\nfunction userinfo(state=initUser,action) {\r\n  switch (action.type) {\r\n    case RECIVER_USER:\r\n      return action.data;\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.data;\r\n      // 注意：返回的数据需要是一个对象\r\n      // 在原有的状态数据基础上，添加新的数据\r\n      return {...state,errorMsg}  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction headetitle(state='首页',action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport default combineReducers({\r\n  userinfo,\r\n  headetitle\r\n})\r\n\r\n","import {createStore,applyMiddleware} from 'redux';\r\nimport reducer from './reducer';\r\n\r\n// 用来实现redux异步的中间件插件\r\nimport thunk from 'redux-thunk';\r\n\r\n// redux调试工具\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n \r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)));","/**\r\n * 入口JS\r\n */\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './assets/css/base.css';\r\nimport storageUtils from './utils/storageUtils';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\n// 将storageUtils绑定到react全局\r\n// 使用：React.$storage_utils\r\nReact.$storage_utils = storageUtils;\r\n// ReactDom.render(<App />,document.getElementById('root'));\r\nReactDom.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n),document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5eec74d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.5a186c66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wf1.52628cca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wf2.7e1fad13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wf3.55b8b439.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wf4.0e64f75b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wf5.a6e0f6bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier-big.29655a38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier-small.6d855e03.jpg\";"],"sourceRoot":""}